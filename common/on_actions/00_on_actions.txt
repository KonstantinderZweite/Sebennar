#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.

# Anbennar Added Stuff
# anbennar_setup.1
# Commented a lot of stuff
# Stuff that prob shouldnt be commented -> muslim school events

# country
on_startup = {
	emperor = {
		save_global_event_target_as = Emperor
	}
	if = {
		limit = {
			is_emperor_of_china = yes
		}
		save_global_event_target_as = EmperorOfChina
	}
	if = {
		limit = {
			OR = {
				was_tag = Y20
				tag = Y20
			}
		}
		save_global_event_target_as = feiten_or_was_feiten_target
	}

	#institution spread help

	events = {
		# muslim_school_events.20 #Pick School
		high_philosophy_events.0

		#Anbennar
		lilac_wars.1
		lilac_wars.2
		#lilac_wars.1c
		#initialization.1
		anbennar_setup.1		#Sets up Monstrous Opinions
		anbennar_setup.2		#Sets up Lilac Wars Parties
		anbennar_setup.3		#Sets up discovered regions #### Heavy event, might need to be broken down with the addition of new province/country if Black Screen Crash at startup ######
		anbennar_setup.4		#Pragmatic Sanction
		anbennar_setup.6		#Mage Organization Setup
		anbennar_setup.11		#Adventurer Organization Setup
		anbennar_setup.7		#Evil/Witch King opinions
		anbennar_setup.9		#Global Setup for Racial Admin Mil #### Heavy event, might need to be broken down with the addition of new province/country if Black Screen Crash at startup ######
		anbennar_setup.10		#Sets up Greentide Adventurer opinion
		anbennar_setup.12
		anbennar_setup.13		#Adds a hacky delay to prevent existing adventurers colonizing straight away
		#estate_organization.1		#Give unassigned countries appropriate modifier - does anbennar_setup.6 for rest of game
		#kheteratan_events.1		#Sets up Khetarch for Kheterata
		#kobold_events.1 		#Sets up for kobolds
		diggy.108				#Dwarovar Claimer event
		diggy.110				#Hold and Colonial nerf setup event
		#deepwoods.100			#Deepwoods setup - this caused black screen crash and is redundant as other anbennar_setup.3 does it
		verkalgulan_events.1		#Verkal Gulan setup
		#vegan.101				#Setup abundant wood in deepwoods
		rahenraj.0				#Setup for the Raj
		jaddari_missions.1000	#AI boost for Jaddari
		centaur.3				#Horde modifier for centaur
		ogre.1					#Adds Reign of Ziltagh to Maghargma
		ogre.2					#Sets up warring northern Fathide clan opinions
		ogre.3					#Sets up Ogre Monarch v Tribal opinion
		ogre.4					#Sets up Ogre Tribal v Monarch opinion
		magic_ruler.109			#Sets up magic for rulers with undefined skills
		# anbennar_setup.17		#exodus goblin invasion
		flavor_corintar.3		#Adds Lothane Bluetusk's Leadership to Corintar
		religious_leagues.10	#Starting religious peace
		flavor_neckcliffe.1		#Neckcliffe intro event and setting up the debuffs
		flavor_arverynn.0		#Arverynn intro event
		flavor_trompolere.0		#Trompolere intro event
		flavor_fadhevych.0		#Fadhevych intro event
		flavor_stanyrhrada.0	#Stanyrhrada intro event
		flavor_toarnen.1		#The Whitecliffs burghers uprising of 1356
		xhazobkult_events.0		#Xhazobkult setup
		bulwar_flavour.28		#Sets up Surani Refugees in Bulwar
		azka_evran.1			#Azka-Evran intro event
		one_xia.9				#Setup for the Xia
		flavor_jiantsiang.1		#jiantsiang setup
		flavor_nuugdan_tsarai.1					#Faceless Queen
		flavour_balrijin.29	#Balrijin-Lanjinhui favor/trust setup
		the_command.0			#The Great Command
		spirits.001				#Sets up temple coverage
		treasurefleet.0			#Treasure Fleet Begin Cycle
		guhe.100 				#Guhe Setup Event
		kheionai.0				#Deathwinds Setup event
		flavor_ameion.1			#Ameion Laskaris intro
		flavor_chaingrasper.1	#Chaingrasper Dak intro
		flavour_tluukt.64		#Adds Rule of Tluukt to Tluukt


		#Silver Families
		silver_families.1		#Silmuna
		silver_families.2		#Siloriel
		silver_families.3		#Silcalas
		silver_families.4		#Silistra
		silver_families.5		#Silnara
		silver_families.6		#Silebor
		silver_families.7		#Silurion
		silver_families.8		#Silgarion

		#anbennar_setup_player.1	#give magic org to player
		#anbennar_setup_player.2	#give racial admin mil to player

		#########     Racial Pop Stuff     ###########
		#race_setup_events.1		#Sets up Racial Tolerance Level
		#race_setup_events.2		#Ai only event - Affects how the ai uses the system
		#race_setup_events.4		#Add minorities to province / Culture Conversion -
		#race_setup_events.7		#Its 4 but for everyone
		#race_setup_events.9		#Expel/Purge opinions
		#########     Racial Pop Stuff     ###########

		#artifice
		#anbennar_setup.18
		anbennar_setup.19
		migration_force_settle.2
		great_conqueror.1				#GC setup
		new_sun_cult.7 			#NSC setup in case MoH is disabled
		flavor_honsai.1 #Ghostempror lifetime startup

		shatteredcrown.0 #lore disclaimer
	}

	#update_artifice_points = yes
	country_event = {
		id = anbennar_setup.20
		days = 32
	}

	#Introduction to the castes
	country_event = {
		id = estate_castes_events.0
		days = 15
	}

	# Add wine to Wine Lords
	if = {
		limit = {
			NOT = { is_year = 1445 }
			OR = {
				has_reform = wine_lord_reform
				has_reform = roilsard_elective
				has_reform = wineport_merchants
			}
		}
		every_owned_province = {
			limit = {
				trade_goods = wine
			}
			add_province_modifier = {
				name = wine_lord_wine
				duration = -1
				hidden = yes
			}
		}
	}

	#Derek Deland Setup and explanation
	A13 = {
		country_event = {
			id = flavor_gawed.4
			days = 1
		}
	}

	#Mulen goblin setup
	# F50 = {
	# 	country_event = {
	# 		id = flavour_mulen.3
	# 		days = 3650
	# 	}
	# }

	# every_country = {
		# country_event = { id = anbennar_setup.9 days = 2 }
	# }

	if = {
		limit = {
			NOT = { is_year = 1445 }
			capital_scope = {
				OR = {
					superregion = escann_superregion
					region = forlorn_vale_region
				}
				NOT = {
					region = dostanor_region
					region = ourdia_region
					region = daravans_folly_region
				}
			}
			NOT = {
				culture_group = orcish
				culture_group = goblin
			}
			NOT = { tag = A32 }	#Dont let Ibevar, Silent Repose, and Orda Aldresia get this
			NOT = { tag = A83 }
			NOT = { tag = A77 }
		}
		country_event = { id = greentide.0 days = 1 }
	}

	# AI need this event on day 1 or they release shit
	if = {
		limit = {
			tag = A30
			ai = yes
			NOT = { is_year = 1445 }
		}
		country_event = { id = flavor_wex.2 }
	}

	if = {
		limit = {
			tag = G40 # Tehanek
			NOT = { is_year = 1445 }
		}
		country_event = { id = damestear.4 days = 14600 random = 3650 }
	}

	if = {
		limit = {
			NOT = { is_year = 1445 }
			capital_scope = {
				OR = {
					superregion = escann_superregion
					region = forlorn_vale_region
				}
				NOT = { region = dostanor_region region = ourdia_region }
			}
			OR = {
				culture_group = orcish
				culture_group = goblin
			}
		}
		country_event = { id = greentide.1 days = 1 }
	}

	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Z18
		}
		country_event = { id = greentide.2 days = 1 }
	}

	if = {
		limit = {
			NOT = { is_year = 1445 }
			culture = white_reachman
		}
		country_event = { id = greentide.3 days = 1 }
	}

	if = {
		limit = {
			tag = A32
			NOT = { has_country_flag = ibevar_reformation_flag }
		}
		set_country_flag = ibevar_reformation_flag
		add_disaster_progress = { disaster = ibevar_reformation value = 100 }
		every_owned_province = {
			limit = { has_province_modifier = ibevar_old_tradition }
			set_variable = { ibReform = 100 }
		}
	}

	if = {
		limit = {
			is_year = 1444
			tag = Y58
		}
		country_event = { id = lotdekkhang.4 days = 3 } #Lot Dekkhang intro event and setting up hobgoblin tolerance
	}

	if = {
		limit = {
			owns_core_province = 4565
		}
		country_event = { id = bim_lau_flavour.4 days = 1 } #Bim Lau Necropolis Setup
    }

	Y09 = { #tyrant system setup
		country_event = {
			id = bianfang.7
			days = 1
		}
	}

	#Khom civil war events START
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y67	#Ma Hoang
		}
		country_event = {
			id = khom_civilwar.1
		}
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y66	#Hon Sai
		}
		country_event = {
			id = khom_civilwar.2
		}
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y71	#Kudet Kai
		}
		country_event = {
			id = khom_civilwar.3
		}
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y72	#Chien Binhrung
		}
		country_event = {
			id = khom_civilwar.4
		}
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y63	#Verkal Ozovar
		}
		country_event = {
			id = khom_civilwar.10
			days = 20
			random = 20
		}
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y76	#Hebat Hari
		}
		country_event = {
			id = khom_civilwar.15
			days = 20
			random = 20
		}
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y73	#Sirtan
		}
		country_event = {
			id = khom_civilwar.20
			days = 40
			random = 40
		}
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			tag = Y67	#Ma Hoang
		}
		country_event = {
			id = khom_civilwar.26
			days = 270
			random = 90
		}
	}
	#Khom civil war events END

	#########     Racial Pop Stuff     ###########
	country_event = { id = race_setup_events.1 days = 1 }
	country_event = { id = race_setup_events.2 days = 1 }
	country_event = { id = race_setup_events.4 days = 1 }
	country_event = { id = race_setup_events.9 days = 1 }

	country_event = { id = race_setup_events.6 days = 1 } #On Culture Promote
	country_event = { id = racial_modifiers.7 days = 1 } #Save primary culture
	#########     Racial Pop Stuff     ###########

	if = {
		limit = {
			has_dlc = "Cradle of Civilization"
			has_country_modifier = tur_janissary
		}
		remove_country_modifier = tur_janissary
	}
	# initialize_schools_effect = yes #This is only used here but is used for readability of on_action file.
	anb_initialize_schools_effect = yes
	if = {
		limit = { OR = { tag = J06 tag = J07 } }
		country_event = { id = lake.42 } #Explain Ultakal Decree
	}
	#Mother Akan event cycle start
	if = {
		limit = {
			NOT = { has_global_flag = akan_cycle_timer }
			NOT = { is_year = 1445 }
		}
		set_global_flag = akan_cycle_timer
		random_country = {
			country_event = {
				id = mother_akan.4
				days = 1315
			}
		}
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_global_flag = mother_akan_2
	}
	#Mother Akan mountain count start
	if = {
		limit = { NOT = { is_year = 1445 } }
		REB = { set_variable = { akan_mountains = 2 } }
	}

	#Birsartanses setup
	F21 = {
		country_event = { id = flavour_birsartanses.0 }
	}

	if = {
		limit = { tag = R51 NOT = { check_variable = { diplomaticAnnexations = 1 } } }
		set_variable = { diplomaticAnnexations = 0 }
	}

	ynnic_setup_effect = yes
	#Ynn Worship event cycle start
	if = {
		limit = {
			NOT = { has_global_flag = ynn_cycle_timer }
			NOT = { is_year = 1445 }
		}
		set_global_flag = ynn_cycle_timer
		random_country = {
			country_event = {
				id = ynn_zodiac.1
				days = 1145
			}
		}
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_global_flag = ynn_zodiac_7
	}
	update_magic_study_experience_modifier = {}

	# Expedition
	REB = { country_event = { id = diggy_expedition.0 } }

	if = { #Starts Azjakuma - Command Truce | sets event to give aikogeoke to owner of akhortosal 70 years after start
		limit = {
			tag = Y01
			NOT = { has_country_flag = oni_truce_happened } #because it happens 15 days after game start
			#prevents happening multiple times if you reload before then
		}
		country_event = {
			id = flavor_azjakuma.15
			days = 15
		}
		set_country_flag = oni_truce_happened #cleared when event is fired, it has fire_only_once
	}

	#Remnant colonist removal
	if = {
		limit = {
			has_country_flag = dwarovar_remnant
			NOT = { has_country_flag = remnant_stagnation_disaster_end }
			NOT = { has_country_modifier = remnant_legacy }
		}
		add_country_modifier = { name = remnant_legacy duration = 31 hidden = yes }
	}

	if = { #sets dev cost reduction in capital area on game start, might move to history files once all governments are in
		limit = {
			has_government_attribute = lower_dev_cost_in_capital_state
			NOT = { capital_scope = { has_province_modifier = lower_dev_cost_in_capital_state_modifier } }
		}
		capital_scope = {
			area = {
				add_province_modifier = {
					name = lower_dev_cost_in_capital_state_modifier
					duration = -1
					hidden = yes
				}
			}
		}
	}

	if = {
		limit = {
			has_reform = hobgoblin_stratocracy_reform
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_wolf_command_war_room_rights } }
			remove_faction = hob_wolf_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_boar_command_war_room_rights } }
			remove_faction = hob_boar_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_lion_command_war_room_rights } }
			remove_faction = hob_lion_command
		}
		if = {
			limit = { has_estate_privilege = estate_dragon_command_war_room_rights }
			add_faction = hob_dragon_command
		}
		if = {
			limit = { has_estate_privilege = estate_elephant_command_war_room_rights }
			add_faction = hob_elephant_command
		}
		if = {
			limit = { has_estate_privilege = estate_tiger_command_war_room_rights }
			add_faction = hob_tiger_command
		}
	}

	if = {
		limit = {
			OR = {
				has_reform = newshire_stewardship
				has_reform = newshire_high_stewardship
			}
		}
		every_owned_province = {
			limit = {
				OR = {
					trade_goods = grain
					trade_goods = livestock
				}
			}
			add_province_modifier = {
				name = newshire_stewardship_boost
				duration = -1
				hidden = yes
			}
		}
	}
}

# country
on_religion_change = {
	on_religion_change_estate_privileges_effect = yes
	#judaism_on_religion_change_effect = yes
	###removes catholic modifiers
	#	remove_country_modifier = counter_reformation
	#	remove_country_modifier = the_statue_in_restraint_of_appeals
	#	remove_country_modifier = revocation_of_restraint_of_appeals
	#	remove_country_modifier = bavarian_jesuits
	#	remove_country_modifier = the_societas_jesu
	#	remove_country_modifier = the_declaration_of_indulgence
	#	remove_country_modifier = de_heretico_comburendo
	#	remove_country_modifier = the_conventicle_act
	#removes ravelian modifiers
	if = {
		limit = { NOT = { has_dlc = "Emperor" } }
		remove_country_modifier = first_council_harsh
		remove_country_modifier = first_council_conciliatory
		remove_country_modifier = second_council_harsh
		remove_country_modifier = second_council_conciliatory
		remove_country_modifier = third_council_harsh
		remove_country_modifier = third_council_conciliatory
		remove_country_modifier = fourth_council_harsh
		remove_country_modifier = fourth_council_conciliatory
		if = {
			limit = { religion = ravelian }
			if = {
				limit = { has_global_flag = first_council_harsh }
				add_country_modifier = {
					name = first_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = first_council_conciliatory }
				add_country_modifier = {
					name = first_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = second_council_harsh }
				add_country_modifier = {
					name = second_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = second_council_conciliatory }
				add_country_modifier = {
					name = second_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = third_council_harsh }
				add_country_modifier = {
					name = third_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = third_council_conciliatory }
				add_country_modifier = {
					name = third_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = fourth_council_harsh }
				add_country_modifier = {
					name = fourth_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = fourth_council_conciliatory }
				add_country_modifier = {
					name = fourth_council_conciliatory
					duration = -1
				}
			}
		}
	}
	# if = {
	# 	limit = {
	# 		has_reform = indian_sultanate_reform
	# 		NOT = { religion_group = muslim }
	# 	}
	# 	remove_government_reform = indian_sultanate_reform
	# }

	# if = {
	# 	limit = {
	# 		has_reform = feudal_theocracy
	# 		NOT = { religion_group = muslim }
	# 	}
	# 	remove_government_reform = feudal_theocracy
	# }

	# if = {
	# 	limit = {
	# 		government = native
	# 		OR = {
	# 			religion = nahuatl
	# 			religion = mesoamerican_religion
	# 			religion = inti
	# 		}
	# 	}
	# 	change_government = monarchy
	# 	add_government_reform = autocracy_reform
	# }


	if = {
		limit = {
			has_heir = yes
		}
		set_heir_religion = ROOT
	}
	if = {
		limit = {
			has_regency = no
		}
		set_ruler_religion = ROOT
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			has_consort = yes
		}
		set_consort_religion = ROOT
	}
	# if = {
	# 	limit = {
	# 		NOT = { religion = orthodox }
	# 	}
	# 	every_known_country = {
	# 		limit = {
	# 			reverse_has_opinion_modifier = {
	# 				who = ROOT
	# 				modifier = closed_down_the_patriarchate
	# 			}
	# 		}
	# 		reverse_remove_opinion = {
	# 			who = ROOT
	# 			modifier = closed_down_the_patriarchate
	# 		}
	# 	}
	# }
	# Anbennar
	# if = {
		# limit = {
			# religion = catholic
			# has_ruler_flag = personal_catholic_sympathies
		# }
		# country_event = { id = protestantism_events.19 }
	# }
	# if = {
		# limit = {
			# religion = protestant
		# }
		# set_country_flag = converted_to_protestantism
	# }
	if = {
		limit = {
			religion = corinite
		}
		set_country_flag = converted_to_corinite
	}
	if = {
		limit = {
			religion = ravelian
		}
		set_country_flag = converted_to_ravelian
	}
	if = {
		limit = { has_country_modifier = bav_religious_mandate_mod }
		remove_country_modifier = bav_religious_mandate_mod
	}
	add_country_modifier = {
		name = recently_changed_religion_dummy
		duration = 10
		hidden = yes
	}
	if = {
		limit = {
			NOT = { religion_group = muslim }
			any_owned_province = { has_province_modifier = sufi_shrine }
		}
		every_owned_province = {
			limit = { has_province_modifier = sufi_shrine }
			remove_province_modifier = sufi_shrine
		}
	}

	#Mother Akan mountain count up on conversion
	if = {
		limit = {
			owns = 383
			religion = mother_akan
			383 = { has_owner_religion = yes }
		}
		country_event = { id = mother_akan.3 }
		383 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 390
			religion = mother_akan
			390 = { has_owner_religion = yes }
		}
		390 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 392
			religion = mother_akan
			392 = { has_owner_religion = yes }
		}
		392 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 395
			religion = mother_akan
			395 = { has_owner_religion = yes }
		}
		395 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 396
			religion = mother_akan
			396 = { has_owner_religion = yes }
		}
		396 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 397
			religion = mother_akan
			397 = { has_owner_religion = yes }
		}
		397 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 398
			religion = mother_akan
			398 = { has_owner_religion = yes }
		}
		398 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 401
			religion = mother_akan
			401 = { has_owner_religion = yes }
		}
		401 = {
			add_permanent_province_modifier = {
				name = akan_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	#Mother Akan mountain count down on conversion
	if = {
		limit = {
			owns = 383
			NOT = { religion = mother_akan }
			383 = { has_province_modifier = akan_ascetic_cult }
		}
		383 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 390
			NOT = { religion = mother_akan }
			390 = { has_province_modifier = akan_ascetic_cult }
		}
		390 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 392
			NOT = { religion = mother_akan }
			392 = { has_province_modifier = akan_ascetic_cult }
		}
		392 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 395
			NOT = { religion = mother_akan }
			395 = { has_province_modifier = akan_ascetic_cult }
		}
		395 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 396
			NOT = { religion = mother_akan }
			396 = { has_province_modifier = akan_ascetic_cult }
		}
		396 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 397
			NOT = { religion = mother_akan }
			397 = { has_province_modifier = akan_ascetic_cult }
		}
		397 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 398
			NOT = { religion = mother_akan }
			398 = { has_province_modifier = akan_ascetic_cult }
		}
		398 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 401
			NOT = { religion = mother_akan }
			401 = { has_province_modifier = akan_ascetic_cult }
		}
		401 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}

	#Mother Akan normal conversion
	if = {
		limit = {
			religion = mother_akan
			NOT = { owns = 383 }
			NOT = { owns = 390 }
			NOT = { owns = 392 }
			NOT = { owns = 395 }
			NOT = { owns = 396 }
			NOT = { owns = 397 }
			NOT = { owns = 398 }
			NOT = { owns = 401 }
		}
		country_event = { id = mother_akan.3 }
	}

	#Converting into Ynnic religion
	if = {
		limit = {
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		ynnic_setup_effect = yes
		if = {
			limit = {
				NOT = { has_country_flag = ynn_river_worship_flag }
			}
			set_country_flag = stuir_balia_visible	#Get Stuir Balia notification upon converting to YRW
		}
		set_country_flag = ynn_river_worship_flag	#add a tracker for cleanup when converting out
		country_event = { id = ynn_zodiac.3 }	#Ynn Worship deity set

		if = {
			limit = {
				has_regency = no
				NOT = {
					has_ruler_modifier = ynn_zodiac_ruler_1
					has_ruler_modifier = ynn_zodiac_ruler_2
					has_ruler_modifier = ynn_zodiac_ruler_3
					has_ruler_modifier = ynn_zodiac_ruler_4
					has_ruler_modifier = ynn_zodiac_ruler_5
					has_ruler_modifier = ynn_zodiac_ruler_6
					has_ruler_modifier = ynn_zodiac_ruler_7
					has_ruler_modifier = ynn_zodiac_ruler_8
					has_ruler_modifier = ynn_zodiac_ruler_9
					has_ruler_modifier = ynn_zodiac_ruler_10
					has_ruler_modifier = ynn_zodiac_ruler_11
					has_ruler_modifier = ynn_zodiac_ruler_12
					has_ruler_modifier = ynn_zodiac_ruler_13
					has_ruler_modifier = ynn_zodiac_ruler_14
					has_ruler_modifier = ynn_zodiac_ruler_15
					has_ruler_modifier = ynn_zodiac_ruler_16
				}
			}
			ruler_ynn_zodiac = yes
		}
		else_if = {
			limit = {
				has_regency = yes
				NOT = {
					has_ruler_modifier = ynn_zodiac_heir_1
					has_ruler_modifier = ynn_zodiac_heir_2
					has_ruler_modifier = ynn_zodiac_heir_3
					has_ruler_modifier = ynn_zodiac_heir_4
					has_ruler_modifier = ynn_zodiac_heir_5
					has_ruler_modifier = ynn_zodiac_heir_6
					has_ruler_modifier = ynn_zodiac_heir_7
					has_ruler_modifier = ynn_zodiac_heir_8
					has_ruler_modifier = ynn_zodiac_heir_9
					has_ruler_modifier = ynn_zodiac_heir_10
					has_ruler_modifier = ynn_zodiac_heir_11
					has_ruler_modifier = ynn_zodiac_heir_12
					has_ruler_modifier = ynn_zodiac_heir_13
					has_ruler_modifier = ynn_zodiac_heir_14
					has_ruler_modifier = ynn_zodiac_heir_15
					has_ruler_modifier = ynn_zodiac_heir_16
				}
			}
			heir_ynn_zodiac = yes
		}

		cannorian_in_ynn_rename = yes
	}
	#Reforming OR converting out of Ynn River Worship
	if = {
		limit = {
			has_country_flag = ynn_river_worship_flag
			NOT = {
				religion = ynn_river_worship
			}
		}
		if = {
			limit = {
				tag = G32
			}
			every_subject_country = {
				country_event = { id = flavor_malacnar.120 }	#Malacnar companions turn into vassal upon reformation / religion switch
			}
		}
		country_event = { id = flavor_arverynn.15 } #Hey we can get rid of those modifiers now that we can actually look at the government tab

		#Converting out of Ynnnic Religion entirely
		if = {
			limit = {
				NOT = { religion = ynn_river_reformed }
			}
			remove_country_modifier = ynn_dark_ages			#Ynn zodiac and other modifiers get cleared upon leaving religion. ynn_diplo and Iosahar system is abandoned through a decision
			clr_country_flag = ynn_river_worship_flag
			clear_ynn_zodiacs_effect = yes
			clear_ynn_debate_flags_effect = yes
			clear_ynn_reform_bonuses_effect = yes
			if = {
				limit = {	#Ynn River vassals revolt as you convert away
					ynnic_iosahar = 1
				}
				random_subject_country = {
					limit = {
						NOT = { is_companion = yes }
						is_subject_of_type = ynnic_iosahar
						liberty_desire = 30
						OR = {
							religion = ynn_river_worship
							religion = ynn_river_reformed
						}
						all_known_country = {	#Ensures it's the strongest willing Iosahar who rises up
							NOT = {
								AND = {
									NOT = { is_companion = yes }
									is_subject_of_type = ynnic_iosahar
									is_subject_of = ROOT
									total_development = PREV
									liberty_desire = 30
									OR = {
										religion = ynn_river_worship
										religion = ynn_river_reformed
									}
								}
							}
						}
					}
					set_country_flag = ynn_civil_war_religion
					country_event = { id = ynn_events.7 }
				}
			}
		}

		cannorian_in_ynn_rename = yes
	}
	if = {
		limit = {
			NOT = { religion = bulgu_orazan }
			has_country_flag = bulgu_orazan_flag
		}
		country_event = { id = bulgu_orazan.14 }
	}

	if = {
		limit = {
			tag = J47
			NOT = { religion = feast_of_the_gods }
		}
		country_event = { id = ogre.31 } #Gorger Lord positioning himself as the voice of the gods
	}

	update_nsc_level_secondary_effects = yes

	events = {
		# muslim_school_events.20 #Pick School
		high_philosophy_events.0
		propagate_religion_events.7 #Propagated Country is now Muslim
		new_sun_cult.10 #Getting back mage estate if NSC and not human anymore
	}

	#Converting to kheionism
	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}

	#Converting from kheionism
	if = {
		limit = {
			religion = kheionism
			OR = {
				has_country_flag = kheio_adm
				has_country_flag = kheio_dip
				has_country_flag = kheio_mil
				has_country_flag = kheio_laskaris
			}
		}
		clr_country_flag = kheio_adm
		clr_country_flag = kheio_dip
		clr_country_flag = kheio_mil
		clr_country_flag = kheio_laskaris
	}
	
	# xiaken lose their reform and become independent when religion changes
	if = {
	    limit = {
	        is_subject_of_type = daimyo_xiaken_vassal
	        NOT = { religion = righteous_path }
	    }
	    
	    #xiaken is removed instantly because RP is one of the conditions for it
	    #remove_government_reform = xiaken
	    grant_independence = yes
	}
}

# country.
on_secondary_religion_change = {
	# Done from code: add_prestige = -50 (Define: CHANGE_SECONDARY_PRESTIGE_HIT)
	on_secondary_religion_change_estate_privileges_effect = yes
	every_owned_province = {
		limit = { has_province_modifier = tengri_monastic_order }
		remove_province_modifier = tengri_monastic_order
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_shiite_settled_in_capital }
		remove_province_modifier = tengri_shiite_settled_in_capital
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_insincere_leadership }
		remove_province_modifier = tengri_insincere_leadership
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_religious_influx }
		remove_province_modifier = tengri_religious_influx
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_ruler_questioned }
		remove_province_modifier = tengri_ruler_questioned
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_strengthened_local_clans }
		remove_province_modifier = tengri_strengthened_local_clans
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_growing_cities }
		remove_province_modifier = tengri_growing_cities
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_christian_mission }
		remove_province_modifier = tengri_christian_mission
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_unchristian_values }
		remove_province_modifier = tengri_unchristian_values
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_monastic_order }
		remove_province_modifier = tengri_monastic_order
	}
	every_owned_province = {
		limit = { has_province_modifier = hindufication }
		remove_province_modifier = hindufication
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_influx_of_monks }
		remove_province_modifier = tengri_influx_of_monks
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_abandoning_the_old_ways }
		remove_province_modifier = tengri_abandoning_the_old_ways
	}
	remove_country_modifier = tengri_devout_muslim
	remove_country_modifier = tengri_confucian_elites_alienated
	remove_country_modifier = tengri_confucian_titles
	remove_country_modifier = tengri_traditionalists_strengthened
	remove_country_modifier = tengri_confucian_nobles
	remove_country_modifier = tengri_pali_legal_traditions
	remove_country_modifier = tengri_religious_pilgrimages
	remove_country_modifier = tengri_monks_in_capital
	remove_country_modifier = tengri_influx_of_monks
	remove_country_modifier = tengri_shiite_immigration
	remove_country_modifier = support_of_the_khojas
	remove_country_modifier = black_shamanism_modifier
	remove_country_modifier = tengri_animist_pantheon
	remove_country_modifier = zoroastrian_traders
	remove_country_modifier = spread_of_tengri_tea_ceremony
	remove_country_modifier = tengri_tea_ceremony
	remove_country_modifier = tengri_japanese_swordsmithing
	remove_country_modifier = tengri_bow_and_arrow_defended
	remove_country_modifier = tengri_support_of_shamans
	remove_country_modifier = tengri_hindu_conflict
	remove_country_modifier = tengri_hindu_syncretism
	remove_country_modifier = tengri_devout_christian_ruler
	remove_country_modifier = tengri_personal_confessor
	remove_country_modifier = tengri_confucian_administrators
	remove_country_modifier = tengri_traditional_elites_alienated
	remove_country_modifier = tengri_jihad
	remove_country_modifier = tengri_stood_up_for_yassa
	remove_country_modifier = tengri_sufi_teacher
	remove_country_modifier = tengri_qadi
	remove_country_modifier = tengri_religious_influx
	remove_country_modifier = tengri_ibadi_scholars
	remove_country_modifier = tengri_clergy_conflicts
	remove_country_modifier = tengri_shamans_spurned
	clr_country_flag = khojas_established
	clr_country_flag = tengri_christian_devout_court
	clr_ruler_flag = tengri_muslim_ruler_questioned
	if = {
		limit = {
			check_variable = { which = khojas_retained value = 1 }
		}
		set_variable = {
			which = khojas_retained value = 0
		}
	}
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# country
on_colonial_liberation = {
	if = {
		limit = {
			NOT = { has_country_flag = old_world_to_new_world_flag }
		}
		country_event = { id = colonial_nation.90 days = 1 }
	}
}

# country
on_colonial_reintegration = {
	events = {
		colonial_nation.91
	}
}

# country
on_peace_actor = {
	events = {
		# usa_dlc.36			# Evacuation Day
		deepwoods.12			# Give wood elf territory back
		flavor_ameion.47		# Orenkoraim Defeated
		flavor_krakazol.42		#krakazol ale war
	}
}

# country
on_peace_recipient = {
	events = {
		flavor_krakazol.42		#krakazol ale war
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
	#FROM = { country_event = { id = flavor_cri.6 } }
	if = {
		limit = {
			has_country_flag = can_gain_legendary_pirates_flag
			NOT = { has_ruler_flag = historical_pirate }
			has_government_attribute = is_pirate_republic_reform
			FROM = { total_development = ROOT }
		}
		# random = { #Anbennar: commented cause we don't have the event
			# chance = 5
			# country_event = {
				# id = pirates.25
			# }
		# }
	}
	ROOT = { country_event = { id = tributary_events.32 } }
	ROOT = { country_event = { id = xhazobkult_events.2000 } }

	if = {
		limit = {
			ROOT = {
				OR = {
					has_country_flag = leader_illegitimate
					has_country_flag = leader_legitimate
				}
			}
			FROM = {
				OR = {
					has_country_flag = leader_illegitimate
					has_country_flag = leader_legitimate
				}
			}
		}
		ROOT = { country_event = { id = goldisland.13 } }
	}
	centaur_won_war_count = yes
	if = {
		limit = { tag = Z43 has_ruler_flag = sicrheior_son }
		change_variable = { nbWarWon = 1 }
	}
	xia_won_war_count = yes
	G35_won_war_count = yes

	if = { #Turning prabhia/senaptia into xiakens after vassalizing a country
        limit = { ROOT = { has_reform = wulin } }
        ROOT = {
            every_subject_country = {
                limit = {
					OR = {
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = great_daimyo_vassal
					}
				}
				grant_independence = yes
                ROOT = { create_subject = { subject_type = daimyo_xiaken_vassal subject = PREV } }
            }
        }
    }

	if = { #Turning prabhia/senaptia into regular vassal after transfer vassal
        limit = {
			ROOT = {
				NOT = { has_reform = wulin }
				NOT = { has_reform = raja_reform}
				any_subject_country = {
					OR = {
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = great_daimyo_vassal
					}
				}
			}
		}
        ROOT = {
            every_subject_country = {
                limit = {
					OR = {
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = great_daimyo_vassal
					}
				}
				grant_independence = yes
                ROOT = { create_subject = { subject_type = vassal subject = PREV } }
            }
        }
    }

	# federation_religious_war = yes

	# Adenica wars won counter
	if = {
		limit = {
			tag = B58
		}
		change_variable = { adenicaWarsWon = 1 }
		if = {
			limit = {
				NOT = { has_matching_religion = FROM }
				religion = regent_court
			}
			change_variable = { adenicaReligiousWarsWon = 1 }
		}
		if = {
			limit = {
				FROM = {
					is_force_converted = yes
				}
				religion = regent_court
			}
			change_variable = { adenicaReligiousWarsWon = 1 }
		}
		if = {
			limit = {
				FROM = {
					culture_group = orcish
				}
			}
			change_variable = { adenicaOrcWarsWon = 1 }
		}
	}

	#Ravenmarch Monstrous Wars
	if = {
		limit = { tag = B48 }
		if = {
			limit = {
				FROM = {
					monstrous_culture = yes
				}
			}
			change_variable = { nbRavenWon = 1 }
		}
	}

	# Castanor wars won against beasts & evil counter
	if = {
		limit = {
			tag = B32
		}
		if = {
			limit = {
				FROM = {
					OR = {
						monstrous_culture = yes
						is_evil = yes
					}
				}
			}
			change_variable = { castanorWarsWonAgainstBeastsBarbarismEvil = 1 }
		}
	}

	#Raja winning war
	if = {
		limit = { has_reform = raja_reform }
		FROM = { raj_cohesion_change = { amount = 10 non_monthly = yes } }
		every_subject_country = {
			# make sure all subjects of the Raja get truces with the party.
			if = {
				limit = {
					NOT = { FROM = { is_subject_of = ROOT } }	# make sure FROM is external party
					NOT = { truce_with = FROM } 			# check for truces
				}
				add_truce_with = FROM						# add truce with external party
				FROM = { add_truce_with = PREV }			# add truce with subject
			}
			if = {
				limit = { is_subject_of_type = daimyo_vassal }
				if = {
					limit = { NOT = { government = monarchy } }
					change_government = monarchy
				}
				add_government_reform = prabhi_reform
				country_event = { id = rahenraj.10 days = 35 }	#adds the raj cohesion privilege
			}
		}
	}

	if = {
		limit = {
			is_part_of_hre = yes
			FROM  = { is_part_of_hre = yes }
		}
		ROOT = { save_global_event_target_as = hre_winner }
		FROM = { save_global_event_target_as = hre_loser }
		random_known_country = {
			limit = {
				has_reform = free_city
				NOT = {
					prestige = 40
				}
				NOT = {
					has_country_modifier = fc_treatyconference_timer
				}
			}
			add_country_modifier = {
				name = fc_treatyconference_timer
				duration = 3650
				hidden = yes
			}
			country_event = {
				id = free_cities.7
				days = 7
			}
		}
	}

	#Sun elf winning war
	if = {
		limit = {
			is_chosen_country = yes
			religion = bulwari_sun_cult
		}
		clr_country_flag = nsc_lost_war
	}

	#Bim Lau entombment of enemy general
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
		}
		random_list = {
			10 = { country_event = { id = bim_lau_flavour.6 days = 15 } }
			90 = { }
		}
	}

	# if = {
		# limit = {
			# tag = MLO
			# NOT = { has_country_flag = emp_mlo_won_war_with_swiss_mercs }
			# any_hired_mercenary_company = {
				# home_province = {
					# OR = {
						# area = switzerland_area
						# area = romandie_area
					# }
				# }
			# }
		# }
		# set_country_flag = emp_mlo_won_war_with_swiss_mercs
	# }

	# if = {
		# limit = {
			# is_hiring_condottiere_from = SWI
		# }
		# SWI = { set_country_flag = won_condottiere_war }
		# if = {
			# limit = {
				# tag = PAP
			# }
			# SWI = {
				# set_country_flag = hired_to_pope
			# }
		# }
	# }

	#Seinathil War Won Count

	if = {
		limit = {
			tag = A90
			OR = {
				has_country_modifier = A90_bardic_influence_1
				has_country_modifier = A90_bardic_influence_2
				has_country_modifier = A90_bardic_influence_3
				has_country_modifier = A90_bardic_influence_4
				has_country_modifier = A90_bardic_influence_5
			}
		}
		change_variable = {
			which = seinathilBardicAlliesWarWon
			value = 1
		}
	}

		#Seinathil Bardic Allies
	if = {
		limit = {
			OR = {
				has_country_flag = A90_bardic_ally
				tag = A90
			}
			NOT = {
				is_in_war = {
					participants = A90
				}
			}
		}
			every_country = {
				remove_country_modifier = A90_bardic_influence_1
				remove_country_modifier = A90_bardic_influence_2
				remove_country_modifier = A90_bardic_influence_3
				remove_country_modifier = A90_bardic_influence_4
				remove_country_modifier = A90_bardic_influence_5
		}
	}

	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 20 }
	}

	# If Adventurers full annex a monster - to stop adventurer no CB strats
	if = {
		limit = {
			has_reform = adventurer_reform
			NOT = { has_reform = found_our_nation }
			ai = no
			FROM = { exists = no }
		}
		country_event = { id = adventurer.5 }
		clr_country_flag = destroyed_tribe
	}
	if = {
		limit = {
			tag = Z99
			has_country_flag = black_overseer_invasion
			any_known_country = {
				if = {
					limit = { war_with = Z99 }
					NOT = {
						any_owned_province = {
							OR = {
								region = north_salahad_region
								region = akan_region
							}
						}
					}
				}
			}
		}
		clr_country_flag = black_overseer_invasion
		remove_country_modifier = black_overseer_1
		remove_country_modifier = black_overseer_2
		remove_country_modifier = black_overseer_3
		remove_country_modifier = black_overseer_4
		remove_country_modifier = black_overseer_5
		remove_country_modifier = black_overseer_6
	}

	#Raj internal wars
	if = {
		limit = {
			OR = {
				has_reform = raja_reform
				overlord = { has_reform = raja_reform }
			}
		}
		raj_calc_internal_wars = yes
	}

	# Its a Feiten war counter cause why not
	if = {
		limit = {
			if = {
				limit = { exists = event_target:feiten_or_was_feiten_target }
				tag = event_target:feiten_or_was_feiten_target
			}
			mission_completed = feiten_developing_an_air_doctrine
		}
		change_variable = { which = feiten_wars_won value = 1 }
	}
	#Zongji Eunuch war
	if = {
        limit = {
            tag = Y25
            NOT = { has_country_flag = Y25_beaten_eunuch }
            FROM = {
                OR = {
                    has_reform = eunuch_republic
                    has_reform = eunuch_dynasty_reform
                }
            }
        }
        set_country_flag = Y25_beaten_eunuch
    }

	if = { #Bulwar incident end
		limit = {
			tag = F39
			FROM = { tag = F28 }
		}
		country_event = { id = flavour_bulwar_tag.15 }
	}

	update_artifice_points = yes #needs to be last
}

# country
# root = winning country, from = loser country
on_main_war_won = {
	if = {
		limit = {
			has_government_attribute = winning_wars_gives_rt
		}
		add_republican_tradition = 5
	}
	if = {
		limit = {
			has_government_attribute = winning_war_increases_legitimacy
		}
		add_legitimacy = 5
		add_devotion = 5
		add_meritocracy = 5
		add_horde_unity = 5
		add_republican_tradition = 2
	}
}

# country
# root = winning country, from = loser country
on_separate_war_won = {
}

# country
# root = loser country, from = winner country
on_war_lost = {
	#ROOT = { country_event = { id = flavor_cri.6 } }
	ROOT = { country_event = { id = tributary_events.32 } }
	ROOT = { country_event = { id = rahenraj.1000 } }
	ROOT = { country_event = { id = xhazobkult_events.2000 } }

	if = {
        limit = {
            government = republic
            is_lesser_in_union = yes
		}
		change_government_to_monarchy = yes
    }
	#Anbennar - we have no shadow kingdom
	# if = {
		# limit = {
			# FROM = { is_emperor = yes }
			# NOT = { has_country_flag = reined_in_for_shadow_kingdom }
			# NOT = { has_global_flag = italians_leave_hre }
			# is_emperor = no
			# is_part_of_hre = yes
			# OR = {
				# capital_scope = { region = italy_region }
				# AND = {
					# culture_group = latin
					# any_owned_province = {
						# region = italy_region
					# }
				# }
			# }
		# }
		# set_country_flag = reined_in_for_shadow_kingdom
	# }
	add_country_modifier = {
		name = just_lost_war_timer
		duration = 10
		hidden = yes
	}
	ROOT = {
		country_event = { id = anbennar_setup.14 }
	}
	if = {
		limit = {
			is_subject = yes
		}
		country_event = {
			id = diggy.122
		}
	}

	#Raja losing war
	if = {
		limit = { has_reform = raja_reform }
		FROM = { raj_cohesion_change = { amount = -10 non_monthly = yes } }

		if = {
			# make sure all subjects of the Raja get truces with the party.
			limit = { NOT = { FROM = { is_subject_of = ROOT } } }		# make sure FROM is external party

			every_subject_country = {
				if = {
					limit = {
						NOT = { truce_with = FROM } 			# check for truces
					}
					add_truce_with = FROM						# add truce with external party
					FROM = { add_truce_with = PREV }			# add truce with subject
				}
			}
		}
	}

	#Sun elf losing war
	if = {
		limit = {
			is_chosen_country = yes
			religion = bulwari_sun_cult
		}
		set_country_flag = nsc_lost_war
	}

		#Seinathil Bardic Allies
	if = {
		limit = {
			OR = {
				has_country_flag = A90_bardic_ally
				tag = A90
			}
			NOT = {
				is_in_war = {
					participants = A90
				}
			}
		}
			every_country = {
				remove_country_modifier = A90_bardic_influence_1
				remove_country_modifier = A90_bardic_influence_2
				remove_country_modifier = A90_bardic_influence_3
				remove_country_modifier = A90_bardic_influence_4
				remove_country_modifier = A90_bardic_influence_5
		}
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 20 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}

	if = {
		limit = {
			tag = Z99
			has_country_flag = black_overseer_invasion
			any_known_country = {
				if = {
					limit = { war_with = Z99 }
					NOT = {
						any_owned_province = {
							OR = {
								region = north_salahad_region
								region = akan_region
							}
						}
					}
				}
			}
		}
		clr_country_flag = black_overseer_invasion
		remove_country_modifier = black_overseer_1
		remove_country_modifier = black_overseer_2
		remove_country_modifier = black_overseer_3
		remove_country_modifier = black_overseer_4
		remove_country_modifier = black_overseer_5
		remove_country_modifier = black_overseer_6
	}

	if = {    #Clears alliances for Ynnic Overlord
        limit = {
            FROM = {                             # if the winner has,
                ynnic_iosahar = 1                    # 1+ ynnic iosahar,
                has_country_modifier = ynn_diplo    # ynn_diplo mod,
                num_of_allies = 1                    # 1+ allies,
            }                                    # then do:
        }
		every_known_country = {
			limit = {
				capital_scope = { superregion = ynn_superregion } 
				alliance_with = ROOT
			}
			ROOT = {
				break_alliance = PREV
			}
		}
        #ROOT = {
			#if = {
                #limit = {                            # if loser is iosahar of winner,
                    #is_subject_of = FROM
                    #is_subject_of_type = ynnic_iosahar
                #}                                    # then do:
				#create_subject = {                        # turn winner into vassal of loser (switcheroo)
					#subject_type = vassal
					#subject = FROM
				#}
				#FROM = {
					#grant_independence = yes            # turn winner independent again
					#create_subject = {                    # turn loser into iosahar of winner
						#subject_type = ynnic_iosahar
						#subject = ROOT
					#}
				#}
			#}
        #}
    }

	if = { #The Command is Losing Ground I
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 36
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.11 days = 1 } }
	}

	if = { #The Command is Losing Ground II
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 24
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.12 days = 1 } } #Tiltaghar
	}

	if = { #The Command is Losing Ground III
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 13
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.13 days = 1 } } #Tiltaghar
	}

	if = { #Aftermath of the War
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
					value = 1
					region = shamakhad_region
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.14 } } #Tiltaghar
	}

	if = { #Bulwar incident end
		limit = {
			tag = F39
			FROM = { tag = F28 }
		}
		country_event = { id = flavour_bulwar_tag.15 }
	}

	update_artifice_points = yes #needs to be last
}

on_main_war_lost = {
}

on_separate_war_lost = {
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	# battle_cult_spreading_effect = yes #Scripted effect for fetishist cult mechanics.
	ROOT = { jaddari_deioderan_battle_counter_update = { value = -1 } }
	random_events = {
		90 = 0
		10 = friendship_events.1 #Historical Friendship Broken
	}
	if = {
		limit = { NOT = { FROM = { OR = { tag = REB tag = NAT } } } }
		centaur_battle_count_lost = yes
		aelnar_battle_count_lost = yes
	}
	if = { limit = { has_country_flag = has_nsc_disaster }
		change_variable = { which = nscDisasterBattleLostScoreVar value = 1 }
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 1 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
	# if = {
		# limit = {
			# from = { tag = REB }
			# owner = {
				# tag = ENG
				# has_disaster = war_of_the_roses
				# has_country_modifier = wotr_one_year_timer
				# NOT = { has_country_flag = war_of_the_roses_pretender_fled }
			# }
		# }
		# owner = { country_event = { id = war_of_the_roses.200 days = 2 } }
	# }
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				# NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}

	#Anbennar
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = pretender_rebels
			}
			owner = {
				tag = A48
				has_disaster = sugamber_succession_war
			}
		}
		owner = { country_event = { id = flavor_sugamber.9 } }
	}

	if = { limit = { has_province_flag = nsc_duel } #Mages vs Artificers duel during the 'Rise of Artificery' NSC incident
		if = { limit = { NOT = { has_province_flag = nsc_duel_null } }
			if = { limit = { from = { tag = REB is_rebel_type = artificer_duelists_rebels } }
				owner = { country_event = { id = new_sun_cult.203 } }
			}
			else_if = { limit = { from = { tag = REB is_rebel_type = mage_duelists_rebels } }
				owner = { country_event = { id = new_sun_cult.204 } }
			}
		}
		else = {
			owner = { country_event = { id = new_sun_cult.205 } }
		}
	}

	random_events = {
		900 = 0


		33 = aw_ghouls.110
		67 = aw_ghouls.111	#more common one for spookier places
	}
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	if = {
		limit = {
			unit_owner = {
				has_government_attribute = winning_battles_increases_legitimacy
			}
			is_ruler_commanding_unit = yes
		}
		unit_owner = {
			add_legitimacy = 0.5
			add_devotion = 0.5
			add_republican_tradition = 0.1
			add_revolutionary_zeal = 0.1
			add_absolutism = 0.1
		}
	}
	# if = {
		# limit = {
			# unit_owner = { has_country_modifier = undead_military }
		# }
		# enemy_unit = {
			# Z99 = { change_variable = { raiseUndead = 1 } }
		# }
	# }
	if = {
		limit = {
			unit_owner = { has_country_modifier = undead_military }
			# enemy_unit = { unit_owner = { NOT = { tag = REB } } }
		}
		unit_owner = { change_variable = { raiseUndead = 1 } }

	}
    if = {
        limit = {
            unit_owner = {
                tag = G32
				OR = {
					has_reform = malacnar_monarchy
					has_reform = malacnar_monarchy_reformed
					has_reform = malacnar_republic_reform
				}
            }
            is_ruler_commanding_unit = yes
			enemy_unit = {
				unit_owner = {
					NOT = { tag = NAT }
				}
			}
        }
        G32 = {
			country_event = { id = flavor_malacnar.6 }
		}
    }
	if = {
		limit = {
			location = {
				has_province_flag = drozma_last_stand_prov_flag
			}
			unit_owner = {
				has_country_flag = drozma_fighting_last_stand
			}
			enemy_unit = {
				unit_owner = {
					tag = REB
				}
			}
		}
		if = {
			limit = {
				is_ruler_commanding_unit = yes
				NOT = {
					unit_owner = { ruler_has_personality = craven_personality }
				}
			}
			unit_owner = { set_country_flag = drozma_leader_v_dragon }
		}
		unit_owner = { country_event = { id = ynn_events.25 } }
	}
	if = {	# Edhardrachon battles
		limit = {
			unit_owner = { tag = B61 }
			is_ruler_commanding_unit = yes
			if = { # This to prevent multiple armies in battle counting as multiple victories
				limit = { B61 = { has_country_flag = battleCooldownPatricianCastan } }
				B61 = {
					had_country_flag = {
						flag = battleCooldownPatricianCastan
						days = 5
					}
				}
			}
		}
		B61 = {
			change_variable = {
				which = patricianCastanBattlesWon
				value = 1
			}
			clr_country_flag = battleCooldownPatricianCastan
			set_country_flag = battleCooldownPatricianCastan
		}
	}
	if = {
		limit = {
			unit_owner = { tag = B32 }
			enemy_unit = { unit_owner = { tag = B61 } }
		}
		if = {
			limit = {
				enemy_unit = { is_ruler_commanding_unit = yes }
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstPatricianCastan } }
					B32 = {
						had_country_flag = {
							flag = battleCooldownAgainstPatricianCastan
							days = 5
						}
					}
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstPatricianCastan value = 1 }
				clr_country_flag = battleCooldownAgainstPatricianCastan
				set_country_flag = battleCooldownAgainstPatricianCastan
			}
		}
		if = {
			limit = {
				enemy_unit = { general_with_name = "Elecast, the Burnished Wing" }
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstElecast } }
					B32 = {
						had_country_flag = {
							flag = battleCooldownAgainstElecast
							days = 5
						}
					}
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstElecast value = 1 }
				clr_country_flag = battleCooldownAgainstElecast
				set_country_flag = battleCooldownAgainstElecast
			}
			random_list = {
				# Nothing happens
				10 = {
					modifier = {
						factor = 0
						# Yes this implementation sucks
						any_province = {
							has_province_flag = castanor_stack_wipe
							NOT = {
								had_province_flag = {
									flag = castanor_stack_wipe
									days = 2
								}
							}
						}
					}
				}
				1 = {
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstElecast value = 2 } }
					}
					modifier = {
						factor = 3
						B32 = { check_variable = { which = battlesWonAgainstElecast value = 3 } }
					}
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstElecast value = 5 } }
					}
					B32 = { country_event = { id = flavor_castanor.210 } }
				}
			}
		}
		else_if = {
			limit = {
				enemy_unit = { general_with_name = "Gracos, the Leaden Breath" }
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstGracos } }
					B32 = {
						had_country_flag = {
							flag = battleCooldownAgainstGracos
							days = 5
						}
					}
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstGracos value = 1 }
				clr_country_flag = battleCooldownAgainstGracos
				set_country_flag = battleCooldownAgainstGracos
			}
			random_list = {
				# Nothing happens
				10 = {
					modifier = {
						factor = 0
						# Yes this implementation sucks
						any_province = {
							has_province_flag = castanor_stack_wipe
							NOT = {
								had_province_flag = {
									flag = castanor_stack_wipe
									days = 2
								}
							}
						}
					}
				}
				1 = {
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstGracos value = 2 } }
					}
					modifier = {
						factor = 3
						B32 = { check_variable = { which = battlesWonAgainstGracos value = 3 } }
					}
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstGracos value = 5 } }
					}
					B32 = { country_event = { id = flavor_castanor.208 } }
				}
			}
		}
		else_if = {
			limit = {
				enemy_unit = { general_with_name = "Erella, the Argent Claw" }
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstErella } }
					B32 = {
						had_country_flag = {
							flag = battleCooldownAgainstErella
							days = 5
						}
					}
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstErella value = 1 }
				clr_country_flag = battleCooldownAgainstErella
				set_country_flag = battleCooldownAgainstErella
			}
			random_list = {
				# Nothing happens
				10 = {
					modifier = {
						factor = 0
						# Yes this implementation sucks
						any_province = {
							has_province_flag = castanor_stack_wipe
							NOT = {
								had_province_flag = {
									flag = castanor_stack_wipe
									days = 2
								}
							}
						}
					}
				}
				1 = {
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstErella value = 2 } }
					}
					modifier = {
						factor = 3
						B32 = { check_variable = { which = battlesWonAgainstErella value = 3 } }
					}
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstErella value = 5 } }
					}
					B32 = { country_event = { id = flavor_castanor.209 } }
				}
			}
		}
	}
	if = {
        limit = {
            unit_owner = {
                is_chosen_country = yes
				religion = bulwari_sun_cult
				has_dlc = "Mandate of Heaven"
				isolationism = 4
            }
            is_ruler_commanding_unit = yes
        }
        unit_owner = { change_variable = { which = battlesWonBySunElfRuler value = 1 } }
		if = { limit = { unit_owner = { check_variable = { which = battlesWonBySunElfRuler value = 5 } } }
			if = { limit = { unit_owner = { check_variable = { which = battlesWonBySunElfRuler value = 10 } } }
				unit_owner = { country_event = { id = new_sun_cult.4 } }
			}
			else = {
				unit_owner = { country_event = { id = new_sun_cult.3 } }
			}
		}
    }
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
	if = {
		limit = { religion = goblinic_shamanism  NOT = { FROM = { OR = { tag = REB tag = NAT } } } }
		FROM = { goblinic_shamanism_event = yes } # Fires events for a cult spreading upon winning a battle
	}
	#ROOT = { country_event = { id = infestation_goblin.300 } } # post-rebellion cleanup
	ROOT = { jaddari_deioderan_battle_counter_update = { value = 1 } }
	if = {
		limit = { NOT = { FROM = { OR = { tag = REB tag = NAT } } } }
		centaur_battle_count_win = yes
		country_event = { id = magic_on_action.3 } #Undead manpower gain
	}
	if = {
		limit = { NOT = { FROM = { OR = { tag = REB tag = NAT } } } }
		ogre_battle_count_win = yes
	}
	if = { limit = { has_country_flag = has_nsc_disaster }
		change_variable = { which = nscDisasterBattleWonScoreVar value = 1 }
	}
	if = { limit = { tag = F34 }
		change_variable = { which = deggarionBattlesWon value = 1 }
	}
	if = { limit = { tag = B37 }
		change_variable = { which = RogieriaEmulantAdenn value = 1 }
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 1 }
	}
	if = {
		limit = {
			NOT = { FROM = { tag = REB } }
			Z43 = { has_ruler_flag = sicrheior_son }
		}
		Z43 = {
			change_variable = { nbSonBattleWon = 1 }
			change_variable = { totalBattle = 1 }
			set_variable = {
				which = battleWinRate
				which = nbSonBattleWon
			}
			divide_variable = {
				which = battleWinRate
				which = totalBattle
			}
			multiply_variable = {
				which = battleWinRate
				value = 100
			}
		}
	}
	if = {
		limit = {
			tag = R08
			FROM = {
				OR = {
					tag = R07 #Rajnadhaga
					tag = R11 #Khadisrapur
					tag = R09 #Parraj
					tag = R34 #Kamapar
					tag = R10 #Sarnavan
					tag = R12 #Tilathi
				}
			}
		}
		change_variable = { which = tiltaghar_battles_ruin_kingdoms value = 1 }
	}

	random_events = {
		1000 = 0

		100 = aw_zombies.100
	}
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	if = {
		limit = { NOT = { is_year = 1465 } } #No point checking for these after early game
		if = {
			limit = {
				unit_owner = {
					tag = F29
				}
				is_ruler_commanding_unit = yes
				enemy_unit = {
					unit_owner = {
						tag = F46
					}
					is_ruler_commanding_unit = yes
				}
			}
			F46 = {
				country_event = { id = zokka_jaddari_war.2 }
			}
		}
		if = {
			limit = {
				unit_owner = {
					tag = F46
				}
				is_ruler_commanding_unit = yes
				enemy_unit = {
					unit_owner = {
						tag = F29
					}
					is_ruler_commanding_unit = yes
				}
			}
			F29 = {
				country_event = { id = zokka_jaddari_war.4 }
			}
		}
		if = {	#Slaying Trompolere's warlord
			limit = {
				unit_owner = {
					has_ruler_flag = alaran
					NOT = { heir_age = 15 }
				}
				is_ruler_commanding_unit = yes
				any_country = {
					core_claim = G36
				}
			}
			enemy_unit = {
				unit_owner = {
					country_event = { id = flavor_trompolere.1 }
				}
			}
		}
	}
    else_if = {	#For events that happen post-1465
        limit = {
            unit_owner = {
                tag = Z50
                has_ruler_flag = grombar_corinite_ruler_joins_corinite_wars
            }
            is_ruler_commanding_unit = yes
        }
        Z50 = {
            country_event = { id = flavor_grombar.32 }
        }
    }
    if = {	#Slaying Malacnari Battleking
        limit = {
            unit_owner = {
                tag = G32
				OR = {
					has_reform = malacnar_monarchy
					has_reform = malacnar_monarchy_reformed
					has_reform = malacnar_republic_reform
				}
            }
            is_ruler_commanding_unit = yes
        }
        enemy_unit = {
			unit_owner = {
				country_event = { id = flavor_malacnar.2 }
			}
        }
		G32 = {
			country_event = { id = flavor_malacnar.3 }
		}
    }
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={

}

# province
# root = location, from = country doing it
on_removed_from_company ={

}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {

	if = {
		limit = {
			has_province_flag = drozma_last_stand_prov_flag
			from = {
				tag = REB
			}
		}
		owner = { country_event = { id = ynn_events.27 } }
	}


	# Castanor disaster trigger enemy general capture event helper
	if = {
		limit = {
			FROM = {
				TAG = B32
				has_disaster = castanor_succession_war
			}
			ROOT = {
				NOT = {
					num_of_units_in_province = {
						who = B61
						amount = 1
					}
				}
			}
		}
		set_province_flag = castanor_stack_wipe
	}
	random_events = {
		1000 = 0
		#100 = tyw_events.22	# Capital Battle in Religious War
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	grant_manpower_from_capital_slave_raid = yes
	events = {
		flavor_grombar.14
		deepwoods.22
		dotimist_flavour.2
		flavour_tluukt.8
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 0.5 }
	}
	clr_vampire_hideout = yes
	castanor_succession_war_shift_momentum_siege = yes
	random_events = {
		30 = flavor_ameion.5 #Laskaris
		70 = 0
	}
	random_events = {
		10 = army_professionalism_events.1 #City Sacked
		100 = 0
	}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
	events = {
		curia.8			#curia loses its money, not sure we need new ver
		# papacy_events.5	#AnbennarNewVer
		flavour_tluukt.60
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 0.25 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# province
# root = location, from = losing country
on_siege_won_province = {
	remove_siege_spells_from_province = yes
	events = {
	}
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				# NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}
	# Anbennar
	if = {
		limit = { owner = { has_disaster = magnate_uprising } }
		magnate_uprising_siege_won_effects = yes
	}
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	remove_siege_spells_from_province = yes
	events = {
		diggy.13
		magic_project_lichdom.17
		vampires_estate_events.15
		cavegoblinflavor.15
		spirits.002 #Hidden event to determine if temple is damaged by siege
	}

	if = {
		limit = { FROM = { tag = Z43 has_country_flag = harvesting_connadh } } #Aelnar
		province_event = { id = aelnar.103 }
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# province
# root = location, from = country that owns it
# Fired right after the great project is constructed
on_great_project_constructed = {
	remove_province_modifier = reveria_golden_dome_leviathan
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country
on_new_monarch = {
	# crimean_succession_effect = yes #Scripted effect
	# slesvig_question_effect = yes #Scripted effect

	#Anbennar
	if = {
		limit = {
			has_dlc = "Rights of Man"
			government = theocracy
			OR = {
				ruler_is_elven = yes
				ruler_is_dwarven = yes
				ruler_is_gnomish = yes
			}
		}
		set_ruler_flag = long_lived_theocracy
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		every_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		every_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	# if = {
		# limit = {
			# NOT = { has_dlc = "Mandate of Heaven" }
			# has_country_modifier = the_mandate_of_heaven
			# NOT = { legitimacy = 80 }
		# }
		# country_event = { id = china_events.32 }	# History of last ruler
	# }
	if = {
		limit = {
			has_country_flag = Y91_participating_in_festival
		}
		clr_country_flag = Y91_heir_participating
		clr_country_flag = Y91_ruler_participating
		clr_country_flag = Y91_picked_tournament_participants
		country_event = { id = flavor_nuugdan_tsarai.68 }
	}
	if = {
		limit = {
			has_estate_privilege = estate_eunuch_tutors
		}
		country_event = { id = eunuchs_estate_events.13 }
	}
	#ONLY TRIGGER THIS VIA GOVERNMENT REFORMS
	# if = {
	# 	limit = {
	# 		OR = {
	# 			has_reform = isolated_kingdom_reform
	# 			has_reform = compact_of_menjaeng_reform
	# 			# has_reform = huli_jing_reform
	# 		}
	# 	}
	# 	country_event = { id = patrons_on_action.1 }
	# }
	# ambrosian_republic_effect = yes
	succession_culture_religion_effect = yes
	# sheik_ul_islam_effect = yes
	# hab_remove_mission_mods_if_not_emperor_effect = yes
	# thu_remain_von_wettin_effect = yes
	# ladislaus_postumus_union_effect = yes
	if = {
		limit = { has_government_attribute = absolutism_reduction_on_ruler_death }
		add_absolutism = -60
		set_variable = {
			which = election_term
			value = 1
		}
	}
	if = { # Balrijin new heir.
		limit = { has_reform = balrijin_sage_council_reform }
		trigger_switch = {
			on_trigger = has_ruler_flag
			Y85_smoldering_claw_heir_flag = { country_event = { id = flavour_balrijin.31 } }
			Y85_kindled_scale_heir_flag = { country_event = { id = flavour_balrijin.32 } }
			Y85_knowing_eye_heir_flag = { country_event = { id = flavour_balrijin.33 } }
			Y85_grasping_tail_heir_flag = { country_event = { id = flavour_balrijin.34 } }
			Y85_golden_tongue_heir_flag = { country_event = { id = flavour_balrijin.35 } }
			Y85_teeming_arm_heir_flag = { country_event = { id = flavour_balrijin.36 } }
		}
	}

	#Anbennar
	set_runelink_level = yes
	events = {
		flavor_sca.2				# Education Focus of the new Ruler

		#Anbennar
		#anbennar_setup.1			#Setup if new country is monstrous or not
		#anbennar_setup.6			#setup mage organization for new country - handled by mage_organization.1
		anbennar_setup.7			#Setup for evil/witch king opinions
		anbennar_setup.9			#Setup for racial admin mil
		anbennar_setup.19			#Setup for artifice system
		# racial_modifiers.5		#Racial admin change if unmatching
		# racial_modifiers.6		#Racial mil change if unmatching
		magic_ruler.109				#gives magic schools
		anb_miscevents.10 			# Make you adventurer reform if youre not - this is for released countries
		anb_miscevents.11			# Makes temples theocracies when released
		#adventuring.7	#A new Captain rises

		#anbennar_setup_player.1
		#anbennar_setup_player.2

		#Sugamber succession war
		#flavor_sugamber.14		# Pro-Lisolette rebels win the war
		#flavor_sugamber.15		# Pro-Ethelbert rebels win the war
		flavor_sugamber.999		# Lisolette's legitimacy called into question

		#anbennar_setup.9
		rahenraj.5				#To ensure Harimari rulers in Rahen
		rahenraj.1000			#To make sure newly independent Prabhi and Senapti have the proper government
		the_command.3			#Hobgoblin faction influence
		flavor_blademarches.3 	#Blademarches succession event
		aelnar.82				#Sicrheior Son
		flavor_telgeir.1		# Vanbury can replace new dynasty
		one_xia.55				#Xia heirs balance training
		one_xia.56				#Xia Keepers wield kongren

		#Black Castanor Trial
		castanortrials.12

		tribal_succession.1		# Harsh anti-tribals.
		9492 					# Remove some event modifiers

		# flavor_tur.102			# Janissary Reward

		# muslim_school_events.20 #No Religious School
		high_philosophy_events.0

		#Silver Families
		silver_families.1		#Silmuna
		silver_families.2		#Siloriel
		silver_families.3		#Silcalas
		silver_families.4		#Silistra
		silver_families.5		#Silnara
		silver_families.6		#Silebor
		silver_families.7		#Silurion
		silver_families.8		#Silgarion

		# Magnate Council determines whether to support monarch
		flavor_gawed.5

		#Eordand Dracball
		eordand.30

		new_sun_cult.10 #Getting back mage estate if NSC and not human anymore
		flavor_azka_sur.23	#Azka Sur incident

		rahenraj.2099 	#Raja Death
	}

	country_event = { id = estate_organization.1 days = 35 }		#choose magical organization for mage estate
	country_event = { id = estate_organization.4 days = 35 }		#choose organization for adventurer estate
	country_event = { id = estate_organization.5 days = 35 }		#choose organization for artificer estate
	country_event = { id = racial_modifiers.5 days = 1 }			#Racial admin change if unmatching
	country_event = { id = racial_modifiers.6 days = 1 }			#Racial mil change if unmatching

	country_event = { id = monstrous.100 days = 35 }
	if = {
		limit = { is_year = 1445 }
		country_event = { id = great_conqueror.0 days = 35 }
	}

	if = {
		limit = {
			has_dlc = "Rights of Man"
			OR = {
				ruler_is_elven = yes
				ruler_is_dwarven = yes
				ruler_is_gnomish = yes
				ruler_is_half_elven = yes
			}
		}
		country_event = { id =  magic_ruler.102 days = 3700 } #Since long-lived races can no longer naturally roll mage_personality has first trait fire after second trait received
	}
	if = {
		limit = { religion = the_jadd has_global_flag = the_jadd_is_the_true_faith NOT = { has_country_modifier = jaddari_the_true_faith } }
		add_country_modifier = {
			name = jaddari_the_true_faith
			duration = -1
		}
	}

	# Adenica new ruler pick chivalric virtue to follow
	if = {
		limit = {
			has_country_flag = formed_adenica_flag
			OR = {
				has_country_modifier = adenica_knight
				has_country_modifier = adenica_mortal_paragon
			}
		}
		country_event = {
			id = flavor_adenica.20
		}
	}

	if = {
		limit = {
			has_government_attribute = always_mage
		}
		country_event = { id = anb_misc.1 days = 30 }
	}
	if = {
		limit = {
			has_reform = black_acolyte_reform
		}
		country_event = { id = black_acolytes.100 }
	}

	if = {
		limit = {
			tag = G32
			OR = {
				has_reform = malacnar_monarchy
				has_reform = malacnar_monarchy_reformed
				has_reform = malacnar_republic_reform
			}
		}
		add_ruler_modifier = {	#Two years and a half
			name = g32_battleking_grace_period
			duration = 155
			hidden = yes
		}
		country_event = { id = flavor_malacnar.4 days = 1 }
	}
	# Y58 lot dekkhang gets new ruler race modifier
	if = {
		limit = {
			has_reform = teplinbasiet_arena_kingdom_reform
		}
		country_event = {
			id = lotdekkhang.3
		}
	}

	# Y51 Bim Lau Entombment flags
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			NOT = {
				OR = {
					adm = 2
					dip = 2
					mil = 2
				}
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
			NOT = { has_country_flag = bim_lau_weak_spirit }
		}
		set_country_flag = bim_lau_weak_spirit
	}
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			OR = {
				adm = 6
				dip = 6
				mil = 6
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
			NOT = { has_country_flag = bim_lau_talented_spirit }
		}
		set_country_flag = bim_lau_talented_spirit
	}
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			adm = 5
			dip = 5
			mil = 5
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
			NOT = { has_country_flag = bim_lau_exceptional_spirit }
		}
		set_country_flag = bim_lau_exceptional_spirit
	}

	country_event = { id = flavor_malacnar.4 days = 1 }

	random_events = {
		1000 = 0

		50 = dynastic_events.4
		50 = dynastic_events.5
		# 25 = harem_events.7		#Failed Policy of Fratricide
	}

	#NSC effects
	refresh_nsc_incidents_ui = yes
	update_nsc_level_secondary_effects = yes
	if = { limit = { religion = bulwari_sun_cult }
		set_variable = { which = battlesWonBySunElfRuler value = 0 }
	}
	#Mother Akan set deity
	if = {
		limit = { religion = mother_akan }
		country_event = { id = mother_akan.3 }
	}

	#Ynn Worship set deity
	if = {
		limit = {
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		country_event = { id = ynn_zodiac.3 }
		if = {
			limit = {
				has_regency = no
			}
			ruler_ynn_zodiac = yes
		}
	}

	#Kheionism set deity
	if = {
		limit = { religion = kheionism }
		country_event = { id = kheionism.3 }
	}

	#Raj Vizier
	if = { limit = { has_country_flag = raj_vizier }
		overlord = {
			set_country_flag = raj_vizier_just_died
			country_event = { id = rahenraj.2100 days = 1 }
		}
	}

	#Rogieria Death Events
	#Death of Rogier
	if = {
		limit = {
			or = {
				tag = B07
				tag = B37
			}
			not = { has_ruler_flag = rogieria_rogier_alive }
		}
		country_event = { id = flavor_rogieria.30 days = 1 }
	}

	#Death of the Young Owl
	if = {
		limit = {
			tag = B37
			had_ruler_flag = {
				flag = rogieria_young_owl_alive
				days = 365
			}
			not = { has_ruler_flag = rogieria_young_owl_alive }
		}
		country_event = { id = flavor_rogieria.31 days = 1 }
	}

	if = {
		limit = {
			ruler_is_harpy = yes
			is_female = no
		}
		define_ruler = {
			female = yes
		}
	}
	#event for Bianfang to change tyranny value based on new ruler's trait
	if = {
    limit = {
		OR = {
			tag = Y09
			AND = {
				tag = Z66
				was_tag = Y09
			}
		}
        has_regency = no
    }
    country_event = { id = bianfang.1000 days = 50 }
	}

	# If your guy dies during the whaling expedition
	if = {
		limit = { has_country_modifier = feiten_active_whaling_expedition }
		country_event = { id = flavor_feiten.7 }
	}
	#Wesdam/Madelaire succession
	if = {
		limit = {
			tag = A04
			has_regency = no
			NOT = { has_country_flag = wesdam_succession_crisis }
			has_country_flag = wesdam_first_succession
		}
		clr_country_flag = wesdam_first_succession
		set_country_flag = wesdam_succession_crisis
		country_event = { id = flavor_wesdam.11 }
	}
	if = {
		limit = {
			tag = A04
			has_regency = no
			NOT = { has_country_flag = wesdam_succession_crisis }
		}
		set_country_flag = wesdam_first_succession
	}
	if = {
		limit = {
			tag = H85
			has_reform = truedagger_intrigue_court
		}
		country_event = {
			id = flavor_truedagger.11
		}
	}
}

on_new_consort = {
	country_event = { id = consort_events.2 }
	if = {
		limit = {
			consort_is_harpy = yes
			has_female_consort = no
		}
		if ={
			limit = {
				OR = {
					tag = F49
					was_tag = F49
				}
			}
			set_consort_culture = desert_elf
		}
		else_if = {
			limit = {
				consort_culture = firanyan_harpy
			}
			set_consort_culture = gelkar
		}
		else_if = {
			limit = {
				consort_culture = siadunan_harpy
			}
			random_list = {
				50 = {
					set_consort_culture = surani
				}
				50 = {
					set_consort_culture = ghankedhen
				}
			}
		}
		else_if = {
			limit = {
				consort_culture = feng_harpy
			}
			set_consort_culture = sikai
		}
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			OR = {
				consort_is_elven = yes
				consort_is_dwarven = yes
				consort_is_gnomish = yes
				consort_is_half_elven = yes
			}
		}
		country_event = { id = anb_ruler.100 }
	}
	if = {
		limit = { has_ruler_flag = had_10_years_anniversary }
		clr_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = had_20_years_anniversary }
		clr_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = consort_had_affection_of_ruler }
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
}

# country
on_monarch_death = {
	#Anbennar
	events = {
		witch_king.1		#Death of a Witch King
		#magic_misc_events.4	#Undead Army
		#magic_project_lichdom.14	#Force Regency Council
		jadd_empire.1		#Move the court
		aelnar.25			#Does lithiel assume control
		aelnar.39			#The Turning Point
		ynn_barges.1		#Ynnic barges
		ynn_barges.103		#Ynnic Barges for republics
		cyranvar.1			#Oak Monarchy
		eordellon.1			#Funereal Season Honoring
		flavor_blademarches.3 #Blademarches succession event
		castanortrials.99	# Castanorian Interregnum
		flavor_corintar.4	#Bluetusk's Retirement
		azka_evran.11		#Deggarion's Death
		verkaldromak.71		#Verkal Dromak election from mages
		magic_project_lichdom.12 # Revival
		vampire_ruler.33 # Vampire Heir Returns
		flavor_castanor.211 # One of the Castans during disaster dies
		flavor_elikhand.7 #Entef put to rest and mummified
		ogre.25 #Rancor is killed
		flavor_azjakuma.34	#removes magic study modifier
		flavor_dhenijanraj.10 #Bim Lau Restoration Burial
		flavour_tluukt.50 #Death of Tluukt
	}
	if = {
		limit = { has_government_attribute = no_stability_loss_on_monarch_death }
		add_stability = 1
	}

	#Anbennar
	country_event = { id = vampires_estate_events.13  days = 1 } # Revival
	country_event = { id = magic_misc_events.4 days = 60 } #Undead Army
	country_event = { id = flavor_arverynn.52 } #Hrenvyr
	if = {
		limit = {
			has_reform = godhood_reform
			NOT = { has_country_flag = elven_constellation_done }
		}
		country_event = { id = aelnar.65 days = 10 }
	}
	if = {
		limit = {
			OR = {
				has_country_flag = no_stab_hit_on_ruler_death
				has_a_primary_cult_selected = yes
			}
			OR = {
				government = tribal
				government = monarchy
			}
		}
		add_stability = 1
	}
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
		}
		country_event = { id = bim_lau_flavour.5 days = 3 } #Bim Lau Great Necropolis Entombment
	}
	if = {
		limit = {
			has_reform = tagharoghi_reform
		}
		clr_country_flag = oni_ruler_shinukhorchi
		clr_country_flag = oni_ruler_chumijemoya
		clr_country_flag = oni_ruler_ajgriijarul
		clr_country_flag = oni_ruler_kabiurgarko
		clr_country_flag = oni_ruler_khelorvalshi
		if = {
			limit = {
				has_country_flag = oni_heir_shinukhorchi
			}
			clr_country_flag = oni_heir_shinukhorchi
			set_country_flag = oni_ruler_shinukhorchi
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_chumijemoya
			}
			clr_country_flag = oni_heir_chumijemoya
			set_country_flag = oni_ruler_chumijemoya
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_ajgriijarul
			}
			clr_country_flag = oni_heir_ajgriijarul
			set_country_flag = oni_ruler_ajgriijarul
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_kabiurgarko
			}
			clr_country_flag = oni_heir_kabiurgarko
			set_country_flag = oni_ruler_kabiurgarko
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_khelorvalshi
			}
			clr_country_flag = oni_heir_khelorvalshi
			set_country_flag = oni_ruler_khelorvalshi
		}
	}
	# Give them a temp ruler while waiting for their vamp to revive
	if = {
		limit = {
			ruler_can_revive = yes
			has_states_general_mechanic = yes
			NOT = { has_country_flag = reviving_ruler }
		}
		set_country_flag = reviving_ruler
		define_ruler = {
			adm = 0
			mil = 0
			dip = 0
			regency = yes
		}
	}
	if = { limit = { tag = R51 }
		country_event = { id = rahenraj.90 }
	}
}

# country
on_regent = {

	events = {
		tribal_succession.1	# harsh anti-tribals.
	}
	country_event = { id = flavor_malacnar.9 days = 1 }
	#Mother Akan set deity
	if = {
		limit = { religion = mother_akan }
		country_event = { id = mother_akan.3 }
	}
	#Ynn Worship set deity
	if = {
		limit = {
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		country_event = { id = ynn_zodiac.3 }
		heir_ynn_zodiac = yes
	}

	#Kheionism set deity
	if = {
		limit = { religion = kheionism }
		country_event = { id = kheionism.3 }
	}
}

# country
on_extend_regency = {
}

# country
on_new_term_election = {
	events = {
		700		# Election event
		elections.720		# Dutch Republic
		elections.800	# Lottery election
		pirates.1

		#Anbennar
		# elections.900		#Allclan Nezkaru Council
		diggy_fallen.9
		flavor_roilsard.12	# Roilsard Special
		marlliande.1
		flavour_reuyel.1
		flavor_krak.200 #krakdhumvror clan council
		flavor_krak.201 #krakdhumvror free council
		jinqiu.1			#Jinqiu election
		sunrise.0			#Hiderion Retires
		sunrise.1			#Sunrise election
		flavour_bulwar_tag.1	#Bulwar 12 families
		flavour_bulwar_tag.35	#From Bulwar MT
		flavor_krakazol.200 #Krakazol Olzonog
		flavor_newshire.11
		# flavor_cestirmark.1 #United Trollsbay elections
	}

	if = {
		limit = { religion = kheionism }
		country_event = { id = kheionism.3}
	}
}

# country
on_death_election = {
	if = {
		limit = { has_reform = presidential_despot_reform }
		remove_government_reform = presidential_despot_reform
	}
	if = {
		limit = {
			has_government_attribute = is_pirate_republic_reform
		}
		set_country_flag = pirate_death_election
		country_event = { id = pirates.1 }
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		overlord = { country_event = { id = black_demesne.4 } }
	}
	events = {
		701		# Election event
		elections.721		# Dutch Republic
		elections.800		# Lottery election

		#Anbennar
		diggy_fallen.9
		flavor_roilsard.13	# Roilsard Special
		ynn_barges.102
		marlliande.2
		# elections.901
		flavour_reuyel.2
		black_demesne.1
		flavor_krak.200 #krakdhumvror clan council
		flavor_krak.201 #krakdhumvror free council
		jinqiu.2			#Jinqiu election
		sunrise.2			#Sunrise election
		azkare.221			#Hiderion's death election
		yingzhen.46			#Yingshi Sinistral Republic Election
		flavour_bulwar_tag.1	#Bulwar twelve families
		flavour_bulwar_tag.35	#From Bulwar MT
		flavor_krakazol.201 #Krakazol Olzonog
		flavor_newshire.12
		flavor_newshire.41
		# flavor_cestirmark.2 #United Trollsbay death election
	}

	if = {
		limit = { religion = kheionism }
		country_event = { id = kheionism.3}
	}
}

# country
on_death_foreign_slave_ruler = {
	events = {
		#mamluk_events.0

		#Anbennar
		slave_ruler_election.0
	}
}

# country
on_replace_governor = {
	events = {
		elections.707
	}
}

# country
on_bankruptcy = {
	events = {
		racial_modifiers.5		#Racial admin change if unmatching
	}
	clear_roadwarrior_modifiers = yes
	if = {
		limit = { has_reform = roadwarrior_great_convoy }
		add_country_modifier = {
			name = roadwarrior_main_1
			duration = -1
		}
	}
	#hoardcurse modifier
	remove_country_modifier = the_reformist
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	events = {
		610
	}

	#Mulen cancel income transfer
	# if = {
	# 	limit = {
	# 		tag = F47
	# 	}
	# 	F50 = {
	# 		country_event = {
	# 			id = flavour_mulen.24
	# 			days = 1
	# 		}
	# 	}
	# }
}

# country
on_heir_death = {
	if = {
		limit = { has_ruler_modifier = heir_mage_personality_mod }
		remove_country_modifier = heir_mage_personality_mod
	}
	if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
	if = {
		limit = { has_country_flag = albrecht_achilles_flag }
		clr_country_flag = albrecht_achilles_flag #Death of original Albrecht Achilles
	}
	if = {
		limit = { has_ruler_flag = sancaga_cikma }
		clr_ruler_flag = sancaga_cikma
		every_owned_province = {
			limit = {
				has_province_modifier = heir_in_training
			}
			remove_province_modifier = heir_in_training
		}
	}
	if = {
		limit = { has_ruler_flag = returned_from_sancaga_sikma_province }
		clr_ruler_flag = returned_from_sancaga_sikma_province
	}
	if = {
		limit = { has_reform = teplinbasiet_arena_kingdom_reform }
		clr_country_flag = Y58_allied_noble_won
		clr_country_flag = Y58_local_fighter_won
		clr_country_flag = Y58_prominent_dauloph_won
		clr_country_flag = Y58_relative_won
	}
		#Anbennar
	events = {

	}
	if = {
		limit = {
			OR = {
				has_reform = tagharoghi_reform
				has_reform = demon_empire_reform
			}
		}
		clr_country_flag = oni_heir_shinukhorchi
		clr_country_flag = oni_heir_chumijemoya
		clr_country_flag = oni_heir_ajgriijarul
		clr_country_flag = oni_heir_kabiurgarko
		clr_country_flag = oni_heir_khelorvalshi
	}
}

# country
on_queen_death = {
	if = {
		limit = { has_ruler_modifier = consort_mage_personality_mod }
		remove_country_modifier = consort_mage_personality_mod
	}
	if = {
		limit = { has_consort_flag = 10_years_anniversary }
		set_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_consort_flag = 20_years_anniversary }
		set_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_consort_flag = consort_has_affection_of_ruler }
		set_ruler_flag = consort_had_affection_of_ruler
	}

	if = {
		limit = {
			has_regency = no
			NOT = { has_ruler_flag = widow_widower }
		}
		set_ruler_flag = widow_widower
	}
	if = {
		limit = { has_consort_regency = no }
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = { has_ruler_flag = accepted_help_from_spouses_family }
		clr_ruler_flag = accepted_help_from_spouses_family
	}
	if = {
		limit = { has_ruler_flag = helped_spouses_family }
		clr_ruler_flag = helped_spouses_family
	}
	if = {
		limit = { has_ruler_flag = refused_to_help_spouses_family }
		clr_ruler_flag = refused_to_help_spouses_family
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		clr_ruler_flag = has_lowborn_consort
	}
	if = {
		limit = { has_country_modifier = consort_adm_advice }
		remove_country_modifier = consort_adm_advice
	}
	if = {
		limit = { has_country_modifier = consort_dip_advice }
		remove_country_modifier = consort_dip_advice
	}
	if = {
		limit = { has_country_modifier = consort_mil_advice }
		remove_country_modifier = consort_mil_advice
	}
	if = {
		limit = { has_country_modifier = without_spouse_advice }
		remove_country_modifier = without_spouse_advice
	}
	if = {
		limit = { has_ruler_modifier = affectionate_royal_couple }
		remove_country_modifier = affectionate_royal_couple
	}
	if = {
		limit = { has_ruler_modifier = bav_woman_scorned_mod }
		remove_country_modifier = bav_woman_scorned_mod
	}
	if = {
		limit = { has_ruler_modifier = bav_building_wife_church }
		remove_country_modifier = bav_building_wife_church
	}
	clr_ruler_flag = marriage_length
}

# country
on_new_heir = {
	# if = {
	# 	limit = {
	# 		has_country_flag = enabled_cult_for_heirs
	# 	}
	# 	country_event = {
	# 		id = fetishist_flavor.600
	# 	}
	# }
	country_event = { id = racial_misc.1 days = 2 }		# Half-orc heirs for cross-racial marriages
	country_event = { id = racial_misc.2 days = 2 }		# Half-elf heirs for cross-racial marriages
	country_event = { id = racial_misc.3 days = 2 }		# Human heirs for half-elf human marriages
	country_event = { id = racial_misc.10 days = 1 }	# Heirs are set to their parents race since event heirs are given primary culture instead
	country_event = { id = rahenraj.6 days = 5 }		# Replace heir if incorrect race for Senapti
	country_event = { id = anb_ruler.101 days = 3 }		# Immortal/long-lived trait
	if = {
		limit = {
			has_country_flag = Y91_participating_in_festival
		}
		clr_country_flag = Y91_heir_participating

		clr_country_flag = Y91_picked_tournament_participants
		country_event = { id = flavor_nuugdan_tsarai.68 }
	}
}

# country
on_weak_heir_claim = {
	events = {
		611		# Pretenders rise up
	}
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
		theocracy.1
		theocracy.2			#Anbennar, for Rahen Tughayasa Oracles
		flavor_sca.2			# Education Focus of the new Ruler

		#Anbennar
		magocracy.1
		adventurer.1
		flavor_azjakuma.4
		one_xia.40			#Xiaken/Wulin selection
		one_xia.41			#One Xia selection
		shatteredcrown.44	#Shat Crown heirs
		flavour_balrijin.30 #Balrijin heirs
		verkalozovar_events.1001
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	emperor = {
		save_global_event_target_as = Emperor
		#Anbennar - Emperor won't denounce themselves
		if = {
			limit = {
				has_country_modifier = denounced_witch_king
			}
			remove_country_modifier = denounced_witch_king
		}
	}
	events = {
		900
	}
}

# Called whenever a new emperor is elected
# FROM = Previous Emperor
# ROOT = New Emperor
on_emperor_elected = {
	every_elector = {
		if = {
			limit = {
				preferred_emperor = root
			}
			change_variable = {
				which = supported_successive_emperors
				value = 1
			}
		}
		else = {
			set_variable = {
				which = supported_successive_emperors
				value = 0
			}
		}
	}

	emperor = {
		save_global_event_target_as = Emperor
		country_event = { id = long_lived_emperor.1 }
	}
	if = {
		limit = {
			ROOT = {
				has_country_modifier = istralari_commanders_istralore
			}
		}
		every_country = {
			if = {
				limit = {
					is_part_of_hre = yes
					NOT = { has_country_modifier = istralari_commanders_empire }
				}
				country_event = {
					id = flavor_istralore.10
				}
			}
		}
	}
	FROM = {
		if = {
			limit = { has_country_modifier = diet_occupied }
			remove_country_modifier = diet_occupied
			ROOT = {
				add_country_modifier = { name = diet_occupied duration = -1 }
			}
		}
		if = {
			limit = {
				any_country = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
			every_country = {
				limit = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
				reverse_remove_opinion = {
					modifier = opinion_imperial_diplomacy
					who = prev
				}
				ROOT = {
					add_opinion = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
		}
	}
	FROM = {
		if = {
			limit = {
				has_country_modifier = giberd_gnomish_elector_mod
			}
			remove_country_modifier = giberd_gnomish_elector_mod
		}
	}
	ROOT = {
		if = {
			limit = {
				A81 = { #Giberd
					has_country_flag = gnomish_elector
					is_elector = yes
				}
				NOT = { hre_reform_passed = emperor_rechenschaft }
			}
			add_country_modifier = {
				name = giberd_gnomish_elector_mod
				duration = -1
			}
		}
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
		909
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
		religious_leagues.1
		religious_leagues.8
	}
}

on_change_hre_religion = {
	events = {
		religious_leagues.2
		religious_leagues.3
	}
}

on_hre_religion_white_peace = {
	events = {
		religious_leagues.4
	}
}

# When a non-native changes government type
on_government_change = {
	clr_country_flag = pirate_mutineer_council
	clr_country_flag = caretaker_revolutionary_government
	if = {
		limit = {
			NOT = { government = monarchy }
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			NOT = { government = monarchy }
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	# if = {
		# limit = {
			# OR = {
				# tag = ENG
				# tag = GBR
			# }
			# any_owned_province = {
				# has_province_modifier = rotten_borough
			# }
		# }
		# every_owned_province = {
			# limit = {
				# has_province_modifier = rotten_borough
			# }
			# remove_province_modifier = rotten_borough
		# }
	# }
	if = {
		limit = { has_country_modifier = the_reign_of_terror }
		remove_country_modifier = the_reign_of_terror
	}
	if = {
		limit = {
			has_global_flag = great_peasants_war_flag
			is_part_of_hre = yes
			has_reform = peasants_republic
		}
		1 = {
			change_variable = {
				which = GPW_counting_variable
				value = -3
			}
		}
	}

	#Anbennar
	if = {
		limit = {
			THIS = {
				culture = cave_goblin
			}
			has_global_flag = cave_goblin_modernity
		}
		country_event = {
			id = cavegoblinflavor.2 #cave goblin modernity for cave goblins still tribal when the global event fired
		}
	}
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
		610
	}
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	events = {
		# celestial_empire_events.1 # Empire dismantled
	}
	on_annexed_estate_privileges_effect = yes
	FROM = {
		if = {
			limit = { is_emperor_of_china = yes }
			dismantle_empire_of_china = yes
			set_global_flag = empire_of_china_dismantled
		}
		if = {
			limit = { has_country_modifier = legatus_natus }
			remove_country_modifier = legatus_natus
			set_global_flag = no_legatus_natus
		}
		if = {
			limit = { has_country_modifier = primas_germaniae }
			remove_country_modifier = primas_germaniae
			set_global_flag = no_primas_germaniae
		}
		if = {
			limit = {
				OR = {
					is_companion = yes
					mission_completed = G32_with_two_companions
				}
			}
			clr_global_flag = G32_companions_active
		}
		if = {	#Can't inherit Ynnic Iosahar by annexing their Overlord unless you're a Ynnic Overlord
			limit = { ynnic_iosahar = 1 }
			every_subject_country = {
				country_event = { id = ynn_events.19 }
			}
		}

		#transfer dwarovkron fragments
		if = {
			limit = { has_dwarovkron_fragment = yes }
			transfer_dwarovkron_fragments = yes
		}

		#honderaak incident, hill gnolls annexed
		if = {
			limit = {
				tag = A49
				OR = {
					364 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					6513 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					377 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					375 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
				}
			}
			ROOT = { country_event = { id = flavor_honderaak.1 days = 2 } }
		}
	}

	#Mulen cancel income transfer
	# if = {
	#	limit = {
	#		tag = F47
	#	}
	#	F50 = {
	#		country_event = {
	#			id = flavour_mulen.24
	#			days = 1
	#		}
	#	}
	# }
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	clear_global_event_target = EmperorOfChina
	events = {
	}
}

#AnbennarNewVer - change this to khetaratan yo
# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	# save_global_event_target_as = EmperorOfChina
	# #if = {	#i dont think you need this because of our racial shit
	# #	limit = {
	# #		technology_group = nomad_group
	# #	}
	# #	change_technology_group = chinese
	# #	change_unit_type = chinese
	# #}
	# if = {
		# limit = {
			# OR = {
				# NOT = { government = monarchy }
				# government = tribal
			# }
		# }
		# change_government_to_monarchy = yes
	# }
	# add_government_reform = celestial_empire
	# set_mandate = 60
	# set_meritocracy = 60
	# add_country_modifier = {
		# name = new_mandate_holder
		# duration = 9125
	# }
	# 1816 = {
		# if = {
			# limit = {
				# NOT = { owned_by = root }
				# NOT = { is_core = root }
			# }
			# add_core = root
		# }
	# }
	# 1821 = {
		# if = {
			# limit = {
				# NOT = { owned_by = root }
				# NOT = { is_core = root }
			# }
			# add_core = root
		# }
	# }
	# 667 = {
		# if = {
			# limit = {
				# NOT = { owned_by = root }
				# NOT = { is_core = root }
			# }
			# add_core = root
		# }
	# }
	# china_superregion = {
		# limit = {
			# NOT = { is_core = ROOT }
		# }
		# add_permanent_claim = ROOT
	# }
	# if = {
		# limit = {
			# has_dlc = "Mandate of Heaven"
		# }
		# remove_faction = temples
		# remove_faction = enuchs
		# remove_faction = bureaucrats
	# }
	# if = {
		# limit = {
			# has_country_modifier = lost_mandate_of_heaven
		# }
		# remove_country_modifier = lost_mandate_of_heaven
	# }
	# country_event = { #Reforming the Bureaucracy
		# id = china_events.31
		# days = 365
	# }
	# country_event = {
		# id = china_events.32 #Records of the last Empire
		# days = 183
	# }
	# country_event = {
		# id = celestial_empire_events.2
		# days = 1825
	# }
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	remove_government_reform = celestial_empire
	set_government_rank = 2
	add_country_modifier = {
		name = lost_mandate_of_heaven
		duration = 7300	# 20 years
	}
	add_stability = -2
	china_superregion = {
		limit = {
			is_permanent_claim = ROOT
		}
		remove_claim = ROOT
	}
	if = {
		limit = {
			has_country_modifier = new_mandate_holder
		}
		remove_country_modifier = new_mandate_holder
	}
}

on_embrace_revolution = {
	if = {
		limit = {
			any_subject_country = {
				has_country_modifier = colony_inspired_by_revolution
			}
		}
		every_subject_country = {
			remove_country_modifier = colony_inspired_by_revolution
		}
	}
	if = {
		limit = { NOT = { government = republic } }
		change_government_to_republic = yes
	}
	if = {
		limit = {
			revolution_target_exists = no
			is_great_power = yes
		}
		set_revolution_target = ROOT
		add_government_reform = revolutionary_republic_reform
		if = {
			limit = {
				any_country = {
					has_country_flag = last_revolutionary_country
				}
			}
			every_country = {
				limit = {
					has_country_flag = last_revolutionary_country
				}
				clr_country_flag = last_revolutionary_country
			}
		}
	}
	else = {
		add_government_reform = junior_revolutionary_republic_reform
	}
	if = {
		limit = { has_reform = parliamentary_reform }
		remove_government_reform = parliamentary_reform
	}
	kill_ruler = yes
	set_country_flag = revolutionary_republic_flag
	set_country_flag = had_revolution
}

# THIS = Revolutionary country being beaten, FROM = Country enforcing the peace treaty
on_dismantle_revolution = {
	events = {
		center_of_revolution.1500
	}
	if = {
		limit = {
			any_country = {
				has_country_flag = last_revolutionary_country
			}
		}
		every_country = {
			limit = {
				has_country_flag = last_revolutionary_country
			}
			clr_country_flag = last_revolutionary_country
		}
	}
	set_country_flag = last_revolutionary_country
}

# province
on_adm_development = {
	if = {
		limit = { owner = { has_country_flag = enable_supplemental_development_flag } }
		random_list = {
			20 = { add_base_tax = 1 }
			80 = { }
		}
	}

	#Anbennar
	events = {
		kheionai.4
		# flavour_mulen.1
		# flavour_mulen.2
	}
	if = {
		limit = { owner = { has_estate_privilege = estate_wolf_command_war_room_rights } }
		owner = { add_legitimacy = 1 }
	}
	if = {
		limit = { has_province_modifier = jaddari_blessed_land }
		random = {
			chance = 25
			add_base_tax = 1
		}
	}
	jaddari_deioderan_dev_counter_update = yes
	# if = {
		# limit = { owner = { has_country_flag = federation_state_council } }
		# governing_point_adm = yes
	# }
	if = {
		limit = {
			owner = { has_estate = estate_castonath_patricians }
			OR = {
				province_id = 831
				province_id = 832
				province_id = 833
			}
		}
		add_province_modifier = {
			name = devved_castonath_recently_dummy
			duration = 1825
			hidden = yes
		}
	}
	# Castanor stuff
	if = {
		limit = { owner = { tag = B32 } }
		if = {
			limit = {
				OR = {
					region = inner_castanor_region
					region = south_castanor_region
					region = west_castanor_region
				}
				owner = { mission_completed = castanor_home_of_humanity }
			}
			random = {
				chance = 25
				add_base_tax = 1
			}
		}
		if = {
			limit = {
				area = castonath_area
				owner = { mission_completed = castanor_modernizing_castonath }
			}
			change_variable = {
				which = numTimesCastonathDevved
				value = 1
			}
		}
	}

	# Ancient Dwarven Knowledge
	if = {
		limit = {
			OR = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
			}
		}
		if = {
			limit = { owner = { check_variable = { ancientDwarvenKnowledge = 1 } } }
			owner = { subtract_variable = { ancientDwarvenKnowledge = 1 } }
			add_base_tax = 1
			add_next_institution_embracement_scaled = 5
		}
	}
}

# province
on_dip_development = {
	if = {
		limit = { owner = { has_country_flag = enable_supplemental_development_flag } }
		random_list = {
			20 = { add_base_production = 1 }
			80 = { }
		}
	}

	#Anbennar
	events = {
		kheionai.4
		# flavour_mulen.1
		# flavour_mulen.2
	}
	if = {
		limit = { has_province_modifier = jaddari_blessed_land }
		random = {
			chance = 25
			add_base_production = 1
		}
	}
	jaddari_deioderan_dev_counter_update = yes
	# if = {
		# limit = { owner = { has_country_flag = federation_state_council } }
		# governing_point_dip = yes
	# }
	if = {
		limit = {
			owner = { has_estate = estate_castonath_patricians }
			OR = {
				province_id = 831
				province_id = 832
				province_id = 833
			}
		}
		add_province_modifier = {
			name = devved_castonath_recently_dummy
			duration = 1825
			hidden = yes
		}
	}
	# Castanor stuff
	if = {
		limit = { owner = { tag = B32 } }
		if = {
			limit = {
				OR = {
					region = inner_castanor_region
					region = south_castanor_region
					region = west_castanor_region
				}
				owner = { mission_completed = castanor_home_of_humanity }
			}
			random = {
				chance = 25
				add_base_production = 1
			}
		}
		if = {
			limit = {
				area = castonath_area
				owner = { mission_completed = castanor_modernizing_castonath }
			}
			change_variable = {
				which = numTimesCastonathDevved
				value = 1
			}
		}
	}

	# Ancient Dwarven Knowledge
	if = {
		limit = {
			OR = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
			}
		}
		if = {
			limit = { owner = { check_variable = { ancientDwarvenKnowledge = 1 } } }
			owner = { subtract_variable = { ancientDwarvenKnowledge = 1 } }
			add_base_production = 1
			add_next_institution_embracement_scaled = 5
		}
	}
}

# province
on_mil_development = {
	if = {
		limit = { owner = { has_country_flag = enable_supplemental_development_flag } }
		random_list = {
			20 = { add_base_manpower = 1 }
			80 = { }
		}
	}

	#Anbennar
	events = {
		kheionai.4
		# flavour_mulen.1
		# flavour_mulen.2
	}
	if = {
		limit = { owner = { has_estate_privilege = estate_boar_command_war_room_rights } }
		owner = { add_legitimacy = 1 }
	}
	if = {
		limit = { has_province_modifier = jaddari_blessed_land }
		random = {
			chance = 25
			add_base_manpower = 1
		}
	}
	jaddari_deioderan_dev_counter_update = yes
	# if = {
		# limit = { owner = { has_country_flag = federation_state_council } }
		# governing_point_mil = yes
	# }
	if = {
		limit = {
			owner = { has_estate = estate_castonath_patricians }
			OR = {
				province_id = 831
				province_id = 832
				province_id = 833
			}
		}
		add_province_modifier = {
			name = devved_castonath_recently_dummy
			duration = 1825
			hidden = yes
		}
	}
	# Castanor stuff
	if = {
		limit = { owner = { tag = B32 } }
		if = {
			limit = {
				OR = {
					region = inner_castanor_region
					region = south_castanor_region
					region = west_castanor_region
				}
				owner = { mission_completed = castanor_home_of_humanity }
			}
			random = {
				chance = 25
				add_base_manpower = 1
			}
		}
		if = {
			limit = {
				area = castonath_area
				owner = { mission_completed = castanor_modernizing_castonath }
			}
			change_variable = {
				which = numTimesCastonathDevved
				value = 1
			}
		}
	}

	# Ancient Dwarven Knowledge
	if = {
		limit = {
			OR = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
			}
		}
		if = {
			limit = { owner = { check_variable = { ancientDwarvenKnowledge = 1 } } }
			owner = { subtract_variable = { ancientDwarvenKnowledge = 1 } }
			add_base_manpower = 1
			add_next_institution_embracement_scaled = 5
		}
	}
}

on_overextension_pulse = {
	random_events = {	#for future me, the numbers is weights which determine how likely they'll fire from the list
		100 = overextension.1
		100 = overextension.2
		100 = overextension.3
		100 = overextension.4
		100 = overextension.5
		100 = overextension.6
		100 = overextension.7
		100 = overextension.8
		100 = overextension.9
		100 = overextension.10
	}
}

on_colonial_pulse = {
	random_events = {
		100 = colonial.1
		100 = colonial.2
		100 = colonial.3
		100 = colonial.4
		100 = colonial.5
		100 = colonial.8
		100 = colonial.9
		100 = colonial.10
		100 = colonial.11
		100 = colonial.12
		100 = colonial.13
		100 = colonial.14
		100 = colonial.15
		100 = colonial.16
		100 = colonial.17
		100 = colonial.18
		#25 = dodo.1

		#Anbennar
		125 = anb_colonial.1
		125 = anb_colonial.2
		125 = anb_colonial.3
		125 = anb_colonial.4	#disabled cos its lame
		125 = anb_colonial.5
		125 = anb_colonial.6
		125 = anb_colonial.7
		100 = anb_colonial.8
		100 = anb_colonial.9
		100 = anb_colonial.10
		125 = anb_colonial.11

		1000 = flavor_grombar.27

		15000 = 0
	}
}

on_siberian_pulse = {
	random_events = {
		#Anbennar
		100 = anb_colonial_monstrous_frontier.1
		125 = anb_colonial_monstrous_frontier.2
		25 = anb_colonial_monstrous_frontier.3
		100 = anb_colonial_monstrous_frontier.4
		100 = anb_colonial_monstrous_frontier.5
		25 = anb_colonial_monstrous_frontier.6
		50 = anb_colonial_monstrous_frontier.7
		100 = anb_colonial_monstrous_frontier.8
		100 = anb_colonial_monstrous_frontier.9

		10000 = 0
	}
}


# country random events
on_monthly_pulse = {
}
on_yearly_pulse = {
}
on_yearly_pulse_2 = {
}
on_yearly_pulse_3 = {
}
on_yearly_pulse_4 = {
}
on_yearly_pulse_5 = {
}

# country random events
on_bi_yearly_pulse = {
	events = {
		center_of_revolution.2950
		center_of_revolution.3000
		rahenraj.2000
		rahenraj.2001
		# allclan.704
		bulwar_flavour.0
		xhazobkult_events.2000
		spirits.500 #Temple Quest pulse
		spirits.607 #Check to see if any corrupted hearts are ready to drain
		spirits.011 #Plundering pulse
		spirits.013 #Another spirits pulse event. It's performant I swear
		harpy_events.100 #Harpy harem heir selection
		bulwar_flavour.11
		ynn_events.22 #Cannorian traders reach Adbrabohvi
	}
	if = { limit = { ruler_can_revive = yes } save_ruler_stats = yes }
	if = { limit = { capital = 4411 has_reform = raja_reform } country_event = { id = rahenraj.2000 days = 365 } }
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
			ruler_has_mage_personality = yes
			NOT = { has_country_flag = bim_lau_mage_entombment }
		}
		set_country_flag = bim_lau_mage_entombment
	}
	if = { limit = { religion = xhazobkult } country_event = { id = xhazobkult_events.2000 days = 365 } }
	if = { limit = { tag = H77 has_country_flag = lodhum_tourism_enabled } country_event = { id = flavor_lodhum.100 } }
	if = { limit = { tag = H78 mission_completed = seghdihr_rely_ourselves } seghdihr_update_flow_modifiers = yes }
	if = {
		limit = {
			tag = H85
			has_heir = yes
			has_regency = no
			has_reform = truedagger_intrigue_court
			NOT = {
				has_country_flag = flag_truedagger_heir_done
			}
		}
		country_event = {
			id = flavor_truedagger.12
		}
	}
	random_events = {
		# randomevents.txt
		100 = 3051
		100 = 5008
		100 = 5014
		100 = 5015
		100 = 5017
		100 = 5018
		100 = 5019
		100 = 5020
		100 = 5021
		100 = 5022
		100 = 5023
		100 = 5024
		100 = 5025
		100 = 5027
		100 = 5032
		100 = 5040
		100 = 5045
		#100 = 5050
		100 = 5051
		100 = 5052
		100 = 5053
		10 = 5054
		100 = 5055
		100 = 5056
		100 = 5058
		100 = 5059
		100 = 5060
		#100 = 5061
		100 = 5064
		100 = 5065
		#100 = 5066
		100 = 5068
		100 = 5070
		100 = 5071
		100 = 5072
		100 = 5074
		100 = 5075
		100 = 5076
		100 = 5077
		100 = 5082
		100 = 5083
		100 = 5084
		100 = 5085
		#100 = 5086
		100 = 5088
		100 = 5089
		100 = 5090
		100 = 5091
		100 = 5092
		100 = 5093
		100 = 5094
		100 = 5095
		10 = 5096
		100 = 5097
		100 = 5098
		100 = 5099
		100 = 6000
		100 = 6001
		100 = 6003
		#100 = 6004
		#100 = 6005
		#100 = 6006
		100 = 6012
		100 = 6013
		100 = 6015
		100 = 710
		#100 = 711
		100 = 712
		100 = 713
		100 = 714
		100 = 715
		100 = 716
		100 = 717
		100 = 718
		100 = 719
		100 = 720
		100 = 722
		100 = 723
		#100 = 724
		100 = 725
		100 = 726
		100 = 727
		100 = 728
		100 = 729

		100 = random_event.1
		# 100 = random_event.2	#this is America culture shift
		100 = random_event.3
		#100 = random_event.4
		100 = random_event.5
		100 = random_event.6
		100 = random_event.7
		#100 = random_event.8
		150 = random_event.9
		100 = random_event.10
		100 = random_event.11
		100 = random_event.12
		#100 = random_event.13	#refers to mecca so
		100 = random_event.14
		100 = random_event.15
		100 = random_event.16

		100 = random_event.26

		#Culture and Religion Events
		#125 = culture_religion_events.1 #disabled
		125 = culture_religion_events.3
		125 = culture_religion_events.4
		125 = culture_religion_events.5
		125 = culture_religion_events.6
		125 = culture_religion_events.7
		125 = culture_religion_events.8
		125 = culture_religion_events.9
		125 = culture_religion_events.10
		125 = culture_religion_events.11
		125 = culture_religion_events.12
		125 = culture_religion_events.13
		125 = culture_religion_events.14
		125 = culture_religion_events.15
		125 = culture_religion_events.16
		100 = culture_religion_events.17
		125 = culture_religion_events.18
		125 = culture_religion_events.19
		125 = culture_religion_events.20
		175 = culture_religion_events.21
		125 = culture_religion_events.22
		125 = culture_religion_events.23

		# Old Centralisation/Decentralisation
		100 = 806

		# Mercantilism
		100 = 6326
		100 = 6327
		100 = 6328
		100 = 6329

		# Trade Specific
		100 = trade.1
		100 = trade.2
		100 = trade.3
		100 = trade.4
		100 = trade.5
		100 = trade.6
		100 = trade.7
		100 = trade.8
		100 = trade.9
		100 = trade.10
		100 = trade.11
		100 = trade.12


		# Tradegoods events
		100 = 6418
		100 = 6419
		100 = 6420
		100 = 6421
		100 = 6422
		100 = 6423
		100 = 6424
		100 = 6425
		100 = 6426
		100 = 6427
		100 = 6428
		100 = 6429
		100 = 6431
		100 = 6432
		100 = 6433
		100 = 6434

		# Refoms, when having parliaments.
		100 = reforms.1
		100 = reforms.2
		100 = reforms.3
		100 = reforms.4

		100 = randomeventsstapehordes.1
		100 = randomeventsstapehordes.2
		100 = randomeventsstapehordes.3
		100 = randomeventsstapehordes.4
		100 = randomeventsstapehordes.5
		100 = randomeventsstapehordes.6
		100 = randomeventsstapehordes.7
		100 = randomeventsstapehordes.8
		100 = randomeventsstapehordes.13
		100 = randomeventsstapehordes.14
		100 = randomeventsstapehordes.17
		100 = randomeventsstapehordes.19
		100 = randomeventsstapehordes.20
		100 = randomeventsstapehordes.21
		100 = randomeventsstapehordes.22
		100 = randomeventsstapehordes.23
		100 = randomeventsstapehordes.24

		# Sailor events
		100 = sailor_event.1
		100 = sailor_event.2
		100 = sailor_event.3
		100 = sailor_event.4
		100 = sailor_event.5

		# Corruption Events
		100 = corruption_event.16
		100 = corruption_event.17
		100 = corruption_event.18
		100 = corruption_event.19
		100 = corruption_event.20


		# Institution Events
		#Feudalism Spread Events:
		150 = institution_events.8
		150 = institution_events.9
		150 = institution_events.10
		150 = institution_events.11
		#Global Trade Spread Events:
		150 = institution_events.50
		150 = institution_events.51
		150 = institution_events.52
		#Enlightenment Spread Events:
		150 = institution_events.70
		150 = institution_events.71
		150 = institution_events.72


		#Personality Events
		50 = personality_events.10 #Just Dilema
		50 = personality_events.11 #A righteous King
		50 = personality_events.12 #A Righteous Republican Ruler
		50 = personality_events.13
		50 = personality_events.14
		50 = personality_events.15
		50 = personality_events.16
		50 = personality_events.17
		50 = personality_events.18
		50 = personality_events.19
		50 = personality_events.20
		50 = personality_events.21
		50 = personality_events.22
		50 = personality_events.23
		50 = personality_events.24
		50 = personality_events.25
		50 = personality_events.26
		50 = personality_events.27
		50 = personality_events.28
		50 = personality_events.29
		50 = personality_events.30
		50 = personality_events.31
		50 = personality_events.32
		50 = personality_events.33
		50 = personality_events.34
		50 = personality_events.35
		50 = personality_events.36
		50 = personality_events.37
		50 = personality_events.38
		50 = personality_events.39
		50 = personality_events.40
		50 = personality_events.41
		50 = personality_events.42
		50 = personality_events.43
		50 = personality_events.44
		50 = personality_events.45
		50 = personality_events.46
		50 = personality_events.47
		50 = personality_events.48
		50 = personality_events.49
		50 = personality_events.50
		50 = personality_events.51
		50 = personality_events.52
		50 = personality_events.53
		50 = personality_events.54
		50 = personality_events.55
		50 = personality_events.56
		50 = personality_events.57
		50 = personality_events.58

		# Trade League Events
		100 = trade_league.1
		100 = trade_league.2
		100 = trade_league.3
		100 = trade_league.4
		100 = trade_league.7
		100 = trade_league.8
		100 = trade_league.9
		100 = trade_league.10
		100 = trade_league.11
		100 = trade_league.12
		100 = trade_league.13
		100 = trade_league.14

		#Industrial Revolution

		200 = industrialization_events.7
		200 = industrialization_events.8
		200 = industrialization_events.9
		200 = industrialization_events.10
		200 = industrialization_events.11
		200 = industrialization_events.12
		200 = industrialization_events.13
		200 = industrialization_events.14
		200 = industrialization_events.15
		200 = industrialization_events.16
		200 = industrialization_events.17
		200 = industrialization_events.18
		200 = industrialization_events.19
		200 = industrialization_events.20
		200 = industrialization_events.21
		200 = industrialization_events.22

		#Confucian Events
		# 75 = confucian_events.19
		# 75 = confucian_events.20

		# Orthodox Icon Events
		# 75 = orthodox_icon_events.1
		# 75 = orthodox_icon_events.3
		# 75 = orthodox_icon_events.4
		# 75 = orthodox_icon_events.5
		# 75 = orthodox_icon_events.6

		# Grombar

		50 = flavor_grombar.16
		500 = flavor_grombar.23
		500 = flavor_grombar.24
		500 = flavor_grombar.25

		# Jaddari disaster prelim

		500 = jaddari_missions.101
		200 = jaddari_missions.102
		200 = jaddari_missions.103
		500 = jaddari_missions.104
		200 = jaddari_missions.105

		#Vampires

		300 = vampire_ruler.2
		300 = vampire_ruler.3
		300 = vampire_ruler.4
		300 = vampire_ruler.5
		300 = vampire_ruler.6
		300 = vampire_ruler.8

		2000 = 0 #was 1250
	}

	if = {
		limit = { has_estate_privilege = estate_burghers_magnate_council }
		random_list = {
			20 = { country_event = { id = flavor_gawed.6 days = 30 } }
			20 = {
				modifier = { # Less likely in influential
					factor = 0.5
					estate_influence = {
						estate = estate_burghers
						influence = 65
					}
				}
				country_event = { id = flavor_gawed.7 days = 30 }
			}
			5 = {
				modifier = {
					factor = 2
					num_of_loans = 2
				}
				modifier = {
					factor = 2
					num_of_loans = 5
				}
				modifier = {
					factor = 2
					num_of_loans = 10
				}
				modifier = {
					factor = 5
					is_bankrupt = yes
				}
				modifier = {
					factor = 2
					has_country_modifier = magnate_council_support
				}
				modifier = {
					factor = 0.25
					has_country_modifier = magnate_council_opposition
				}
				trigger = {
					num_of_loans = 1
					NOT = { has_country_modifier = magnate_offered_bailout }
				}
				country_event = { id = flavor_gawed.8 days = 30 }
			}
			20 = {
				modifier = {
					factor = 2
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 60
					}
				}
				modifier = {
					factor = 2
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 65
					}
				}
				modifier = {
					factor = 2
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 70
					}
				}
				trigger = {
					has_country_modifier = magnate_council_opposition
					NOT = { has_ruler_flag = refused_magnate_offer }
				}
				country_event = { id = flavor_gawed.9 days = 30 }
			}
			20 = {
				modifier = {
					factor = 2
					estate_influence = {
						estate = estate_burghers
						influence = 60
					}
				}
				modifier = {
					factor = 1.5
					estate_influence = {
						estate = estate_burghers
						influence = 70
					}
				}
				country_event = { id = flavor_gawed.10 days = 30 }
			}
			10 = {
				modifier = { # Relations should begin to sour a bit
					factor = 3
					is_year = 1575
				}
				modifier = {
					factor = 2
					estate_influence = {
						estate = estate_burghers
						influence = 50
					}
				}
				trigger = {
					estate_influence = {
						estate = estate_burghers
						influence = 50
					}
				}
				country_event = { id = flavor_gawed.11 days = 30 }
			}

			500 = {}
		}
	}
}

on_bi_yearly_pulse_2 = {
	random_events = {
		100 = corruption_event.1
		100 = corruption_event.2
		100 = corruption_event.3
		100 = corruption_event.4
		100 = corruption_event.5
		100 = corruption_event.6
		100 = corruption_event.7
		100 = corruption_event.8
		100 = corruption_event.9
		100 = corruption_event.10
		200 = corruption_event.11
		200 = corruption_event.12
		200 = corruption_event.13
		200 = corruption_event.14
		200 = corruption_event.15

		4000 = 0
	}

	random_events = {
		100 = flavour_siadan.121
		100 = flavour_siadan.122
		100 = flavour_siadan.123
		100 = flavour_siadan.124
		100 = flavour_siadan.125

		200 = 0
	}

	events = {
		the_command.999
	}

	#this is here as a fallback in case something slips through the cracks
	country_event = {
		id = anbennar_setup.19
	}

	update_artifice_points = yes #needs to be last
}

on_bi_yearly_pulse_3 = {

	#Fire estate agenda if you have that privilege
	# NOTE DOING THIS THROUGH RANDOM EVENT NOW WITH estate_privileges_and_agendas_events.4 INSTEAD!
	#on_bi_yearly_pulse_estate_privileges_effect = yes

	events = {
		#muslim_school_events.20 #Pick School
		high_philosophy_events.0	#Pick School

		flavor_grombar.11
		flavor_grombar.12
		flavor_grombar.13
		flavor_grombar.17
		flavor_grombar.18
		flavor_grombar.22
		flavor_grombar.26
		flavor_grombar.99
		flavor_honsai.2

		akan_flavour.1


		cavegoblinflavor.1 #cave goblin modernization

		flavor_malacnar.8 #checks if you have fought lately

		flavor_castanor.38 # Adds coal to a random Deepwoods province if coal is unlocked and you've burned down the Deepwoods

		bianfang.16 #Bianfang hunting down LHP
		bianfang.201 #Bianfang hunting down Oni
		bianfang.30 #Eunuch assassination manager event

	}
	random_events = {
		100 = new_court_flavour_events.21 #religious resignation
		100 = new_court_flavour_events.25 #blood is thicker than water

		200 = ghavaanaj.3 # +Herd Growth
		150 = ghavaanaj.4 # +Herd Growth
		150 = ghavaanaj.5 # +Herd Growth
		150 = ghavaanaj.6 # +Herd Growth
		150 = ghavaanaj.7 # -Herd Growth
		150 = ghavaanaj.8 # -Herd Growth
		150 = ghavaanaj.9 # -Herd Growth
		150 = ghavaanaj.10 # -Herd Growth

		200 = the_command.11
		50 = the_command.12
		100 = the_command.13
		100 = the_command.40

		10 = the_command.1001
		10 = the_command.1002
		10 = the_command.1003
		10 = the_command.1004
		10 = the_command.1005
		# 20 = the_command.1006
		# 20 = the_command.1007

		1000 = the_command.2020
		1000 = the_command.2021
		1000 = the_command.2022
		1000 = the_command.2023

		#Jadequest events
		200 = verkalozovar_events.27
		200 = verkalozovar_events.28
		200 = verkalozovar_events.29
		200 = verkalozovar_events.30
		200 = verkalozovar_events.31
		200 = verkalozovar_events.32
		200 = verkalozovar_events.33
		200 = verkalozovar_events.34

		200 = 0 #was 200
	}
}

on_bi_yearly_pulse_4 = {

	#Gommo global expansion
	if = { limit = { owns = 536 } #Aqatbar
		random = {
			chance = 70
			536 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 365 } #Port Jaher
		random = {
			chance = 70
			365 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 4435 } #Rayavhashapal
		random = {
			chance = 70
			4435 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 4879 } #Feiten
		random = {
			chance = 70
			4879 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 2773 } #Kherka
		random = {
			chance = 70
			2773 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 4701 } #Cay Cam Sinh
		random = {
			chance = 70
			4701 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 4963 } #Arawkelin
		random = {
			chance = 70
			4963 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 4871 } #Tianlou
		random = {
			chance = 70
			4871 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 4500 } #Sarisung
		random = {
			chance = 70
			4500 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}
	if = { limit = { owns = 4936 } #Mao Ji
		random = {
			chance = 70
			4936 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 90
				}
			}
		}
	}

	#Birsartanses
	if = {
		limit = {
			OR = {
				tag = F21
				was_tag = F21
			}
			has_reform = birsartanses_central_administration_2
			has_country_flag = birsartanses_plans_enacted
			NOT = {
				has_country_modifier = F21_admin_plan
				has_country_modifier = F21_diplo_plan
				has_country_modifier = F21_milit_plan
				has_country_modifier = F21_admin_plan_upgrade
				has_country_modifier = F21_diplo_plan_upgrade
				has_country_modifier = F21_milit_plan_upgrade
				has_country_modifier = F21_plan_failure
				has_country_modifier = F21_not_proving_yourself
				has_country_flag = birsartanses_taking_test
			}
		}
		country_event = { id = flavour_birsartanses.7 }
	}

	random_events = { #all these were shifted from on_bi_yearly_pulse_1
		#randomevents
		100 = 730
		100 = 731
		100 = 732
		100 = 733
		100 = 734
		100 = 735
		100 = 736
		100 = 737
		100 = 738
		#100 = 739
		100 = 740
		100 = 741
		100 = 742

		100 = 850
		100 = 851
		100 = 852
		100 = 853
		100 = 854
		100 = 855
		100 = 857
		100 = 858
		100 = 859
		100 = 860
		100 = 861
		100 = 862
		100 = 863
		100 = 864
		#100 = 865
		100 = 866
		100 = 867
		100 = 868
		100 = 869
		100 = 870
		100 = 871
		100 = 872
		100 = 873
		#100 = 874
		#100 = 875
		#100 = 876
		100 = 877
		100 = 878
		100 = 879
		100 = 880
		100 = 881
		#100 = 882
		100 = 883
		100 = 884
		100 = 885
		100 = 836
		100 = 837
		100 = 838

		100 = 9472
		100 = 3097
		# 100 = 5005
		100 = 5026
		# 100 = 5037
		100 = 5063
		100 = 6014


		# Innovativeness
		100 = innovativeness_events.1
		100 = innovativeness_events.2
		50 = innovativeness_events.3
		100 = innovativeness_events.4
		100 = innovativeness_events.5
		100 = innovativeness_events.6
		100 = innovativeness_events.7
		100 = innovativeness_events.8
		100 = innovativeness_events.9
		100 = innovativeness_events.10
		100 = innovativeness_events.11
		100 = innovativeness_events.12
		100 = innovativeness_events.13
		100 = innovativeness_events.14
		100 = innovativeness_events.15

		# Trade Company Investments
		100 = investment_events.1
		100 = investment_events.2
		100 = investment_events.3
		100 = investment_events.4
		100 = investment_events.5
		100 = investment_events.6
		100 = investment_events.7
		100 = investment_events.8
		100 = investment_events.9
		100 = investment_events.10

		# Catholic Order Events
		#100 = order_events.1
		#100 = order_events.2
		#100 = order_events.3
		#100 = order_events.4
		#100 = order_events.5
		#100 = order_events.6
		#100 = order_events.7
		#100 = order_events.8
		#100 = order_events.9

		# Minority Expulsion Events
		100 = expel_minority_events.1
		100 = expel_minority_events.2
		100 = expel_minority_events.3
		100 = expel_minority_events.4
		100 = expel_minority_events.5

		# Papal Tithe Events	#Anbennarized
		100 = curia.1
		#100 = curia.2	#its italian bankers so
		100 = curia.4
		100 = curia.9
		100 = curia.10
		100 = curia.11
		100 = curia.12

		# Defender of the Faith
		100 = dotf.1
		100 = dotf.4
		100 = dotf.6
		100 = dotf.7

		# Mercenaries
		100 = mercs.1
		100 = mercs.2
		100 = mercs.3
		100 = mercs.4
		100 = mercs.7
		100 = mercs.7
		100 = mercs.8
		100 = mercs.10
		100 = mercs.11

		# Espionage
		100 = espionage_events.1
		100 = espionage_events.4
		100 = espionage_events.8
		80 = espionage_events.9

		#Reign of Terror
		# 150 = french_revolution.302
		# 100 = french_revolution.303

		# Papacy events
		100 = papacy_events.6

		# Professionalism
		100 = army_professionalism_events.4
		100 = army_professionalism_events.5
		75 = army_professionalism_events.6
		100 = army_professionalism_events.8
		100 = army_professionalism_events.9
		100 = army_professionalism_events.10
		100 = army_professionalism_events.11
		75 = army_professionalism_events.12
		100 = army_professionalism_events.13
		75 = army_professionalism_events.16

		# Agenda from the Estates
		1000 = estate_privileges_and_agendas_events.4

		#Anbennar
		150 = adventuring.1
		150 = adventuring.2
		150 = adventuring.3
		150 = adventuring.4
		150 = adventuring.5
		150 = adventuring.6
		150 = adventuring.8
		150 = adventuring.9
		150 = adventuring.10

		# Adenica random chance to proc horse and hunt events on a per ruler basis after requisite missions completed
		100 = flavor_adenica.10
		100 = flavor_adenica.1

		2000 = 0
	}
}

on_bi_yearly_pulse_5 = {
	random_events = { #all these were shifted from on_bi_yearly_pulse_1
		# # Anglican Events
		# 100 = anglican_events.1
		# 100 = anglican_events.2
		# 100 = anglican_events.3
		# 100 = anglican_events.4
		# 100 = anglican_events.5
		# 100 = anglican_events.6
		# 100 = anglican_events.7
		# 100 = anglican_events.8
		# 100 = anglican_events.9
		# 100 = anglican_events.10
		# 100 = anglican_events.11
		# 100 = anglican_events.12
		# 100 = anglican_events.13
		# 150 = anglican_events.15

		# # Hussite Events
		# 100 = hussite.1
		# 100 = hussite.2
		# 100 = hussite.3
		# 100 = hussite.4
		# 100 = hussite.5
		# 100 = hussite.6
		# 100 = hussite.7


		# #Mamluk Events

		# 175 = mamluk_events.1
		# 175 = mamluk_events.2
		# 175 = mamluk_events.3
		# 235 = mamluk_events.4
		# 185 = mamluk_events.5
		# 175 = mamluk_events.6
		# 250 = mamluk_events.7
		# 185 = mamluk_events.10
		# 185 = mamluk_events.11
		# 235 = mamluk_events.12

		# #Colonization of Siberia
		# 125 = siberian_events.2
		# 125 = siberian_events.3
		# 125 = siberian_events.4
		# 125 = siberian_events.5
		# 125 = siberian_events.6

		# #Russian Principalities

		# 100 = russian_principality_events.1
		# 125 = russian_principality_events.2
		# 125 = russian_principality_events.3
		# 125 = russian_principality_events.4
		# 125 = russian_principality_events.6
		# 125 = russian_principality_events.5
		# 125 = russian_principality_events.7
		# 100 = russian_principality_events.8
		# 75 = russian_principality_events.9
		# 125 = russian_principality_events.10

		# #Tsardoms

		# 125 = russian_tsardom_events.1
		# 125 = russian_tsardom_events.2
		# 125 = russian_tsardom_events.3
		# 100 = russian_tsardom_events.4
		# 125 = russian_tsardom_events.5
		# 100 = russian_tsardom_events.6
		# 100 = russian_tsardom_events.7
		# 100 = russian_tsardom_events.8
		# 125 = russian_tsardom_events.9
		# 125 = russian_tsardom_events.10
		# 100 = russian_tsardom_events.11

		# #Streltsy Events
		# 125 = streltsy_events.1
		# 125 = streltsy_events.3
		# 125 = streltsy_events.4
		# 125 = streltsy_events.5
		# 100 = streltsy_events.6

		# #Orthodox Metropolitans
		# 125 = patriarch_events.1
		# 125 = patriarch_events.2
		# 125 = patriarch_events.3
		# 75 = patriarch_events.4
		# 75 = patriarch_events.5

		# Catholic  Events
		# 100 = catholic_flavor.4
		# 100 = catholic_flavor.5
		# 100 = catholic_flavor.6
		# 100 = catholic_flavor.7
		# 100 = catholic_flavor.8
		# 100 = catholic_flavor.9
		# 100 = catholic_flavor.10
		#ravelian equivalent

		#Ravelian Society Events
		100 = ravelian.103
		100 = ravelian.104
		100 = ravelian.105
		100 = ravelian.106
		100 = ravelian.107
		100 = ravelian.108
		100 = ravelian.109

		100 = ravelian.200
		100 = ravelian.201
		100 = ravelian.202
		100 = ravelian.203
		100 = ravelian.204
		100 = ravelian.205
		100 = ravelian.206
		100 = ravelian.207

		#Ravelian Reform Events
		100 = ravelian.301
		100 = ravelian.302
		100 = ravelian.304
		100 = ravelian.305
		100 = ravelian.306
		100 = ravelian.307
		100 = ravelian.308
		100 = ravelian.309
		100 = ravelian.310
		100 = ravelian.311
		100 = ravelian.312

		100 = ravelian.400
		100 = ravelian.401
		100 = ravelian.402
		100 = ravelian.403
		100 = ravelian.404

		100 = ravelian.500
		100 = ravelian.501
		100 = ravelian.502
		100 = ravelian.503
		100 = ravelian.504

		100 = ravelian.600
		100 = ravelian.601
		100 = ravelian.602
		100 = ravelian.603
		100 = ravelian.604

		100 = ravelian.700
		100 = ravelian.701
		100 = ravelian.702
		100 = ravelian.703

		100 = corinite.200
		100 = corinite.201
		100 = corinite.202
		100 = corinite.203
		100 = corinite.204
		100 = corinite.205
		100 = corinite.206
		100 = corinite.207
		100 = corinite.208
		100 = corinite.209
		100 = corinite.210
		100 = corinite.211
		# 100 = corinite.212
		# 100 = corinite.213
		# 100 = corinite.214
		# 100 = corinite.215

		100 = xhazobkult_events.10
		100 = xhazobkult_events.11
		100 = xhazobkult_events.12
		100 = xhazobkult_events.13
		100 = xhazobkult_events.14
		200 = xhazobkult_events.15 #xhazobkult ai crutch
		200 = xhazobkult_events.16


		# # Japanese Daimyos
		# 15 = flavor_jap.10
		# 50 = flavor_jap.28
		# 100 = flavor_jap.40
		# 100 = flavor_jap.42
		# 100 = flavor_jap.43
		# 100 = flavor_jap.45
		# 100 = flavor_jap.49
		# 100 = flavor_jap.51
		# 100 = flavor_jap.52
		# 100 = flavor_jap.53
		# 100 = flavor_jap.54
		# 100 = flavor_jap.55



		# # China
		# 75 = meritocracy_events.1
		# 75 = meritocracy_events.2
		# 75 = meritocracy_events.3
		# 75 = meritocracy_events.4
		# 75 = meritocracy_events.5
		# 50 = china_events.11
		# 25 = china_events.12
		# 25 = china_events.24

		2000 = 0
	}
}

# country random events
on_thri_yearly_pulse = {
	random_events = {
		# Republics
		100 = republics.4
		100 = republics.5
		100 = republics.6
		100 = republics.7
		100 = republics.8
		100 = republics.9
		100 = republics.10
		100 = republics.11
		100 = republics.12
		100 = republics.13
		100 = republics.14
		100 = republics.15
		100 = republics.16
		100 = republics.17
		100 = republics.18
		100 = republics.19
		100 = republics.20
		100 = republics.21
		100 = republics.22
		100 = republics.23
		100 = republics.24
		100 = republics.25
		100 = republics.26
		100 = republics.27
		100 = republics.28
		100 = republics.29
		100 = republics.30
		100 = republics.31
		100 = republics.32
		100 = republics.33
		100 = republics.34
		100 = republics.35
		100 = republics.36
		100 = republics.37
		100 = republics.38
		100 = republics.39
		100 = republics.40
		100 = republics.41
		100 = republics.42
		100 = republics.43

		# Theocracies
		100 = devotion_events.1
		100 = devotion_events.2
		100 = devotion_events.3
		100 = devotion_events.4
		100 = devotion_events.5
		#100 = devotion_events.6
		100 = devotion_events.7
		100 = devotion_events.8
		100 = devotion_events.9
		100 = devotion_events.10
		100 = devotion_events.11
		100 = devotion_events.12
		100 = devotion_events.13
		100 = devotion_events.14
		100 = devotion_events.15
		100 = devotion_events.16
		100 = devotion_events.18
		100 = devotion_events.19
		100 = devotion_events.22
		100 = devotion_events.23
		100 = devotion_events.24
		#100 = devotion_events.26
		100 = devotion_events.100
		100 = devotion_events.101
		100 = devotion_events.102
		100 = devotion_events.104
		100 = devotion_events.107
		100 = devotion_events.110
		100 = devotion_events.117
		100 = devotion_events.118
		100 = devotion_events.119
		100 = devotion_events.200
		100 = devotion_events.201
		100 = devotion_events.202
		100 = devotion_events.203
		100 = devotion_events.204
		100 = devotion_events.205
		100 = devotion_events.207
		100 = devotion_events.208
		100 = devotion_events.209
		100 = devotion_events.210
		100 = devotion_events.211
		100 = devotion_events.212
		100 = devotion_events.213
		100 = devotion_events.214
		100 = devotion_events.215
		100 = devotion_events.216
		100 = devotion_events.217
		100 = devotion_events.218
		100 = devotion_events.219



		#Center of Revolution - post-spawn (higher weighting than others as they are only relevant briefly)
		200 = center_of_revolution.1
		150 = center_of_revolution.2
		200 = center_of_revolution.3
		200 = center_of_revolution.8
		250 = center_of_revolution.9
		250 = center_of_revolution.10
		200 = center_of_revolution.12
		#Center of Revolution - pre-spawn
		100 = center_of_revolution.2000
		100 = center_of_revolution.2002
		100 = center_of_revolution.2003
		100 = center_of_revolution.2010

		1000 = 0
	}
}

on_thri_yearly_pulse_2 = {
	#port jaher to brasan
	if = { limit = { owns = 365 }
		if = { limit = { NOT = { has_global_flag = institutions_spread_to_aqatbar } }
			365 = {
				province_event = {
					id = institution_events.100
					days = 60
					random = 60
				}
			}
		}
		else = {
			365 = {
				province_event = {
					id = azka_evran.9
					days = 60
					random = 60
				}
			}
		}
	}
	if = { limit = { owns = 565 }
		if = { limit = { NOT = { has_global_flag = institutions_spread_to_aqatbar } }
			565 = {
				province_event = {
					id = institution_events.100
					days = 60
					random = 60
				}
			}
		}
		else = {
			536 = {
				province_event = {
					id = azka_evran.9
					days = 60
					random = 60
				}
			}
		}
	}

	#sareyand to davharral
	if = {
		limit = { owns = 625 }
		625 = {
			province_event = {
				id = institution_events.102
				days = 60
				random = 60
			}
		}
	}
	if = {
		limit = { owns = 2913 }
		2913 = {
			province_event = {
				id = institution_events.102
				days = 60
				random = 60
			}
		}
	}

	# if = {
	#	limit = { tag = F50 }
	#	country_event = {
	#		id = flavour_mulen.26
	#		days = 1
	#	}
	# }

	random_events = {
		# Random to increase or decrease patriarch authority.
		# 25 = orthodox_flavor.1
		# 25 = orthodox_flavor.2
		# 25 = orthodox_flavor.3
		# 25 = orthodox_flavor.4
		# 25 = orthodox_flavor.5

		# 40 = muslim_piety.1
		# 40 = muslim_piety.2
		# 40 = muslim_piety.3
		# 20 = muslim_piety.4
		# 40 = muslim_piety.5
		# 40 = muslim_piety.6
		# 40 = muslim_piety.7
		# 40 = muslim_piety.8
		# 40 = muslim_piety.9
		# 40 = muslim_piety.10
		# 40 = muslim_piety.11
		# 40 = muslim_piety.12
		# 40 = muslim_piety.13
		# 40 = muslim_piety.14
		# 40 = muslim_piety.15
		# 40 = muslim_piety.16
		# 40 = muslim_piety.22
		# 300 = 0

		#Fey Piety Events
		40 = fey_alignment.1
		40 = fey_alignment.2
		40 = fey_alignment.3
		40 = fey_alignment.4
		40 = fey_alignment.5
		40 = fey_alignment.6
		40 = fey_alignment.7
		40 = fey_alignment.8
		40 = fey_alignment.9
		40 = fey_alignment.12
		40 = fey_alignment.13
		40 = fey_alignment.14
		40 = fey_alignment.15
		40 = fey_alignment.16

		#Anbennar - Goblinic Shamanism events
		4 = goblinic_shamanism_flavor.40
		4 = goblinic_shamanism_flavor.50
		4 = goblinic_shamanism_flavor.51
		4 = goblinic_shamanism_flavor.55
		4 = goblinic_shamanism_flavor.58
		4 = goblinic_shamanism_flavor.59
		4 = goblinic_shamanism_flavor.100
		4 = goblinic_shamanism_flavor.101
		4 = goblinic_shamanism_flavor.102
		4 = goblinic_shamanism_flavor.103
		4 = goblinic_shamanism_flavor.104
		4 = goblinic_shamanism_flavor.105
		4 = goblinic_shamanism_flavor.106
		4 = goblinic_shamanism_flavor.107
		4 = goblinic_shamanism_flavor.108
		4 = goblinic_shamanism_flavor.109
		4 = goblinic_shamanism_flavor.110
		4 = goblinic_shamanism_flavor.111
		4 = goblinic_shamanism_flavor.112
		4 = goblinic_shamanism_flavor.113
		4 = goblinic_shamanism_flavor.114
		4 = goblinic_shamanism_flavor.115
		4 = goblinic_shamanism_flavor.116
		4 = goblinic_shamanism_flavor.117
		4 = goblinic_shamanism_flavor.118
		4 = goblinic_shamanism_flavor.119
		4 = goblinic_shamanism_flavor.120
		4 = goblinic_shamanism_flavor.121
		4 = goblinic_shamanism_flavor.122
		4 = goblinic_shamanism_flavor.123
		4 = goblinic_shamanism_flavor.124
		4 = goblinic_shamanism_flavor.125
		4 = goblinic_shamanism_flavor.126
		4 = goblinic_shamanism_flavor.127
		4 = goblinic_shamanism_flavor.128
		4 = goblinic_shamanism_flavor.129
		4 = goblinic_shamanism_flavor.130
		4 = goblinic_shamanism_flavor.131
		4 = goblinic_shamanism_flavor.132
		4 = goblinic_shamanism_flavor.133
		8 = goblinic_shamanism_flavor.134 # Higher cause it requires war
		4 = goblinic_shamanism_flavor.135
		4 = goblinic_shamanism_flavor.136
		4 = goblinic_shamanism_flavor.137
		4 = goblinic_shamanism_flavor.138
		4 = goblinic_shamanism_flavor.139
		4 = goblinic_shamanism_flavor.140
		4 = goblinic_shamanism_flavor.141
		4 = goblinic_shamanism_flavor.142
		4 = goblinic_shamanism_flavor.143
		4 = goblinic_shamanism_flavor.144
		4 = goblinic_shamanism_flavor.145
		4 = goblinic_shamanism_flavor.146

		40 = eordellon.2

		30 = 0
	}

	events = {
		#Moved here so it fires more often

		race_setup_events.4		#Add minorities to province / Culture Conversion -
		race_setup_events.5		#Culture Conversion - turns minorities into majorities cleanup
		race_setup_events.9		#Expel/Purge opinionsrace_setup_events.9		#Expel/Purge opinions

		# migration_force_settle.1
		new_sun_cult.241
		new_sun_cult.255		#Amussu incident trigger event
		bulwar_flavour.10
		dartaxagerdim_events.20

		#BLORC plunder management
		blorc.101
	}

	random_events = {
		75 = 0

		100 = aw_bandits.1
		100 = aw_ghouls.1
		100 = aw_goblins.1
		100 = aw_hags.1
		100 = aw_haunted_house.1
		100 = aw_orcs.1
		100 = aw_satyrs.1
		100 = aw_thieves_guild.1
		100 = aw_trolls.1
		100 = aw_vampires.1
		100 = aw_werewolves.1
		100 = aw_wyvern.1
		100 = aw_zombies.1
		100 = aw_eldritch_cultists.1
	}
}

on_thri_yearly_pulse_3 = {
	random_events = {
		# Subject Interactions
		50 = subject_interaction_events.1
		50 = subject_interaction_events.4
		50 = subject_interaction_events.5
		50 = subject_interaction_events.6
		50 = subject_interaction_events.7
		50 = subject_interaction_events.9
		50 = subject_interaction_events.11
		50 = subject_interaction_events.14
		50 = subject_interaction_events.15
		50 = subject_interaction_events.17
		50 = subject_interaction_events.18
		50 = subject_interaction_events.19
		50 = subject_interaction_events.20
		50 = subject_interaction_events.21
		50 = subject_interaction_events.22
		50 = subject_interaction_events.23
		50 = subject_interaction_events.24
		50 = subject_interaction_events.25
		50 = subject_interaction_events.26
		50 = subject_interaction_events.27
		50 = subject_interaction_events.29
		50 = subject_interaction_events.30
		50 = subject_interaction_events.31
		50 = subject_interaction_events.32
		50 = subject_interaction_events.34
		50 = subject_interaction_events.35
		50 = subject_interaction_events.36
		50 = subject_interaction_events.38
		50 = subject_interaction_events.40
		50 = subject_interaction_events.43
		75 = tributary_events.1
		75 = tributary_events.2
		75 = tributary_events.3
		75 = tributary_events.4
		75 = tributary_events.5
		75 = tributary_events.6
		75 = tributary_events.7
		75 = tributary_events.8
		75 = tributary_events.9
		75 = tributary_events.10
		75 = tributary_events.13
		75 = tributary_events.16
		75 = tributary_events.17
		75 = tributary_events.18
		75 = tributary_events.19
		75 = tributary_events.23
		75 = tributary_events.24
		75 = tributary_events.26
		75 = tributary_events.25
		75 = tributary_events.27

		1000 = 0
	}
}

on_thri_yearly_pulse_4 = {
	random_events = {
		#Low Mandate Events
		# 10 = china_events.45
		# 10 = china_events.46
		# 50 = china_events.47
		# 10 = china_events.48
		# 10 = china_events.49
		# 10 = china_events.50
		# 50 = china_events.51
		# 10 = china_events.52
		# 10 = china_events.53
		# 50 = china_events.54
		# 10 = china_events.55 (triggers via neighbors)
		# 10 = china_events.56
		# 75 = china_events.57
		# 50 = china_events.58
		# 10 = china_events.59
		# 50 = china_events.60

		#Anbennar
		# 10 = allclan_council.999
		# 10 = allclan_council.998
		# 10 = allclan_council.997
		# 10 = allclan_council.995
		# 10 = allclan_council.994

		# Anbennar - Mulen factions

		# 300 = flavour_mulen.11
		# 300 = flavour_mulen.12
		# 100 = flavour_mulen.13
		# 100 = flavour_mulen.14
		# 100 = flavour_mulen.15
		# 100 = flavour_mulen.16
		# 100 = flavour_mulen.17
		# 100 = flavour_mulen.18
		# 100 = flavour_mulen.19
		# 100 = flavour_mulen.20
		# 100 = flavour_mulen.21
		# 100 = flavour_mulen.22
		# 100 = flavour_mulen.23
	}

	random_events = {
		10 = rahenraj.2111
		10 = rahenraj.2113
		10 = rahenraj.2115
		10 = rahenraj.2117
		10 = rahenraj.2121
		10 = rahenraj.2123

		10 = the_command.10

		20 = 0
	}
}

on_four_year_pulse = {

	#Gommo global expansion
	if = { limit = { owns = 536 } #Aqatbar
		536 = {
			province_event = {
				id = gommo_expansion_events.20
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 365 } #Port Jaher
		365 = {
			province_event = {
				id = gommo_expansion_events.21
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4435 } #Rayavhashapal
		4435 = {
			province_event = {
				id = gommo_expansion_events.22
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4879 } #Feiten
		4879 = {
			province_event = {
				id = gommo_expansion_events.23
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 2773 } #Kherka
		2773 = {
			province_event = {
				id = gommo_expansion_events.24
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4701 } #Cam Cy Sinh
		4701 = {
			province_event = {
				id = gommo_expansion_events.25
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4963 } #Arawkelin
		4963 = {
			province_event = {
				id = gommo_expansion_events.26
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4871 } #Tianlou
        4871 = {
			province_event = {
				id = gommo_expansion_events.27
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4500 } #Sarisung
        4500 = {
			province_event = {
				id = gommo_expansion_events.28
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4936 } #Mao Ji
        4936 = {
			province_event = {
				id = gommo_expansion_events.29
				days = 1
				random = 90
			}
		}
    }

	events = {
		lake.102 #Lake Federation Elections
	}
	random_events = {
		# Colonial Nations
		100 = colonial_nation.1
		100 = colonial_nation.4
		100 = colonial_nation.10
		100 = colonial_nation.12
		100 = colonial_nation.14
		100 = colonial_nation.77
		100 = colonial_nation.100
		100 = colonial_nation.102
		100 = colonial_nation.104
		100 = colonial_nation.106
		100 = colonial_nation.108
		100 = colonial_nation.110
		100 = colonial_nation.112
		100 = colonial_nation.114
		100 = colonial_nation.116
		100 = colonial_nation.118
		100 = colonial_nation.120
		100 = colonial_nation.122
		100 = colonial_nation.124
		100 = colonial_nation.126
		100 = colonial_nation.128
		100 = colonial_nation.130
		100 = colonial_nation.132
		100 = colonial_nation.134
		100 = colonial_nation.182
		100 = colonial_nation.183
		100 = colonial_nation.184
		100 = colonial_nation.185
		100 = colonial_nation.186
		100 = colonial_nation.187
		100 = colonial_nation.188
		100 = colonial_nation.189
		10 = colonial_nation.140
		10 = colonial_nation.142
		10 = colonial_nation.144
		10 = colonial_nation.146
		10 = colonial_nation.148
		10 = colonial_nation.150
		10 = colonial_nation.152
		10 = colonial_nation.154
		10 = colonial_nation.156
		10 = colonial_nation.158
		10 = colonial_nation.160
		10 = colonial_nation.162
		10 = colonial_nation.164
		10 = colonial_nation.166
		10 = colonial_nation.168
		10 = colonial_nation.170
		10 = colonial_nation.172
		10 = colonial_nation.174
		10 = colonial_nation.176

		# Dutch Republic
		100 = dutch_republic.1
		100 = dutch_republic.2
		100 = dutch_republic.3
		100 = dutch_republic.4
		100 = dutch_republic.5
		100 = dutch_republic.6
		100 = dutch_republic.7
		100 = dutch_republic.8
		100 = dutch_republic.9
		100 = dutch_republic.10
		150 = dutch_republic.11
		100 = dutch_republic.13
		100 = dutch_republic.14
		100 = dutch_republic.15
		100 = dutch_republic.16
		100 = dutch_republic.17
		100 = dutch_republic.18
		100 = dutch_republic.19
		100 = dutch_republic.20
		100 = dutch_republic.21
		100 = dutch_republic.22
		100 = dutch_republic.23
		100 = dutch_republic.24
		100 = dutch_republic.25
		100 = dutch_republic.27

		# Republic Factions
		100 = republic_factions.2
		100 = republic_factions.5
		100 = republic_factions.7
		100 = republic_factions.9
		100 = republic_factions.10
		100 = republic_factions.12
		100 = republic_factions.13
		100 = republic_factions.14
		100 = republic_factions.15
		100 = republic_factions.16
		100 = republic_factions.17
		100 = republic_factions.18
		100 = republic_factions.19
		100 = republic_factions.20
		100 = republic_factions.22
		100 = republic_factions.23
		100 = republic_factions.24

		# Anbennar - Technocracy Factions
		100 = artificer_factions.2
		100 = artificer_factions.3
		100 = artificer_factions.4
		100 = artificer_factions.5
		100 = artificer_factions.6
		100 = artificer_factions.7
		100 = artificer_factions.8
		100 = artificer_factions.9
		100 = artificer_factions.10
		100 = artificer_factions.11

		# Anbennar - Northern League Mangate Factions

		100 = flavor_gawed.14
		100 = flavor_gawed.15
		100 = flavor_gawed.16
		100 = flavor_gawed.17
		100 = flavor_gawed.18
		100 = flavor_gawed.19
		100 = flavor_gawed.20
		100 = flavor_gawed.21
		100 = flavor_gawed.22
		100 = flavor_gawed.23

		# Revolutionary Republic Factions

		100 = revolutionary_republic_factions.0
		100 = revolutionary_republic_factions.1
		100 = revolutionary_republic_factions.2
		100 = revolutionary_republic_factions.3
		100 = revolutionary_republic_factions.4
		100 = revolutionary_republic_factions.5
		100 = revolutionary_republic_factions.6
		100 = revolutionary_republic_factions.7
		100 = revolutionary_republic_factions.8
		100 = revolutionary_republic_factions.9

		# Revolutionary Empires
		100 = napoleon.1
		100 = napoleon.2

		# Pirate Factions
		100 = pirates.10
		100 = pirates.11
		100 = pirates.12
		100 = pirates.13
		100 = pirates.14
		100 = pirates.15
		100 = pirates.16
		100 = pirates.17
		100 = pirates.18
		100 = pirates.19

		# Republican Dictatorship
		100 = republican_dictatorship.1
		100 = republican_dictatorship.2
		100 = republican_dictatorship.3
		100 = republican_dictatorship.4
		100 = republican_dictatorship.5
		100 = republican_dictatorship.6
		100 = republican_dictatorship.7
		100 = republican_dictatorship.8

		# Elective Monarchy
		150 = elective_monarchy.1
		150 = elective_monarchy.2
		25 = elective_monarchy.3
		25 = elective_monarchy.4
		150 = elective_monarchy.6
		150 = elective_monarchy.8
		150 = elective_monarchy.9
		150 = elective_monarchy.10
		150 = elective_monarchy.11
		150 = elective_monarchy.12
		150 = elective_monarchy.14
		150 = elective_monarchy.17
		25 = elective_monarchy.18

		# Free Cities
		25 = free_cities.3
		25 = free_cities.8
		25 = free_cities.10
		25 = free_cities.13
		25 = free_cities.17
		25 = free_cities.19

		#Tribal Federations
		50 = tribal_federation_events.1
		50 = tribal_federation_events.2
		50 = tribal_federation_events.3
		50 = tribal_federation_events.4
		#50 = tribal_federation_events.5
		50 = tribal_federation_events.6
		50 = tribal_federation_events.7
		50 = tribal_federation_events.8
		50 = tribal_federation_events.10

		#Empire of China
		# 100 = china_events.1
		# 100 = china_events.2
		# 100 = china_events.3
		# 100 = china_events.4
		# 75 = china_events.5
		# 100 = china_events.6
		# 100 = china_events.7
		# 100 = china_events.8
		# 100 = china_events.9
		# 100 = china_events.10
		# 100 = china_events.11
		# 100 = china_events.12
		# 100 = china_events.13
		# 100 = china_events.14
		# 100 = china_events.15
		# 100 = china_events.16
		# 100 = china_events.17
		# 100 = china_events.18
		# 100 = china_events.19
		# 100 = china_events.20
		# 100 = china_events.21
		# 100 = china_events.22
		# 100 = china_events.23
		# 100 = china_events.24
		# 100 = china_events.25
		# 100 = china_events.26
		# 100 = china_events.27
		# 100 = china_events.28
		# 100 = china_events.29
		# 100 = china_events.30
		# 100 = china_events.33
		# 100 = china_events.34
		# 100 = china_events.35
		# 100 = china_events.36
		# 100 = china_events.37
		# 100 = china_events.38
		# 100 = china_events.39
		# 50 = china_events.40
		# 100 = china_events.41
		# 100 = china_events.42
		# 100 = china_events.44

		# 10 = tortoise.1 # Galapagos Island Tortoises

		# 100 = flavor_pue.5

		# #Totemism Events	- we need to do our own of this eventually when we use totemism properly
		# 100 = totemism_flavor.1
		# 100 = totemism_flavor.7
		# 100 = totemism_flavor.8
		# 100 = totemism_flavor.10
		# 100 = totemism_flavor.11
		# 100 = totemism_flavor.13
		# 100 = totemism_flavor.14
		# 100 = totemism_flavor.15
		# 100 = totemism_flavor.16
		# 100 = totemism_flavor.17
		# 100 = totemism_flavor.18

		# #Volcano Events
		# 75 = volcano_events.2

		1000 = 0
	}
}

on_four_year_pulse_2 = {
	random_events = {

		#Made these four year as its a bit repetitive - once more events are in will move it back to bi or yearly!

		800 = dwarven_tolerance_events.0 # Event organizer for all the dwarven events
		800 = gnomish_tolerance_events.0 # Ditto
		800 = half_elf_tolerance_events.0 # Ditto
		800 = halfling_tolerance_events.0 # Ditto
		800 = half_orc_tolerance_events.0 # Ditto
		800 = harpy_tolerance_events.0 # Ditto
		800 = human_tolerance_events.0 # Ditto
		800 = kobold_tolerance_events.0 # Ditto
		800 = orcish_tolerance_events.0 # Ditto
		800 = elven_tolerance_events.0 # Ditto
		800 = goblin_tolerance_events.0 # Ditto
		800 = harimari_tolerance_events.0 # Ditto
		800 = hobgoblin_tolerance_events.0 # Ditto
		800 = gnoll_tolerance_events.0 # Ditto
		800 = troll_tolerance_events.0 # Ditto
		800 = ruinborn_tolerance_events.0 # Ditto
		800 = ogre_tolerance_events.0 # Ditto
		800 = centaur_tolerance_events.0 # Ditto

		800 = racial_pop_events_centaur.0
		800 = racial_pop_events_dwarven.0
		800 = racial_pop_events_elven.0
		800 = racial_pop_events_gnollish.0
		800 = racial_pop_events_gnomish.0
		800 = racial_pop_events_goblin.0
		800 = racial_pop_events_half_elven.0
		800 = racial_pop_events_half_orcish.0
		800 = racial_pop_events_halfling.0
		800 = racial_pop_events_harimari.0
		800 = racial_pop_events_harpy.0
		800 = racial_pop_events_hobgoblin.0
		800 = racial_pop_events_human.0
		800 = racial_pop_events_kobold.0
		800 = racial_pop_events_ogre.0
		800 = racial_pop_events_orcish.0
		800 = racial_pop_events_ruinborn.0
		800 = racial_pop_events_troll.0

		400 = 0
	}

	events = {
		#Moved this to fire more often, you're welcome perf

		race_setup_events.1		#Sets up Racial Tolerance Level (in case a country appears later)
		race_setup_events.2		#Ai only event
		#Moved to on_thri_yearly_pulse_2
		# race_setup_events.4		#Add minorities to province / Culture Conversion -
		# race_setup_events.5		#Culture Conversion - turns minorities into majorities cleanup
		# race_setup_events.9		#Expel/Purge opinions

		# #TODO: add event 5

		# racial_modifiers.6		#just in case

		#Ynn Pulse Events, moved to 4 years due to being too frequent, will move back to 3 or 2 once we have more events for variety
		ynn_events.100
	}
	#country_event = { id = race_setup_events.3 days = 1 } #Unmatching Tolerances - Fixes level of tolerance towards other races
	#I moved this to be more frequent.
}

on_four_year_pulse_3 = {
	events = {
		fragments.2000
		anb_ruler.10		#Long-lived theocracy abdication
		corins_circle.101	#Arosha Oakbreaker Startup
		corins_circle.20	#Arosha Oakbreaker Corinite
		corins_circle.21	#Arosha Oakbreaker Monstrousness Down
		new_sun_cult.160		#tension increase event in Bulwar
	}

	random_events = {
		#dwarovar flavor events, don't put anything else here
		700 = 0

		100 = diggy.552 #cave goblin technocracy mil reform
		100 = diggy.553 #venombrew surplus
		100 = diggy.554 #railway breaks down
		100 = diggy.555 #wandering ettins
		100 = diggy.556 #restored machine
		100 = diggy.557 #halannas breath
		100 = diggy.558 #spider raid
		100 = diggy.559 #native orcs submit
		100 = diggy.560 #natives kill eachother
		100 = diggy.561 #treasure chamber
		90 = diggy.562 #ancient war golem
		100 = diggy.563 #ancestor statue
		100 = diggy.564 #ancient armory
		70 = diggy.565 #expedition monsters
		100 = diggy.566 #cave bats
		100 = diggy.567 #bugbears attack colony
		100 = diggy.568 #train wreck
		100 = diggy.569 #shoddy mine
		100 = diggy.570 #old battlefield
		70 = diggy.571 #ancient text
		100 = diggy.573 #family heirloom
		100 = diggy.574 #treasure map
		100 = diggy.575 #diggy hole
		100 = diggy.576 #lantern oil
		100 = diggy.577 #serpents gift
		100 = diggy.578 #serpents curse
	}
}

on_four_year_pulse_4 = {
	random_events = {
		1000 = bulwar_flavour.31
		30 = bulwar_flavour.32
		30 = bulwar_flavour.33	
		20 = bulwar_flavour.37
		100 = bulwar_flavour.40
		200 = bulwar_flavour.41
		1000 = bulwar_flavour.42
		100 = bulwar_flavour.43
		100 = bulwar_flavour.101
		100 = bulwar_flavour.102
		100 = bulwar_flavour.103
		100 = bulwar_flavour.104
		100 = bulwar_flavour.105
		100 = bulwar_flavour.106
		100 = bulwar_flavour.107
		100 = bulwar_flavour.108
		100 = bulwar_flavour.109
		100 = bulwar_flavour.110
		1000 = 0
	}
}

on_five_year_pulse = {
	random_events = {

		# Innovativeness Events

		100 = innovativeness_events.1

		# Aristocracy 		13  (8g 5b)
		100 = ideagroups.100
		100 = ideagroups.101
		100 = ideagroups.102
		100 = ideagroups.103
		100 = ideagroups.104
		100 = ideagroups.105
		100 = ideagroups.106
		100 = ideagroups.107
		100 = ideagroups.108
		100 = ideagroups.109
		100 = ideagroups.110
		100 = ideagroups.111
		100 = ideagroups.112


		# Plutocracy 		19 (12g 7b)
		100 = ideagroups.200
		100 = ideagroups.201
		100 = ideagroups.202
		100 = ideagroups.203
		100 = ideagroups.204
		100 = ideagroups.205
		100 = ideagroups.206
		100 = ideagroups.207
		100 = ideagroups.208
		100 = ideagroups.209
		100 = ideagroups.210
		100 = ideagroups.211
		100 = ideagroups.212
		100 = ideagroups.213
		100 = ideagroups.214
		100 = ideagroups.215
		100 = ideagroups.216
		100 = ideagroups.217
		100 = ideagroups.218

		# Innovativenes		11 (7g 4b)
		100 = ideagroups.300
		100 = ideagroups.301
		100 = ideagroups.302
		100 = ideagroups.303
		100 = ideagroups.304
		100 = ideagroups.305
		100 = ideagroups.306
		100 = ideagroups.307
		100 = ideagroups.308
		100 = ideagroups.309
		100 = ideagroups.310

		# Religious		18 (11g 7b)
		100 = ideagroups.400
		100 = ideagroups.401
		100 = ideagroups.402
		100 = ideagroups.403
		100 = ideagroups.404
		100 = ideagroups.405
		100 = ideagroups.406
		100 = ideagroups.407
		100 = ideagroups.408
		100 = ideagroups.409
		100 = ideagroups.410
		100 = ideagroups.411
		100 = ideagroups.412
		100 = ideagroups.413
		100 = ideagroups.414
		100 = ideagroups.415
		100 = ideagroups.416
		100 = ideagroups.417


		# Spy			9 (6g 3b)
		100 = ideagroups.500
		100 = ideagroups.501
		100 = ideagroups.502
		100 = ideagroups.503
		100 = ideagroups.504
		100 = ideagroups.505
		100 = ideagroups.506
		100 = ideagroups.507
		100 = ideagroups.508


		# Diplomatic		9 (6g 3b)
		100 = ideagroups.600
		100 = ideagroups.601
		100 = ideagroups.602
		100 = ideagroups.603
		100 = ideagroups.604
		100 = ideagroups.605
		100 = ideagroups.606
		100 = ideagroups.607
		100 = ideagroups.608


		# Offensive 		14 (9g 5b)
		100 = ideagroups.700
		100 = ideagroups.701
		100 = ideagroups.702
		100 = ideagroups.703
		100 = ideagroups.704
		100 = ideagroups.705
		100 = ideagroups.706
		100 = ideagroups.707
		100 = ideagroups.708
		100 = ideagroups.709
		100 = ideagroups.710
		100 = ideagroups.711
		100 = ideagroups.712
		100 = ideagroups.713


		# Defensive		11 (5g 6b)
		100 = ideagroups.800
		100 = ideagroups.801
		100 = ideagroups.802
		100 = ideagroups.803
		100 = ideagroups.804
		100 = ideagroups.805
		100 = ideagroups.806
		100 = ideagroups.807
		100 = ideagroups.808
		100 = ideagroups.809
		100 = ideagroups.810
		100 = ideagroups.811
		100 = ideagroups.812
		100 = ideagroups.813
		100 = ideagroups.814
		100 = ideagroups.815


		# Trade			6 (7g 4b)
		100 = ideagroups.900
		100 = ideagroups.901
		100 = ideagroups.902
		100 = ideagroups.903
		100 = ideagroups.904
		100 = ideagroups.905
		100 = ideagroups.906
		100 = ideagroups.907
		100 = ideagroups.908
		100 = ideagroups.909
		100 = ideagroups.910

		# Maritime			22 (14g 8b)
		100 = ideagroups.1000
		100 = ideagroups.1001
		100 = ideagroups.1002
		100 = ideagroups.1003
		100 = ideagroups.1004
		100 = ideagroups.1005
		100 = ideagroups.1006
		100 = ideagroups.1007
		100 = ideagroups.1008
		100 = ideagroups.1009
		100 = ideagroups.1010
		100 = ideagroups.1011
		100 = ideagroups.1012
		100 = ideagroups.1013
		100 = ideagroups.1014
		100 = ideagroups.1015
		100 = ideagroups.1016
		100 = ideagroups.1017
		100 = ideagroups.1018
		100 = ideagroups.1019
		100 = ideagroups.1020
		100 = ideagroups.1021

		# Economic		11 (7g 4b)
		100 = ideagroups.1100
		100 = ideagroups.1101
		100 = ideagroups.1102
		100 = ideagroups.1103
		100 = ideagroups.1104
		100 = ideagroups.1105
		100 = ideagroups.1106
		100 = ideagroups.1107
		100 = ideagroups.1108
		100 = ideagroups.1109
		100 = ideagroups.1110

		# Exploration		11 (7g 4b)
		100 = ideagroups.1200
		100 = ideagroups.1201
		100 = ideagroups.1202
		100 = ideagroups.1203
		100 = ideagroups.1204
		100 = ideagroups.1205
		100 = ideagroups.1206
		100 = ideagroups.1207
		100 = ideagroups.1208
		100 = ideagroups.1209
		100 = ideagroups.1210

		# Quality		11 (7g 4b)
		100 = ideagroups.1300
		100 = ideagroups.1301
		100 = ideagroups.1302
		100 = ideagroups.1303
		100 = ideagroups.1304
		100 = ideagroups.1305
		100 = ideagroups.1306
		100 = ideagroups.1307
		100 = ideagroups.1308
		100 = ideagroups.1309
		100 = ideagroups.1310

		# Quantity		11 (7g 4b)
		100 = ideagroups.1400
		100 = ideagroups.1401
		100 = ideagroups.1402
		100 = ideagroups.1403
		100 = ideagroups.1404
		100 = ideagroups.1405
		100 = ideagroups.1406
		100 = ideagroups.1407
		100 = ideagroups.1408
		100 = ideagroups.1409
		100 = ideagroups.1410


		# Expansion		11 (7g 4b)
		100 = ideagroups.1500
		100 = ideagroups.1501
		100 = ideagroups.1502
		100 = ideagroups.1503
		100 = ideagroups.1504
		100 = ideagroups.1505
		100 = ideagroups.1506
		100 = ideagroups.1507
		100 = ideagroups.1508
		100 = ideagroups.1509
		100 = ideagroups.1510

		# Administrative	3 (1g 2b)
		100 = ideagroups.1600
		100 = ideagroups.1601
		100 = ideagroups.1602
		100 = ideagroups.1603
		100 = ideagroups.1604
		100 = ideagroups.1605
		100 = ideagroups.1606
		100 = ideagroups.1607
		100 = ideagroups.1608
		100 = ideagroups.1609
		100 = ideagroups.1610

		# Naval		11 (7g 4b)
		100 = ideagroups.1700
		100 = ideagroups.1701
		100 = ideagroups.1702
		100 = ideagroups.1703
		100 = ideagroups.1704
		100 = ideagroups.1705
		100 = ideagroups.1706
		100 = ideagroups.1707
		100 = ideagroups.1708
		100 = ideagroups.1709
		100 = ideagroups.1710

		# Influence		11 (7g 4b)
		100 = ideagroups.1800
		100 = ideagroups.1801
		100 = ideagroups.1802
		100 = ideagroups.1803
		100 = ideagroups.1804
		100 = ideagroups.1805
		100 = ideagroups.1806
		100 = ideagroups.1807
		100 = ideagroups.1808
		100 = ideagroups.1809
		100 = ideagroups.1810

		# Humanist		11 (7g 4b)
		100 = ideagroups.1900
		100 = ideagroups.1901
		100 = ideagroups.1902
		100 = ideagroups.1903
		100 = ideagroups.1904
		100 = ideagroups.1905
		100 = ideagroups.1906
		100 = ideagroups.1907
		100 = ideagroups.1908
		100 = ideagroups.1909
		100 = ideagroups.1910

		# Horde Ideas		10 (8g 2b)
		100 = ideagroups.1922
		100 = ideagroups.1923
		100 = ideagroups.1924
		100 = ideagroups.1925
		100 = ideagroups.1926
		100 = ideagroups.1927
		100 = ideagroups.1928
		100 = ideagroups.1929
		100 = ideagroups.1930
		100 = ideagroups.1931

		#Theocracy Ideas		11 (9g 2b)
		100 = ideagroups.1911
		100 = ideagroups.1912
		100 = ideagroups.1913
		100 = ideagroups.1914
		100 = ideagroups.1915
		100 = ideagroups.1916
		100 = ideagroups.1917
		100 = ideagroups.1918
		100 = ideagroups.1919
		100 = ideagroups.1920
		100 = ideagroups.1921

		# Indigenous		10 (6g 4b)
		100 = ideagroups.1932
		100 = ideagroups.1933
		100 = ideagroups.1934
		100 = ideagroups.1935
		100 = ideagroups.1936
		100 = ideagroups.1937
		100 = ideagroups.1938
		100 = ideagroups.1939
		100 = ideagroups.1940
		100 = ideagroups.1941

		1000 = 0
	}

	events = {
		#seven_cities_events.1000 #Clearing of Seven Cities Hunt when goal is no longer possible
		# fragments.2000	#Already done in the four years pulse
		racial_modifiers.3  #Military Force Switch if Oppressed - Civilized races
		racial_modifiers.4  #Military Force Switch if Oppressed - Monstrous races

		#Favored by the Gods Regent Court Events
		favored_RC.1
		favored_RC.4
		favored_RC.7
		favored_RC.10
		favored_RC.13
		favored_RC.16
		favored_RC.19
		favored_RC.22
		favored_RC.25
		favored_RC.28
		favored_RC.31
		favored_RC.34
		favored_RC.37
		#favored_RC.40
		bulwar_flavour.30 #Surani Refugees Settling
		anb_miscevents.15
		flavor_rogieria.20 #Emulant of Rogier
		spirits.200 #Ancestral Communion pulse event
		# flavor_cestirmark.4 #Random Trollsbayer Advisors
		flavour_zongji.1 #Li�ngzhu examination
		# flavor_cestirmark.300 #Special Cases events
	}

	#Shadowmoon handler
	if = {
		limit = {
			has_country_flag = in_shadowmoon_conspiracy
			B37 = {
				has_country_flag = shadowmoon_begin_covert_actions
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						has_opinion = {
							who = B37
							value = 100
						}
						exists = B37
					}
					tag = B37
				}
			}
			random_list = {
				25 = {
					# Hurt Legitimacy
					country_event = {
						id = flavor_rogieria.24
						random = 185
					}
				}
				25 = {
					# Hurt Prestige
					country_event = {
						id = flavor_rogieria.25
						random = 185
					}
				}
				10 = {
					# Hurt Relations
					trigger = {
						tag = B37
					}
					country_event = {
						id = flavor_rogieria.26
						random = 185
					}
				}
				25 = {
				}
			}
		}
		else = {
			clr_country_flag = in_shadowmoon_conspiracy
			B37 = {
				country_event = { id = flavor_rogieria.27 days = 7 }
			}
		}
	}

	#Railskulker train stuff
	if = {
		limit = {
			tag = H75
			has_reform = railskulker_capital_on_train_tracks
		}
		country_event = { id = flavour_railskulker.18 }
	}

	# Gommo research division
	country_event = { id = gommo_expansion_events.10 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.11 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.12 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.13 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.14 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.15 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.16 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.17 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.18 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.19 days = 1 random = 90 }

	if = { limit = { owns = 536 } #Aqatbar
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.30 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 365 } #Port Jaher
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.31 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4435 } #Rayavhashapal
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.32 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4879 } #Feiten
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.33 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 2773 } #Kherka
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.34 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4701 } #Cay Cam Sinh
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.35 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4963 } #Arawkelin
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.36 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4871 } #Tianlou
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.37 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4500 } #Sarisung
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.38 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4936 } #Aqatbar
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.39 days = 1 random = 90 }
		}
	}
	if = {
		limit = { mission_completed = A73_carver_influence }
		random = {
			chance = 25
			A73 = {
				country_event = { id = silverforge.21 days = 1 random = 90 }
			}
		}
	}
}

# Estates pulse
on_five_year_pulse_2 = {
	random_events = {
		# Burghers
		100 = burghers_estate_events.1
		100 = burghers_estate_events.2
		100 = burghers_estate_events.3
		100 = burghers_estate_events.4
		100 = burghers_estate_events.5
		100 = burghers_estate_events.6
		100 = burghers_estate_events.7
		100 = burghers_estate_events.8
		100 = burghers_estate_events.9
		400 = burghers_estate_events.10 #Demands
		100 = burghers_estate_events.11 #Bonus
		100 = burghers_estate_events.12
		100 = burghers_estate_events.13
		400 = burghers_estate_events.14 #Demands
		100 = burghers_estate_events.15 #Disloyal
		# Nobles
		100 = nobles_estate_events.1 #Demands
		100 = nobles_estate_events.2
		100 = nobles_estate_events.3
		100 = nobles_estate_events.4
		400 = nobles_estate_events.5 #Demands
		100 = nobles_estate_events.6
		100 = nobles_estate_events.7
		400 = nobles_estate_events.8 #Disloyal
		400 = nobles_estate_events.9 #Disloyal
		50 = nobles_estate_events.10
		100 = nobles_estate_events.11 #Bonus
		# Clergy
		100 = church_estate_events.1
			#Regional Variations:
			100 = church_estate_events.101
			100 = church_estate_events.102
			100 = church_estate_events.103
			100 = church_estate_events.104
			100 = church_estate_events.105
		100 = church_estate_events.2
		100 = church_estate_events.3
		100 = church_estate_events.4
		400 = church_estate_events.5 #Disloyal
		400 = church_estate_events.6 #Demands
		100 = church_estate_events.7 #Bonus
		100 = church_estate_events.8
		100 = church_estate_events.9
		100 = church_estate_events.10
		# Dhimmi
		# 100 = dhimmi_estate_events.1
		# 400 = dhimmi_estate_events.2 #Demands
		# 100 = dhimmi_estate_events.3
		# 100 = dhimmi_estate_events.4
		# 100 = dhimmi_estate_events.5
		# 100 = dhimmi_estate_events.6
		# 400 = dhimmi_estate_events.7 #Disloyal
		# 100 = dhimmi_estate_events.8
		# Cossacks
		# 100 = cossack_estate_events.1
		#100 = cossack_estate_events.2 (triggers in neighbor country) was already commented
		# 100 = cossack_estate_events.6
		# 100 = cossack_estate_events.7
		# 100 = cossack_estate_events.8
		# 100 = cossack_estate_events.9
		# 100 = cossack_estate_events.10
		# 100 = cossack_estate_events.11
		# 400 = cossack_estate_events.12 #Disloyal
		# 100 = cossack_estate_events.13
		# 400 = cossack_estate_events.14 #Demands
		# Tribes
		100 = tribal_estate_events.1
		100 = tribal_estate_events.2
		100 = tribal_estate_events.3
		100 = tribal_estate_events.4
		100 = tribal_estate_events.5
		100 = tribal_estate_events.6
		100 = tribal_estate_events.7
		100 = tribal_estate_events.8
		100 = tribal_estate_events.9
		150 = tribal_estate_events.11 #Demands
		150 = tribal_estate_events.12 #Demands
		150 = tribal_estate_events.13 #Demands
		150 = tribal_estate_events.14 #Demands

		#Anbennar
		# Artificers
		100 = artificers_estate_events.1
		100 = artificers_estate_events.2
		100 = artificers_estate_events.3
		100 = artificers_estate_events.4
		100 = artificers_estate_events.5
		400 = artificers_estate_events.6 #Demands
		100 = artificers_estate_events.7
		100 = artificers_estate_events.8
		100 = artificers_estate_events.9
		100 = artificers_estate_events.10
		100 = artificers_estate_events.11
		400 = artificers_estate_events.15 #Disloyal

		# Adventurers
		100 = adventurers_estate_events.1
		100 = adventurers_estate_events.2
		100 = adventurers_estate_events.3
		100 = adventurers_estate_events.4
		100 = adventurers_estate_events.5
		400 = adventurers_estate_events.6
		100 = adventurers_estate_events.7
		100 = adventurers_estate_events.8
		100 = adventurers_estate_events.9
		400 = adventurers_estate_events.10	#Demands
		400 = adventurers_estate_events.11	#Demands
		100 = adventurers_estate_events.12
		100 = adventurers_estate_events.13	#Bonus
		#400 = adventurers_estate_events.15 #Disloyal - this is commented as .15 is not an valid events its one of those revolt events

		# Mages
		100 = mages_estate_events.1
		100 = mages_estate_events.2
		100 = mages_estate_events.3
		100 = mages_estate_events.4
		100 = mages_estate_events.5
		100 = mages_estate_events.6
		100 = mages_estate_events.7
		100 = mages_estate_events.8
		100 = mages_estate_events.9
		100 = mages_estate_events.10
		100 = mages_estate_events.11	#Demands
		400 = mages_estate_events.12	#Demands
		100 = mages_estate_events.13	#Bonus
		100 = mages_estate_events.14
		100 = mages_estate_events.15
		100 = mages_estate_events.16
		100 = mages_estate_events.17
		100 = mages_estate_events.18
		400 = mages_estate_events.19	#Disloyal
		100 = mages_estate_events.20	#Bonus
		#400 = mages_estate_events.21 #Disloyal - same as above
		100 = mages_estate_events.22
		400 = mages_estate_events.24	#Disloyal

		#sebhuliamnoblerivalry
		100 = dartaxagerdim_events.50
		100 = dartaxagerdim_events.51

		# Raj Ministries
		100 = rajministries.1
		100 = rajministries.2
		100 = rajministries.3
		100 = rajministries.4
		100 = rajministries.5
		100 = rajministries.6
		100 = rajministries.7
		100 = rajministries.8
		100 = rajministries.9
		100 = rajministries.10
		100 = rajministries.11 #Bonus
		100 = rajministries.12 #Bonus
		400 = rajministries.101 #Raja pissed off ministries
		400 = rajministries.102 #Subject of the Raj slipping away
		800 = rajministries.2022 #A wedding

		# Castes
		25 = estate_castes_events.1 # easter egg
		155 = estate_castes_events.103
		155 = estate_castes_events.104
		155 = estate_castes_events.105
		155 = estate_castes_events.106
		155 = estate_castes_events.107
		155 = estate_castes_events.108
		155 = estate_castes_events.109
		155 = estate_castes_events.110
		155 = estate_castes_events.111
		155 = estate_castes_events.112
		155 = estate_castes_events.113
		155 = estate_castes_events.114
		155 = estate_castes_events.115
		155 = estate_castes_events.116
		155 = estate_castes_events.117
		25 = estate_castes_events.118 # easter egg 2
		155 = estate_castes_events.119
		155 = estate_castes_events.120
		155 = estate_castes_events.121
		155 = estate_castes_events.122
		155 = estate_castes_events.123
		155 = estate_castes_events.124
		155 = estate_castes_events.125
		155 = estate_castes_events.126
		155 = estate_castes_events.127
		155 = estate_castes_events.128
		155 = estate_castes_events.129
		155 = estate_castes_events.130
		155 = estate_castes_events.131
		155 = estate_castes_events.132
		155 = estate_castes_events.133
		155 = estate_castes_events.134

		# Castonath Patricians
		100 = castonath_patricians_events.101
		100 = castonath_patricians_events.102
		100 = castonath_patricians_events.103
		100 = castonath_patricians_events.104
		100 = castonath_patricians_events.105
		100 = castonath_patricians_events.106
		100 = castonath_patricians_events.107
		100 = castonath_patricians_events.108
		100 = castonath_patricians_events.109
		100 = castonath_patricians_events.110
		100 = castonath_patricians_events.111
		400 = castonath_patricians_events.112 # Revolt
		100 = castonath_patricians_events.113
		100 = castonath_patricians_events.114
		100 = castonath_patricians_events.117
		100 = castonath_patricians_events.118

		#Eunuchs
		100 = eunuchs_estate_events.1 #Demands
		100 = eunuchs_estate_events.2
		100 = eunuchs_estate_events.3
		100 = eunuchs_estate_events.4
		400 = eunuchs_estate_events.5 #Demands
		100 = eunuchs_estate_events.6
		100 = eunuchs_estate_events.7
		400 = eunuchs_estate_events.8 #Disloyal
		400 = eunuchs_estate_events.9 #Disloyal
		50 = eunuchs_estate_events.10
		100 = eunuchs_estate_events.11 #Bonus

		1000 = 0
	}

	# country_event = { id = estate_castes_events.100 days = 60 } # Debug Caste event to allow Caste Fluidity changes
}

on_five_year_pulse_3 = {
	REB = {
		if = {
			limit = { has_global_flag = runetimer }
			clr_global_flag = runetimer
		}
		else = {
			set_global_flag = runetimer
		}
	}
	random_events = {
		# 100 = estate_regency_events.2 # Anbennar: randomly add privileges, even country specific ones
		100 = estate_regency_events.3
		100 = estate_regency_events.4
		100 = estate_regency_events.5
		100 = estate_regency_events.6
		100 = estate_regency_events.7
		100 = estate_regency_events.9
		100 = propagate_religion_events.1
		100 = propagate_religion_events.2
		100 = propagate_religion_events.3
		100 = propagate_religion_events.4
		100 = propagate_religion_events.5
		100 = propagate_religion_events.6
		100 = propagate_religion_events.8
		100 = propagate_religion_events.9
		100 = propagate_religion_events.10
		#100 = propagate_religion_events.11 #Province event
		1000 = 0
	}
	events = {
		aw_spawner.0	#Spawns Adventurers Wanted! encounters

		corins_circle.100
		diggy_fallen.10			#Runefather's Maw upkeep Increase
		bulwar_flavour.34		#Avamezan horse race
		# race_setup_events.3 #Unmatching Tolerances - Fixes level of tolerance towards other races
		eordand.42 #seasonal MT
		#ynn_events.17 #Drozma Tur abandon the Iosahar system to centralize
		flavor_arverynn.5 #Predyvens Reform
    }
	# if = {
		# limit = { ynnic_iosahar = 1 }
		# random = {
			# chance = 25
			# country_event = { id = ynn_events.6 }	#Distant Iosahar slips away from your control
		# }
	# }
}

on_five_year_pulse_4 = {
	# if = { #fail-safe for flavor_pap.7, making religious leagues happen at some point if there is no PAP
		# limit = {
			# is_year = 1610
			# NOT = { exists = PAP }
			# NOT = { has_global_flag = counter_reformation }
		# }
		# set_global_flag = counter_reformation
	# }
	#fail-safe if for whatever reason these flags stay after being used in events
	if = {
		limit = {
			had_country_flag = {
				flag = advisor_events_adm
				days = 720
			}
		}
		clr_country_flag = advisor_events_adm
	}
	if = {
		limit = {
			had_country_flag = {
				flag = advisor_events_dip
				days = 720
			}
		}
		clr_country_flag = advisor_events_dip
	}
	if = {
		limit = {
			had_country_flag = {
				flag = advisor_events_mil
				days = 720
			}
		}
		clr_country_flag = advisor_events_mil
	}

	random_events = {
		#Anbennar: we don't have these
		# 200 = 0
		# 100 = kalmar_union_events.7
		# 100 = kalmar_union_events.8
		# 100 = kalmar_union_events.9

		#Gommo expansion
		50 = gommo_expansion_events.1
		20 = gommo_expansion_events.2

		1000 = 0
	}
}

# El Dorado
on_explore_coast = {
	random_events = {
		10 = exploration_events.1
		10 = exploration_events.2
		10 = exploration_events.3
		10 = exploration_events.4
		10 = exploration_events.5
		10 = exploration_events.6
		10 = exploration_events.7
		10 = exploration_events.8
		10 = exploration_events.9
		10 = exploration_events.10
		10 = exploration_events.11
		10 = exploration_events.12
		10 = exploration_events.13
		10 = exploration_events.14
		10 = exploration_events.15
	}
}

on_conquistador_empty = {
	 random_events = {
		# 10 = seven_cities_events.1
		# 10 = seven_cities_events.2
		# 10 = seven_cities_events.3
		# 10 = seven_cities_events.4
		# 10 = seven_cities_events.5
		# 10 = seven_cities_events.6
		# 10 = seven_cities_events.7
		# 10 = seven_cities_events.8

		# 10 = seven_cities_events.100
		# 10 = seven_cities_events.101
		# 10 = seven_cities_events.102
		# 10 = seven_cities_events.103
		# 10 = seven_cities_events.104
		# 10 = seven_cities_events.105

		# 50 = seven_cities_events.200
		# 50 = seven_cities_events.201
		# 50 = seven_cities_events.202
		# 50 = seven_cities_events.203
		# 50 = seven_cities_events.204
		# 50 = seven_cities_events.205
		# 50 = seven_cities_events.206
		# 50 = seven_cities_events.207
		# 50 = seven_cities_events.208
		# 50 = seven_cities_events.209
		# 50 = seven_cities_events.210
		# 50 = seven_cities_events.211
		# 50 = seven_cities_events.212
		# 50 = seven_cities_events.213
		# 50 = seven_cities_events.214
		# 50 = seven_cities_events.215
		# 50 = seven_cities_events.216
		# 50 = seven_cities_events.217
		# 50 = seven_cities_events.218
		# 50 = seven_cities_events.219
		# 50 = seven_cities_events.220
		# 50 = seven_cities_events.221
		# 50 = seven_cities_events.222
		# 50 = seven_cities_events.223

		# 10 = seven_cities_events.302
		# 10 = seven_cities_events.303
		# 10 = seven_cities_events.308
		# 10 = seven_cities_events.309

		# 10 = seven_cities_events.400
		# 10 = seven_cities_events.401
		# 10 = seven_cities_events.402
		# 10 = seven_cities_events.405
		# 10 = seven_cities_events.406
		# 10 = seven_cities_events.407
		# 10 = seven_cities_events.408
		# 10 = seven_cities_events.409
		# 10 = seven_cities_events.410
		# 10 = seven_cities_events.413
		# 10 = seven_cities_events.414

		20 = fragments.1 #Glowing City
		20 = fragments.2 #Dragon House
		20 = fragments.3 #Elfenbride's Manse
		20 = fragments.4 #God Fragment
		20 = fragments.5 #Vault Ruin
		20 = fragments.6 #Portal Nexus
		20 = fragments.7 #Floating City Crash Site

		#Glowing City
		50 = fragments.101
		50 = fragments.102
		50 = fragments.103
		50 = fragments.104
		50 = fragments.105
		50 = fragments.106

		#The Dragon House
		50 = fragments.201
		50 = fragments.202
		50 = fragments.203
		50 = fragments.204
		50 = fragments.205
		50 = fragments.206

		#The Elfenbride's Manse
		50 = fragments.301
		50 = fragments.302
		50 = fragments.303
		50 = fragments.304
		50 = fragments.305
		50 = fragments.306

		#The God's Fragment Ruin
		50 = fragments.401
		50 = fragments.402
		50 = fragments.403
		50 = fragments.404
		50 = fragments.405
		50 = fragments.406

		#Vault Ruin
		50 = fragments.501
		50 = fragments.502
		50 = fragments.503
		50 = fragments.504
		50 = fragments.505
		50 = fragments.506

		#Portal Nexus
		50 = fragments.601
		50 = fragments.602
		50 = fragments.603
		50 = fragments.604
		50 = fragments.605
		50 = fragments.606

		##Floating City Crash Site
		50 = fragments.701
		50 = fragments.702
		50 = fragments.703
		50 = fragments.704
		50 = fragments.705
		50 = fragments.706


		1800 = 0
	}
}

on_conquistador_native = {
	# random_events = {
		# 10 = seven_cities_events.300
		# 10 = seven_cities_events.301
		# 10 = seven_cities_events.303
		# 10 = seven_cities_events.304
		# 10 = seven_cities_events.305
		# 10 = seven_cities_events.306
		# 10 = seven_cities_events.307
		# 10 = seven_cities_events.308
		# 10 = seven_cities_events.309
		# 10 = seven_cities_events.310

		# 250 = 0
	# }
}

on_buy_religious_reform = {
	events = {
		religious_reforms.1
		religious_reforms.2
		religious_reforms.3
		religious_reforms.4
	}
}

on_circumnavigation = {
	events = {
		exploration_events.17
		exploration_events.16 #First Circumnavigation Europe
	}
}

on_become_free_city = {
	events = {
		free_cities.1
	}
}

on_remove_free_city = {
	events = {
		free_cities.2
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
	add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land = {
	# Anbennar - This stuff is all unused as of 1.30 as it is handled through seizing land

	# add_province_modifier = {
	# 	name = revoked_estate_modifier
	# 	duration = 5475 #15 years
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_cossacks
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_cossacks
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = cossack_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = cossack_estate_events.15 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_dhimmi
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_dhimmi
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = religious_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = dhimmi_estate_events.9 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_church
	# 		has_owner_religion = yes
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_church
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = religious_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = church_estate_events.11 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_church
	# 		has_owner_religion = no
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_church
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = church_estate_events.11 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_nobles
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_nobles
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = noble_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = nobles_estate_events.12 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_burghers
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_burghers
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = burghers_estate_events.16 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_nomadic_tribes
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_nomadic_tribes
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = tribal_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = tribal_estate_events.10 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_artificers
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_artificers
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = artificers_estate_events.16 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_adventurers
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_adventurers
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = adventurers_estate_events.15 }
	# }
}

on_revoke_estate_land_ai_post = {
	add_local_autonomy = 25
}

on_revoke_estate_land_post = {
	add_local_autonomy = 25
}

on_grant_estate_land = {
	if = {
		limit = {
			has_province_modifier = revoked_estate_modifier
		}
		remove_province_modifier = revoked_estate_modifier
	}
}

on_death_has_harem = {
	if = { limit = { has_heir = no }
		if = { 
			limit = {
				or = {
					has_reform = harpy_matriarchy_reform 
					has_reform = siadan_harpy_empire
				} 	
			}
			country_event = { id = harpy_events.101 }
		}
	}
}

on_select_heir_from_harem = {
}

#Tus Astral Shamanism
on_fetishist_cult_change = {
	# country_event = { id = fetishist_flavor.302 days = 10 } #removing tomb if incompatible cult is picked
	# country_event = { id = fetishist_flavor.304 days = 10 } #rebuilding tomb if lost
	# if = {
		# limit = {
			# has_country_flag = lost_ancestral_lands
			# NOT = { has_adopted_cult = zanahary_cult }
			# NOT = { has_adopted_cult = central_african_ancestor_cult }
		# }
		# clr_country_flag = lost_ancestral_lands
	# }
}

# country
on_gain_great_power_status = {
	if = {
		limit = {
			NOT = { has_country_flag = became_great_power_flag }
		}
		set_country_flag = became_great_power_flag
	}
	#Subjects cannot become GPs
	# if = {
		# limit = { is_subject_of_type = acolyte_dominion }
		# multiply_variable = { aInfluence = 2 }
	# }
}

# country
on_lose_great_power_status = {
	# if = {
		# limit = { is_subject_of_type = acolyte_dominion }
		# multiply_variable = { aInfluence = 0.5 }
	# }
}

# province
on_province_religion_converted = {
	on_province_religion_converted_estate_privileges_effect = yes
	if = {
		limit = {
			owner = {
				has_country_modifier = son_fetishism_as_secondary_religion
			}
			religion = shamanism
			NOT = { has_province_modifier = son_fetishism_as_secondary_religion_province }
		}
		add_province_modifier = {
			name = son_fetishism_as_secondary_religion_province
			duration = -1
			desc = son_fetishism_as_secondary_religion_province_desc
		}
	}
	else_if = {
		limit = {
			OR = {
				owner = {
					NOT = { has_country_modifier = son_fetishism_as_secondary_religion }
				}
				NOT = { religion = shamanism }
			}
			has_province_modifier = son_fetishism_as_secondary_religion_province
		}
		remove_province_modifier = son_fetishism_as_secondary_religion_province
	}
	#judaism_on_province_change_religion_or_change_owner_effect = yes
	if = {
		limit = {
			owner = { has_country_flag = jaddari_the_western_beacon_flag }
			has_province_modifier = jaddari_the_western_beacon
			religion = the_jadd
		}
		hidden_effect = {
			remove_province_modifier = jaddari_the_western_beacon
		}
	}

	# if = { limit = { owner = { has_disaster = nsc_dukeldar } }
		# nsc_disaster_province_conversion_effect = yes
	# }
	if = {
		limit = {
			region = akan_region
			has_terrain = mountain
			religion = mother_akan
			owner = { religion = mother_akan }
		}
		add_permanent_province_modifier = {
			name = akan_ascetic_cult
			duration = -1
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	else_if = {
		limit = {
			region = akan_region
			has_terrain = mountain
			has_province_modifier = akan_ascetic_cult
		}
		remove_province_modifier = akan_ascetic_cult
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owner = {
				tag = G60
				has_country_flag = ameion_eltibhen
			}
			religion = kheionism
			region = alecand_region
		}
		add_culture_construction = {
			speed = 1
			cost = 0
		}
	}
	#fey court piety
	if = {
		limit = { owner = { religion_group = fey_religion NOT = { religion = vechnogejzn } } }
		owner = { add_piety = 0.1 }
	}
}

# province
on_province_culture_converted = {
	on_province_culture_converted_estate_privilges_effect = yes
	# judaism_on_province_culture_converted_effect = yes #Anbennar
	# imperial_modifiers_on_province_change_culture_or_change_owner_effect = yes #Anbennar

	#Anbennar
	# owner = { #Handle with the province event effect under
		# country_event = { id = race_setup_events.4 }	#Culture Conversion - turns majorities into minorities
		# country_event = { id = race_setup_events.5 }	#Culture Conversion - turns minorities into majorities cleanup
	# }

	province_event = { id = race_setup_events.15 days = 3 }
	if = {
		limit = {
			owner = { has_country_flag = phoenix_empire_the_sun_outshines_the_moon_flag }
			has_province_modifier = phoenix_empire_the_sun_outshines_the_moon
			culture = sun_elf
		}
		hidden_effect = {
			remove_province_modifier = phoenix_empire_the_sun_outshines_the_moon
			owner = { add_adm_power = 25 }
		}
	}
	if = {
		limit = {
			has_province_modifier = Z26_axzo_vurte
			NOT = { culture = greenscale_kobold }
		}
		remove_province_modifier = Z26_axzo_vurte
	}
	xhazobkult_set_appropriate_modifier = yes

	if = {
		limit = {
			owner = { tag = B32 }
			OR = {
				has_province_modifier = castanor_culture_convert_100
				has_province_modifier = castanor_culture_convert_95
				has_province_modifier = castanor_culture_convert_90
				has_province_modifier = castanor_culture_convert_85
				has_province_modifier = castanor_culture_convert_80
				has_province_modifier = castanor_culture_convert_75
			}
			culture = castanorian
		}
		hidden_effect = {
			remove_province_modifier = castanor_culture_convert_100
			remove_province_modifier = castanor_culture_convert_95
			remove_province_modifier = castanor_culture_convert_90
			remove_province_modifier = castanor_culture_convert_85
			remove_province_modifier = castanor_culture_convert_80
			remove_province_modifier = castanor_culture_convert_75
		}
	}

	if = {
		limit = {
			owner = { tag = Y01 }
			OR = {
				has_province_modifier = azjakuma_birb_rejection
				has_province_modifier = azjakuma_birb_caution
			}
			NOT = {
				culture = shuvuush
			}
		}
		remove_province_modifier = azjakuma_birb_rejection
		remove_province_modifier = azjakuma_birb_caution
	}

	if = {
		limit = { owner = { has_country_flag = siadan_harimari_autonomy } }
		if = {
			limit = { culture_is_harimari = yes }
			add_province_modifier = {
				name = siadan_harimari_autonomy
				duration = -1
			}
		}

		if = {
			limit = { NOT = { culture_is_harimari = yes } }
			remove_province_modifier = siadan_harimari_autonomy
		}
	}

	#Ynn
	province_event = { id = ynn_events.23 }	#Pomentere Estates modifier

	#Ameion
	if = {
		limit = {
			owner = { has_country_flag = ameion_klereyen_flag }
			OR = {
				region = taychend_region
				region = larankarha_highlands_region
			}
			NOT = { is_island = yes }
			culture_group = kheionai_ruinborn_elf
			NOT = { culture = klereyen }
		}
		change_culture = klereyen
	}
	if = {
		limit = {
			owner = { has_country_flag = ameion_astolbhen_flag }
			OR = {
				region = chendhya_region
				region = mteibas_valley_region
			}
			culture_group = kheionai_ruinborn_elf
			NOT = { culture = astolbhen }
			NOT = { has_port = yes }
		}
		change_culture = astolbhen
	}
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
	# if = {
		# limit = {
			# trade_company_region = trade_company_moluccas
		# }
		# FROM = {
			# if = {
				# limit = {
					# ai = no
					# NOT = { check_variable = { which = religion_propagated_in_moluccas value = 1 } }
				# }
				# set_variable = {
					# which = religion_propagated_in_moluccas value = 1
				# }
			# }
			# else_if = {
				# limit = {
					# ai = no
					# check_variable = { which = religion_propagated_in_moluccas value = 1 }
					# NOT = { check_variable = { which = religion_propagated_in_moluccas value = 6 } }
				# }
				# change_variable = {
					# which = religion_propagated_in_moluccas value = 1
				# }
			# }
		# }
	# }
}

# province
# FROM = old owner
on_province_owner_change = {
	events = {
		# japan.1
		one_xia.1
		rahenraj.1
		unraveling.10
		spirits.006 #Temple restoration/corruption/purification cleanup
		spirits.010 #More temple stuff
	}
	on_province_owner_change_government_effect = yes
	on_province_owner_change_estate_privileges_effect = yes
	#judaism_on_province_change_religion_or_change_owner_effect = yes #Anbennar
	#imperial_modifiers_on_province_change_culture_or_change_owner_effect  = yes #Anbennar

	#Anbennar
	#Krakazol/Rahen initial friendship, formerly rahen.1
	if = {
		limit = {
			province_id = 4266
			owner = { culture_group = dwarven has_reform = dwarovar_adventurer_reform }
			4462 = { #keppakazol
				owner = {
					is_subject = no
					NOT = { tag = R62 }
				}
			}
		}
		4462 = { owner = { country_event = { id = rahen.1 days = 60 } } } #delay so ai attitude switches from unknown
	}

	#Black Orc trophies
	if = { # take trophy for blorc.
		limit = { owner = { primary_culture = black_orc } }
		trigger_switch = {
			on_trigger = province_id
			2863 = { province_event = { id = blorc.2863 } }
			2868 = { province_event = { id = blorc.2868 } }
			4119 = { province_event = { id = blorc.4119 } }
			4208 = { province_event = { id = blorc.4208 } }
			4020 = { province_event = { id = blorc.4020 } }
			4147 = { province_event = { id = blorc.4147 } }
			4236 = { province_event = { id = blorc.4236 } }
			2931 = { province_event = { id = blorc.2931 } }
			4056 = { province_event = { id = blorc.4056 } }
			2963 = { province_event = { id = blorc.2963 } }
			4238 = { province_event = { id = blorc.4238 } }
			2942 = { province_event = { id = blorc.2942 } }
			4093 = { province_event = { id = blorc.4093 } }
			4100 = { province_event = { id = blorc.4100 } }
			2973 = { province_event = { id = blorc.2973 } }
			4039 = { province_event = { id = blorc.4039 } }
			4217 = { province_event = { id = blorc.4217 } }
			4078 = { province_event = { id = blorc.4078 } }
			4124 = { province_event = { id = blorc.4124 } }
			2914 = { province_event = { id = blorc.2914 } }
			4218 = { province_event = { id = blorc.4218 } }
			4247 = { province_event = { id = blorc.4247 } }
			4265 = { province_event = { id = blorc.4265 } }
			4284 = { province_event = { id = blorc.4284 } }
			4266 = { province_event = { id = blorc.4266 } }
			4350 = { province_event = { id = blorc.4350 } }
			4311 = { province_event = { id = blorc.4311 } }
			4323 = { province_event = { id = blorc.4323 } }
		}
	}
	if = {
		limit = { FROM = { primary_culture = black_orc } }
		blorc_hold_trophy_remove = yes # remove trophies from Blorcs
	}
	if = {
		limit = {
			owner = { has_country_flag = rezankand_jungle_research }
			has_terrain = jungle
			is_city = no
		}
		add_province_modifier = {
			name = rezankand_jungle_specialist
			duration = 3650
		}
	}

	if = {
		limit = {
			trade_goods = gold
			NOT = { has_province_modifier = estate_burghers_control_over_gold_mine }
			owner = {
				has_estate_privilege = estate_burghers_control_over_the_mint
			}
		}
		add_province_modifier = {
			name = estate_burghers_control_over_gold_mine
			duration = -1
		}
	}

	#ANBENNAR
	if = {
		limit = {
			NOT = { has_province_modifier = wine_lord_wine }
			OR = {
				owner = { has_reform = wine_lord_reform }
				owner = { has_reform = roilsard_elective }
				owner = { has_reform = wineport_merchants }
			}
		}
		hidden_effect = {
			if = {
				limit = {
					trade_goods = wine
				}
				add_province_modifier = {
					name = wine_lord_wine
					duration = -1
					hidden = yes
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_estate_privilege = artifice_invention_wine_ageifier
			}
			trade_goods = wine
		}
		hidden_effect = {
			add_province_modifier = {
				name = artifice_ageifier_bonus
				duration = -1
				hidden = yes
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_estate_privilege = artifice_invention_growth_beans
			}
			OR = {
				trade_goods = grain
				trade_goods = cocoa
				trade_goods = sugar
				trade_goods = wine
				trade_goods = tobacco
				trade_goods = spices
				trade_goods = incense
				trade_goods = tea
				trade_goods = coffee
				trade_goods = fungi
				trade_goods = serpentbloom
			}
		}
		hidden_effect = {
			add_province_modifier = {
				name = artifice_growthbeans_bonus
				duration = -1
				hidden = yes
			}
		}
	}
	if = {
		limit = {
			trade_goods = gems
			has_port = yes
			owner = {
				has_estate_privilege = artifice_invention_pearl_cultivators
			}
		}
		hidden_effect = {
			add_province_modifier = {
				name = artifice_pearl_cultivator_bonus
				duration = -1
				hidden = yes
			}
		}
	}
	if = {
		limit = {
			OR = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
			}
			owner = {
				has_estate_privilege = artifice_invention_superfast_elevators
			}
		}
		hidden_effect = {
			add_province_modifier = {
				name = artifice_superfast_elevators_bonus
				duration = -1
				hidden = yes
			}
		}
	}

	if = {
		limit = { owner = { NOT = { num_of_colonists = 1 } ai = yes } is_colony = yes }
		multiply_colonysize = 0
	}
	if = {
		limit = {
			owner = { has_country_flag = phoenix_empire_the_sun_outshines_the_moon }
			culture = moon_elf
		}
		add_province_modifier = {
			name = phoenix_empire_the_sun_outshines_the_moon
			duration = -1
		}
	}
	if = {
		limit = {
			owner = { has_country_flag = jaddari_the_western_beacon_flag }
			continent = europe
			NOT = { religion = the_jadd }
		}
		add_province_modifier = {
			name = jaddari_the_western_beacon
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = {
			owner = { has_country_flag = jaddari_remnant_dhenijansar_administration_flag }
			OR = { region = rakhadesh_region region = rahen_coast_region region = dhujat_region }
		}
		add_province_modifier = {
			name = jaddari_remnant_dhenijansar_administration
			duration = -1
			hidden = yes
		}
	}

	if = {
		limit = {
			OR = {
				owner = { has_country_modifier = monstrous_nation }
				owner = { government = tribal }
				owner = { culture_is_ruinborn = yes }
			}
			OR = {
				has_province_modifier = ravelian_society
				has_province_modifier = ravelian_lodge
			}
		}
		province_event = { id = ravelian.21 }
	}

	if = {
		limit = {
			owner = {
				NOT = { tag = Z45 }
				NOT = { tag = Z26 }
			}
			has_province_modifier = vrorenwood_company
		}
		remove_province_modifier = vrorenwood_company
	}

	if = {
		limit = {
			owner = {
				NOT = {
					overlord = { has_reform = raja_reform }
					has_reform = raja_reform
				}
			}
		}
		rahen_clear_court_disaster_province_modifiers = yes
	}

	xhazobkult_set_appropriate_modifier = yes

	if = {
		limit = { has_province_modifier = ghavaanaj_white_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_white_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_white_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_white_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_red_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_red_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_red_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_red_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_purple_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_purple_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_purple_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_purple_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_black_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_black_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_black_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_black_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_palace_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_palace_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_palace_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_palace_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_castle_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_castle_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_castle_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_castle_herd_locked duration = -1 }
	}

	ghavaanaj_update_herd_size_provinces_on_province_owner_change = yes

	if = {
		limit = { owner = { tag = I89 NOT = { has_country_flag = centaur_no_zeal } } }
		trigger_switch = {
			on_trigger = superregion

			bulwar_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = burning_spear_revolt } has_faction = burning_spear } }
					add_province_modifier = { name = centaur_burning_spear_territory duration = -1 }
				}
			}
			escann_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = verdant_bliss_revolt } has_faction = verdant_bliss } }
					add_province_modifier = { name = centaur_verdant_bliss_territory duration = -1 }
				}
			}
			deepwoods_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = verdant_bliss_revolt } has_faction = verdant_bliss } }
					add_province_modifier = { name = centaur_verdant_bliss_territory duration = -1 }
				}
			}
			rahen_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = tiger_bane_revolt } has_faction = tiger_bane } }
					add_province_modifier = { name = centaur_tiger_bane_territory duration = -1 }
				}
			}
			south_haless_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = tiger_bane_revolt } has_faction = tiger_bane } }
					add_province_modifier = { name = centaur_tiger_bane_territory duration = -1 }
				}
			}
			gerudia_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
		}
		trigger_switch = {
			on_trigger = region

			alenic_frontier_region = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
			dragon_coast_region = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
		}
		if = {
			limit = {
				owner = { NOT = { has_country_flag = vine_tearer_revolt } has_faction = vine_tearer }
				continent = africa
				NOT = { superregion = bulwar_superregion }
			}
			add_province_modifier = { name = centaur_vine_tearer_territory duration = -1 }
		}
		if = {
			limit = {
				owner = { NOT = { has_country_flag = rosen_rider_revolt } has_faction = rosen_rider }
				superregion = western_cannor_superregion
				NOT = { region = alenic_frontier_region }
				NOT = { region = dragon_coast_region }
			}
			add_province_modifier = { name = centaur_rosen_rider_territory duration = -1 }
		}
	}

	#Seinathil Sheetmusic Bonuses
	if = {
		limit = {
			NOT = { has_province_modifier = A90_sheet_music_1 }
			owner = { has_country_flag = seinathil_paper1 }
		}
		hidden_effect = {
			if = {
				limit = {
					trade_goods = paper
				}
				add_province_modifier = {
					name = A90_sheet_music_1
					duration = -1
					hidden = yes
				}
			}
		}
	}
	if = {
		limit = {
			NOT = { has_province_modifier = A90_sheet_music_2 }
			owner = { has_country_flag = seinathil_paper2 }
		}
		hidden_effect = {
			if = {
				limit = {
					trade_goods = paper
				}
				add_province_modifier = {
					name = A90_sheet_music_2
					duration = -1
					hidden = yes
				}
			}
		}
	}
	if = {
		limit = {
			owner = { tag = Y98 has_country_flag = Y98_improved_silk_flag }
			trade_goods = silk
			NOT = {
				has_province_modifier = Y98_improved_silk_mod
			}
		}
		hidden_effect = {
			add_province_modifier = {
				name = Y98_improved_silk_mod
				duration = -1
				hidden = yes
			}
		}
	}

	# Removed degenerated Ruinborn from province and potentially infestation
	if = {
		limit = { culture = bloodfeeders }
		province_event = { id = infestation_bloodfeeder.2001 }
	}
	else_if = {
		limit = { culture = silent_watchers }
		province_event = { id = infestation_silent_watcher.2001 }
	}
	else_if = {
		limit = { culture = ice_sleepers }
		province_event = { id = infestation_ice_sleeper.2001 }
	}

	if = {
		limit = { owner = { is_subject_of_type = acolyte_dominion } }
		owner = {
			change_variable = { aInfluence = 2 }
			every_known_country = {
				limit = { is_subject_of_type = acolyte_dominion }
				ROOT = { remove_claim = PREV }
			}
		}
	}

	if = {
		limit = {
			region = akan_region
			has_terrain = mountain
			religion = mother_akan
			owner = { religion = mother_akan }
			NOT = { has_province_modifier = akan_ascetic_cult }
		}
		add_permanent_province_modifier = {
			name = akan_ascetic_cult
			duration = -1
		}
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	else_if = {
		limit = {
			region = akan_region
			has_terrain = mountain
			NOT = { owner = { religion = mother_akan } }
			has_province_modifier = akan_ascetic_cult
		}
		remove_province_modifier = akan_ascetic_cult
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}

	if = {
		limit = {
			province_id = 912
			has_province_modifier = incomplete_hold
			NOT = { owned_by = A73 }
		}
		remove_province_modifier = incomplete_hold
		add_permanent_province_modifier = {
			name = incomplete_hold_0
			duration = -1
		}
	}

	if = {
		limit = {
			province_id = 912
			has_province_modifier = incomplete_hold_0
			owned_by = A73
		}
		remove_province_modifier = incomplete_hold_0
		add_permanent_province_modifier = {
			name = incomplete_hold
			duration = -1
		}
	}


	province_event = { id = roadwarrior.6 days = 3 } #Roadwarrior looting stuff

	on_province_owner_change_estate_privileges_effect = yes
	province_event = { id = race_setup_events.15 days = 1 }

	#reapply dungeon flags
	if = {
		limit = { has_dwarovar_dungeon = yes }
		dungeon_ownership_reset_effect = yes
	}

	#dwarovar expeditions
	if = {
		limit = {
			OR = {
				has_province_modifier = expedition_target
				has_dwarovar_dungeon = yes
			}
		}
		generate_expedition = { base_floor = 1 base_danger = 1 }
		expedition_dead_effect = yes
		FROM = { clr_country_flag = expedition_happening }
		clr_province_flag = sent_expedition_@FROM
		clr_province_flag = generated_party_stats_@FROM
		if = { #re-add country flag to new owner if they already have an expedition elsewhere
			limit = {
				owner = { any_owned_province = { has_province_flag = sent_expedition_@owner } }
			}
			owner = { set_country_flag = expedition_happening }
		}
		if = { #re-add country flag to old owner if necessary
			limit = {
				FROM = { any_owned_province = { has_province_flag = sent_expedition_@owner } }
			}
			FROM = { set_country_flag = expedition_happening }
		}
		#reapply gems
		respawn_dwarovkron_fragments = yes
	}

	#hold migration digging/repairing exploits
	if = {
		limit = {
			province_group = hold_province
			is_city = no
		}
		if = {
			limit = { has_advanced_hold_infrastructure = yes }
			set_province_flag = specialized_hold
		}
		if = {
			limit = {
				FROM = {
					capital_scope = {
						OR = {
							has_construction = digging_deeper
							has_construction = restoring_hold
						}
					}
					NOT = { num_of_cities = 2 } #abandoned colony
				}
			}
			FROM = {
				capital_scope = { cancel_construction = yes }
				if = {
					limit = { has_country_flag = is_digging }
					FROM = {
						clr_country_flag = is_digging
						clr_country_flag = dig_prod
						clr_country_flag = dig_manpower
						clr_country_flag = dig_culture
						clr_country_flag = dig_explosive
						remove_country_modifier = dig_prod
						remove_country_modifier = dig_manpower
						remove_country_modifier = dig_explosive
					}
				}
			}
		}
	}

	#seghdihr military modifiers
	if = {
		limit = {
			owned_by = H78
			H78 = { has_reform = seghdihr_segbandalic_military }
		}
		if = {
			limit = { province_group = segbandal_hold_province }
			add_province_modifier = { name = seghdihr_reform_holds duration = -1 hidden = yes }
		}
		else = { add_province_modifier = { name = seghdihr_reform_non_holds duration = -1 hidden = yes } }
	}

	#azjakuma events
	if  = {
		limit = {
			OR = {
				owned_by = Y01
				FROM = { tag = Y01 }
				owner = {
					is_subject_of = Y01
					NOT = { is_subject_of_type = tributary_state }
				}
			}
		}
		province_event = {
			id = flavor_azjakuma.2500
		}
	}
	owner = { country_event = { id = flavor_azjakuma.2801 days = 5 } }

	#Dhenijanrai events
	if = {
		limit = {
			province_id = 4265 # Grozumdihr
			owner = { mission_completed = R51_peridot_king }
			NOT = { exists = I18 }
		}
		owner = { country_event = { id = flavor_dhenijanraj.300 } }
	}

	#Ynn
	owner = { country_event = { id = ynn_events.2 } }
	FROM = { country_event = { id = ynn_events.2 } }
	province_event = { id = ynn_events.23 }	#Pomentere Estates modifier

	#reduced dev cost in capital state, adds modifier when gaining provinces in capital state
	if = {
		limit = {
			owner = {
				has_government_attribute = lower_dev_cost_in_capital_state
				ROOT = {
					area_for_scope_province = {
						is_capital_of = PREV
					}
					NOT = { has_province_modifier = lower_dev_cost_in_capital_state_modifier }
				}
			}
		}
		add_province_modifier = {
			name = lower_dev_cost_in_capital_state_modifier
			duration = -1
			hidden = yes
		}
	}

	#Orlghelovar (I12)
	if = {
		limit = {
			trade_goods = glass
			owner = { tag = I12 }
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_reform = orlghelovar_glasslords
						has_reform = orlghelovar_science
					}
				}
				NOT = { has_province_modifier = orlghelovar_glasslord_glass }
			}
			add_province_modifier = { name = orlghelovar_glasslord_glass duration = -1 hidden = yes }
		}
		if = {
			limit = {
				owner = { has_reform = orlghelovar_glass_worker_reform }
				NOT = { has_province_modifier = orlghelovar_reformed_glassworkers }
			}
			add_province_modifier = { name = orlghelovar_reformed_glassworkers duration = -1 hidden = yes }
		}
		if = {
			limit = {
				owner = { has_country_modifier = orlghelovar_sapphire_glass }
				NOT = { has_province_modifier = orlghelovar_glass_value }
			}
			add_province_modifier = { name = orlghelovar_glass_value duration = -1 hidden = yes }
		}
	}

	if = {
		limit = {
			culture = no_culture
		}
		change_culture = owner
	}
	if = {
		limit = {
			religion = no_religion
		}
		change_religion = owner
	}
#Add Grain to Grain Lords
	if = {
        limit = {
            NOT = { has_province_modifier = barumand_lord_grain}
                owner = { has_reform = barumand_grain_lords_reform }
        }
        hidden_effect = {
            if = {
                limit = {
                    trade_goods = grain
                }
                add_province_modifier = {
                    name = barumand_lord_grain
                    duration = -1
                    hidden = yes
                }
            }
        }
    }
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
	increase_issue_passed_counter = yes
}

#AnbennarDependencies - we need our own version of this

# country
on_harmonized_pagan = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.1
	}
}
on_harmonized_christian = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.2
	}
}
on_harmonized_muslim = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.3
	}
}
on_harmonized_jewish_group = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.5
	}
}
on_harmonized_zoroastrian_group = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.6
	}
}
on_harmonized_dharmic = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.4
	}
}
on_harmonized_mahayana = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.9
	}
}
on_harmonized_buddhism = { #Theravada
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.8
	}
}
on_harmonized_shinto = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.7
	}
}
on_harmonized_vajrayana = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.10
	}
}

# country
on_russian_sudebnik = {
	country_event = { id = flavor_gawed.100 }
}

# country
on_russian_oprichnina = {
	country_event = { id = flavor_gawed.101 }
}

# country
on_russian_streltsy = {
	country_event = { id = flavor_gawed.102 }
}

# province
on_consecrate_patriarch = {
}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {
	if = {
		limit = {
			has_estate_privilege = estate_nobles_command_of_the_military
		}
		add_estate_influence_modifier = {
			estate = estate_nobles
			influence = 5
			duration = 3650
			desc = EST_VAL_NOBLE_LEADER
		}
	}
	if = {
		limit = {
			has_estate_privilege = estate_ajgriijarul_military_command
		}
		add_estate_influence_modifier = {
			estate = estate_ajgriijarul
			influence = 5
			duration = 3650
			desc = EST_VAL_AJGRIIJARUL_LEADER
		}
	}
	if = {
		limit = {
			has_faction = hob_lion_command
		}
		add_faction_influence = {
			faction = hob_lion_command
			influence = 1
		}
	}
}

# country
on_general_recruited = {
	if = {
		limit = { has_country_modifier = pol_trigger_for_army_professionalism_modifier }
		add_army_professionalism = 0.0125
	}
	else = {
		add_army_professionalism = 0.01
	}
	if = {
		limit = { has_government_attribute = recruiting_generals_increases_nobles_loyalty }
		if = {
			limit = {
				has_estate = estate_nobles
			}
			add_estate_loyalty = {
				estate = estate_nobles
				loyalty = 2
			}
		}
		if = {
			limit = {
				has_estate = estate_maratha
			}
			add_estate_loyalty = {
				estate = estate_maratha
				loyalty = 2
			}
		}
		if = {
			limit = {
				has_estate = estate_rajput
			}
			add_estate_loyalty = {
				estate = estate_rajput
				loyalty = 2
			}
		}
		# Anbennar
		if = {
			limit = {
				has_estate = estate_uppercastes
			}
			add_estate_loyalty = {
				estate = estate_uppercastes
				loyalty = 2
			}
		}
	}

	if = {
		limit = { has_government_attribute = dwarovar_emulate_warriors_effect }
		change_estate_land_share = {
			estate = estate_church
			share = -1
		}
	}

	if = {
		limit = { has_estate_privilege = estate_lion_command_war_room_rights }
		add_legitimacy = 1
	}
}

# country
on_admiral_recruited = {
	if = {
		limit = { has_country_flag = admirals_give_army_professionalism }
		add_army_professionalism = 0.005
	}
	if = {
		limit = {
			OR = {
				has_country_modifier = pol_global_maritime_empire_modifier
				has_country_modifier = pol_global_maritime_empire_2_modifier
			}
		}
		add_navy_tradition = 1
	}
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
	if = {
		limit = {
			OR = {
				has_country_modifier = pol_global_maritime_empire_modifier
				has_country_modifier = pol_global_maritime_empire_2_modifier
			}
		}
		add_navy_tradition = 1
	}
}

# THIS = Province, FROM = Country
on_regiment_recruited = {
	FROM = {
		if = {
			limit = { has_estate_privilege = estate_lion_command_war_room_rights }
			add_legitimacy = 0.2
		}
	}
}

# THIS = Province, FROM = Country, ROOT = Merc Unit
on_mercenary_recruited = {
	if = {
		limit = {
			FROM = { has_not_free_mercs_trait = yes }
			is_not_free_merc_company = yes
			#Anbennar
			# OR = {
				# FROM = { NOT = { has_country_flag = oyo_cavalry_do_not_consume_ap } }
				# ROOT = { NOT = { mercenary_company = merc_oyo_cavalry } }
			# }
		}
		if = {
			limit = {
				FROM = {
					OR = {
						has_country_flag = fifty_percent_merc_army_professionalism_cost
						has_country_modifier = pol_cheap_ap_mercs_modifier
					}
				}
			}
			FROM = {
				add_army_professionalism = -0.025
			}
		}
		else = {
			FROM = {
				add_army_professionalism = -0.05
			}
		}
	}

	#Anbennar
	if = {
		limit = {
			FROM = {
				tag = H78
				has_reform = seghdihr_segbandalic_military
			}
		}
		FROM = { add_army_professionalism = -0.05 } #so its -10% total
	}
	if = {
		limit = {
			FROM = {
				OR = {
					tag = G35
					was_tag = G35
				}
				mission_completed = veykodan_guard
			}
			OR = {
				ROOT = { mercenary_company = veykodan_guard_merc }
				ROOT = { mercenary_company = veykodan_guard_elite_merc }
			}
		}
		FROM = { country_event = { id = flavor_arverynn.46 } }
	}
}

# THIS = One province in the state
on_add_pasha = {
}

# THIS = One province in the state
on_remove_pasha = {
	hidden_effect = {
		owner = {
			save_event_target_as = province_owner
		}
		remove_province_modifier = pasha_removed_modifier
	}

	area = {
		limit = { owned_by = event_target:province_owner }
		add_or_extend_province_modifier_effect = { MODIFIER = pasha_removed_modifier DURATION = 3650 }
	}
}

# THIS = Province
on_janissaries_raised = {
}

on_cawa_raised = {
}

on_carolean_raised = {
}

on_hussars_raised = {
}

on_revolutionary_guard_raised = {
}

on_reform_enacted = {
	if = {
		limit = { religion = corinite }
		add_karma = 20
	}
	if = {
		limit = {
			tag = I89
			NOT = { has_country_flag = centaur_no_zeal }
		}
		if = {
			limit = { has_country_flag = verdant_bliss_flag }
			add_faction = verdant_bliss
		}
		if = {
			limit = { has_country_flag = burning_spear_flag }
			add_faction = burning_spear
		}
		if = {
			limit = { has_country_flag = tiger_bane_flag }
			add_faction = tiger_bane
		}
		if = {
			limit = { has_country_flag = raging_blizzard_flag }
			add_faction = raging_blizzard
		}
		if = {
			limit = { has_country_flag = vine_tearer_flag }
			add_faction = vine_tearer
		}
		if = {
			limit = { has_country_flag = rosen_rider_flag }
			add_faction = rosen_rider
		}
	}
	if = {
		limit = {
			has_reform = hobgoblin_stratocracy_reform
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_wolf_command_war_room_rights } }
			remove_faction = hob_wolf_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_boar_command_war_room_rights } }
			remove_faction = hob_boar_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_lion_command_war_room_rights } }
			remove_faction = hob_lion_command
		}
		if = {
			limit = { has_estate_privilege = estate_dragon_command_war_room_rights }
			add_faction = hob_dragon_command
		}
		if = {
			limit = { has_estate_privilege = estate_elephant_command_war_room_rights }
			add_faction = hob_elephant_command
		}
		if = {
			limit = { has_estate_privilege = estate_tiger_command_war_room_rights }
			add_faction = hob_tiger_command
		}
	}
	update_artifice_points = yes
	
	add_mil_power = 100
}

on_reform_changed = {
	if = {
		limit = {
			tag = I89
			NOT = { has_country_flag = centaur_no_zeal }
		}
		if = {
			limit = { has_country_flag = verdant_bliss_flag }
			add_faction = verdant_bliss
		}
		if = {
			limit = { has_country_flag = burning_spear_flag }
			add_faction = burning_spear
		}
		if = {
			limit = { has_country_flag = tiger_bane_flag }
			add_faction = tiger_bane
		}
		if = {
			limit = { has_country_flag = raging_blizzard_flag }
			add_faction = raging_blizzardc
		}
		if = {
			limit = { has_country_flag = vine_tearer_flag }
			add_faction = vine_tearer
		}
		if = {
			limit = { has_country_flag = rosen_rider_flag }
			add_faction = rosen_rider
		}
	}
	if = {
		limit = {
			has_reform = hobgoblin_stratocracy_reform
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_wolf_command_war_room_rights } }
			remove_faction = hob_wolf_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_boar_command_war_room_rights } }
			remove_faction = hob_boar_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_lion_command_war_room_rights } }
			remove_faction = hob_lion_command
		}
		if = {
			limit = { has_estate_privilege = estate_dragon_command_war_room_rights }
			add_faction = hob_dragon_command
		}
		if = {
			limit = { has_estate_privilege = estate_elephant_command_war_room_rights }
			add_faction = hob_elephant_command
		}
		if = {
			limit = { has_estate_privilege = estate_tiger_command_war_room_rights }
			add_faction = hob_tiger_command
		}
	}
	
	add_dip_power = 100
}

on_trade_company_investment = {
}

on_center_of_trade_upgrade = {
	if = {
		limit = { owner = { has_country_flag = enable_upgrading_centers_of_trade_dev } }
		add_base_production = 1
	}
}

on_center_of_trade_downgrade = {
	if = {
		limit = { owner = { has_country_flag = enable_upgrading_centers_of_trade_dev } }
		add_base_production = -1
	}
}

on_culture_promoted = {
	on_culture_promoted_estate_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_culture_country_effect = yes #Anbennar

	#Anbennar
	country_event = { id = race_setup_events.6 }
	country_event = { id = racial_modifiers.7 }	#Save primary culture
	country_event = { id = racial_modifiers.8 }	#Change back primary culture if the country has a locked administration
	country_event = { id = monstrous.102 days = 35 } #Remove opinion if no longer monstrous, 35days delay to let the triggered modifier update itself
	update_nsc_level_secondary_effects = yes
}

# ROOT = country
on_culture_demoted = {
	on_culture_demoted_estate_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_culture_country_effect = yes #Anbennar
	on_culture_demoted_effect = yes
}

# ROOT = country
on_primary_culture_changed = {
	on_primary_culture_changed_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_primary_culture_change_effect = yes #Anbennar

	#Anbennar
	country_event = { id = racial_modifiers.5 }	#Racial Admin and Military - on primary culture change
	if = {
		limit = { NOT = { primary_culture = black_orc } }
		remove_country_modifier = black_orc_trophy_khugdihr
		remove_country_modifier = black_orc_trophy_haraz_orldhum
		remove_country_modifier = black_orc_trophy_amldihr
		remove_country_modifier = black_orc_trophy_krakdhumvror
		remove_country_modifier = black_orc_trophy_dur_vazhatun
		remove_country_modifier = black_orc_trophy_orlazam_az_dihr
		remove_country_modifier = black_orc_trophy_mithradhum
		remove_country_modifier = black_orc_trophy_er_natvir
		remove_country_modifier = black_orc_trophy_verkal_kozenad
		remove_country_modifier = black_orc_trophy_hul_jorkad
		remove_country_modifier = black_orc_trophy_orlghelovar
		remove_country_modifier = black_orc_trophy_shazstundihr
		remove_country_modifier = black_orc_trophy_arg_ordstun
		remove_country_modifier = black_orc_trophy_verkal_skomdihr
		remove_country_modifier = black_orc_trophy_ovdal_lodhum
		remove_country_modifier = black_orc_trophy_gor_burad
		remove_country_modifier = black_orc_trophy_gor_vazumbrog
		remove_country_modifier = black_orc_trophy_hehodovar
		remove_country_modifier = black_orc_trophy_seghdihr
		remove_country_modifier = black_orc_trophy_verkal_gulan
		remove_country_modifier = black_orc_trophy_gor_ozumbrog
		remove_country_modifier = black_orc_trophy_ovdal_kanzad
		remove_country_modifier = black_orc_trophy_grozumdihr
		remove_country_modifier = black_orc_trophy_ovdal_az_an
		remove_country_modifier = black_orc_trophy_hul_az_krakazol
		remove_country_modifier = black_orc_trophy_tuwad_dhumankon
		remove_country_modifier = black_orc_trophy_gronstunad
		remove_country_modifier = black_orc_trophy_verkal_dromak
	}
	else = { #transfer all trophies to Blorc
		if = { limit = { any_owned_province = { province_id = 2863 } } 2863 = { province_event = { id = blorc.2863 } } }
		if = { limit = { any_owned_province = { province_id = 2868 } } 2868 = { province_event = { id = blorc.2868 } } }
		if = { limit = { any_owned_province = { province_id = 4119 } } 4119 = { province_event = { id = blorc.4119 } } }
		if = { limit = { any_owned_province = { province_id = 4208 } } 4208 = { province_event = { id = blorc.4208 } } }
		if = { limit = { any_owned_province = { province_id = 4020 } } 4020 = { province_event = { id = blorc.4020 } } }
		if = { limit = { any_owned_province = { province_id = 4147 } } 4147 = { province_event = { id = blorc.4147 } } }
		if = { limit = { any_owned_province = { province_id = 4236 } } 4236 = { province_event = { id = blorc.4236 } } }
		if = { limit = { any_owned_province = { province_id = 2931 } } 2931 = { province_event = { id = blorc.2931 } } }
		if = { limit = { any_owned_province = { province_id = 4056 } } 4056 = { province_event = { id = blorc.4056 } } }
		if = { limit = { any_owned_province = { province_id = 2963 } } 2963 = { province_event = { id = blorc.2963 } } }
		if = { limit = { any_owned_province = { province_id = 4238 } } 4238 = { province_event = { id = blorc.4238 } } }
		if = { limit = { any_owned_province = { province_id = 2942 } } 2942 = { province_event = { id = blorc.2942 } } }
		if = { limit = { any_owned_province = { province_id = 4093 } } 4093 = { province_event = { id = blorc.4093 } } }
		if = { limit = { any_owned_province = { province_id = 4100 } } 4100 = { province_event = { id = blorc.4100 } } }
		if = { limit = { any_owned_province = { province_id = 2973 } } 2973 = { province_event = { id = blorc.2973 } } }
		if = { limit = { any_owned_province = { province_id = 4039 } } 4039 = { province_event = { id = blorc.4039 } } }
		if = { limit = { any_owned_province = { province_id = 4217 } } 4217 = { province_event = { id = blorc.4217 } } }
		if = { limit = { any_owned_province = { province_id = 4078 } } 4078 = { province_event = { id = blorc.4078 } } }
		if = { limit = { any_owned_province = { province_id = 4124 } } 4124 = { province_event = { id = blorc.4124 } } }
		if = { limit = { any_owned_province = { province_id = 2914 } } 2914 = { province_event = { id = blorc.2914 } } }
		if = { limit = { any_owned_province = { province_id = 4218 } } 4218 = { province_event = { id = blorc.4218 } } }
		if = { limit = { any_owned_province = { province_id = 4247 } } 4247 = { province_event = { id = blorc.4247 } } }
		if = { limit = { any_owned_province = { province_id = 4265 } } 4265 = { province_event = { id = blorc.4265 } } }
		if = { limit = { any_owned_province = { province_id = 4284 } } 4284 = { province_event = { id = blorc.4284 } } }
		if = { limit = { any_owned_province = { province_id = 4266 } } 4266 = { province_event = { id = blorc.4266 } } }
		if = { limit = { any_owned_province = { province_id = 4350 } } 4350 = { province_event = { id = blorc.4350 } } }
		if = { limit = { any_owned_province = { province_id = 4311 } } 4311 = { province_event = { id = blorc.4311 } } }
		if = { limit = { any_owned_province = { province_id = 4323 } } 4323 = { province_event = { id = blorc.4323 } } }
	}
	if = {
		limit = {
			OR = {
				has_reform = black_demesne_reform
				has_reform = black_acolyte_reform
			}
			NOT = { primary_culture = black_demesner }
		}
		change_primary_culture = black_demesner
	}
}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
	#Anbennar
	#if = {
	#	limit = {
	#		OR = {
	#			region = bengal_region
	#			region = hindusthan_region
	#			region = west_india_region
	#			region = deccan_region
	#			region = coromandel_region
	#		}
	#	}
	#	ROOT = {
	#		owner = {
	#			set_country_flag = the_coin_is_stronger_than_the_sword
	#		}
	#	}
	#}
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	# if = {
	# 	limit = {
	# 		FROM = {
	# 			has_reform = dutch_republic
	# 		}
	# 	}
	# 	ROOT = {
	# 		country_event = {
	# 			id = dutch_republic.31
	# 		}# States General falls under a PU
	# 	}
	# }

	#Anbennar
	##############################################################################################
	#If you are adding an action here to automatically flip new vassals to a custom subject type,
	#It must be done in an event, or the game can crash
	##############################################################################################
	
	if = { #Turning new subjects into Prabhia for the Raja
		limit = {
			ROOT = { has_reform = raja_reform }						# Overlord must be the Raja
			FROM = {
				NOT = { has_reform = oracular_order_reform } 		# Tughayasa has their own thing.
				NOT = { is_subject_of_type = great_daimyo_vassal }	# Do nothing if already correct type.
				NOT = { is_subject_of_type = daimyo_vassal }		# Do nothing if already correct type.
			}
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = rahenraj.5000 } }
	}

	FROM = { update_nsc_level_secondary_effects = yes }

	if = { #Turning vassals into Xiakens when you release or gain new vassals
		limit = {
			ROOT = { has_reform = wulin }
			FROM = { NOT = { is_subject_of_type = daimyo_xiaken_vassal } }
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = one_xia.3000 } }
	}

	if = { #Turning patronates into vassals if overlord not VO. 
		limit = {
			NOT = { tag = Y63 } # new overlord is not VO
			FROM = { is_subject_of_type = patronate }
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = verkalozovar_events.9999 } }
	}
	
	#Dhugajir-Nadimraj subject
	if = {
		limit = {
			ROOT = { tag = R72 } # Dhugajir
			FROM = { tag = R73 } # Nadimraj
		}
		add_country_modifier = {
			name = ghavaanaj_lord_of_the_nadimraj
			duration = -1
		}
	}
	
	#Dhenijanraj events
	if = {
		limit = {
			ROOT = { mission_completed = R51_peridot_king }
			FROM = { tag = I18 }
		}
		ROOT = { country_event = { id = flavor_dhenijanraj.300 } }
		add_opinion = {
			who = FROM
			modifier = dhenijanraj_peridot_opinion_modifier
		}
		reverse_add_opinion = {
			who = FROM
			modifier = dhenijanraj_peridot_opinion_modifier
		}
	}

	country_event = { id = ynn_events.21 }  #Transfer Iosahar of Iosahar to the top overlord
	
	# Verkal Ozovar
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_amekh }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_amekh
				duration = -1
			}
		}
	}
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_jolkin }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_jolkin
				duration = -1
			}
		}
	}
	
	#Command Slave States subject
	if = {
		limit = {
			ROOT = { tag = R62 } # The Command
			FROM = { has_country_flag = command_slave_state_flag }
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = the_command.3000 } }
	}

	# Anbennar CNs gotta follow overlord culture for races. Religion is a bonus.
	FROM = {
		if = {
			limit = { is_colonial_nation = yes }
			export_to_variable  = { variable_name = majorityCulture value = dominant_culture }
			export_to_variable  = { variable_name = overlordCulture value = primary_culture who = ROOT } 
			export_to_variable  = { variable_name = overlordReligion value = religion who = ROOT } 
	
			# only change stuff if culture is different
			if = { limit = { NOT = { is_variable_equal = { which = majorityCulture which = overlordCulture } } }
				change_primary_culture = variable:overlordCulture	# use overlord race
				change_religion = variable:overlordReligion			# use overlord religion
				add_accepted_culture = variable:majorityCulture 	# we accept the majority natives.
			}
			capital_scope = {  # capital uses overlord culture and religion.
				change_culture = FROM
				change_religion = FROM
			}
		}
	}
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	#Anbennar
	FROM = {
		update_nsc_level_secondary_effects = yes

		if = { limit = { has_country_flag = raj_vizier }
			raj_clear_vizier = yes
			ROOT = { country_event = { id = rahenraj.2100 days = 1 } }
		}
		if = { limit = { ROOT = { has_reform = raja_reform } }
			every_owned_province = {
				rahen_clear_court_disaster_province_modifiers = yes
			}
		}

		country_event = { id = flavor_arverynn.47 } #Veykodan Client State cleanup
	}

	if = {
		limit = {
			ROOT = { tag = R73 }
			FROM = { tag = R72 }
		}
		remove_country_modifier = ghavaanaj_lord_of_the_nadimraj
	}

	FROM = {
		if = {
			limit = { is_subject_of_type = ynnic_iosahar }
			country_event = { id = ynn_events.30 } 	#Iosahar is rioting
		}
	}
	
	# Verkal Ozovar
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_amekh }
		FROM = {
			remove_country_modifier = Y63_grand_rune_amekh
		}
	}
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_jolkin }
		FROM = {
			remove_country_modifier = Y63_grand_rune_jolkin
		}
	}
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	on_religion_change_estate_privileges_effect = yes
	if = {
		limit = {
			has_dlc = "Emperor"
			FROM = {
				is_revolutionary = yes
			}
		}
		change_government = republic
		add_government_reform = junior_revolutionary_republic_reform
		set_country_flag = had_revolution
	}
	if = { # Anbennar: changed to ravelian rectorate, our papacy
		limit = {
			tag = Z97
		}
		change_government = theocracy
		change_religion = ravelian
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_country_flag = released_in_1444
	}

	#Anbennar
	country_event = { id = monstrous.100 days = 35 }
	country_event = { id = new_sun_cult.11 days = 1 }

	if = { #Makes vassals of ynnic overlords into iosahar
		limit = {
			overlord = {
				has_country_modifier = ynn_diplo
			}
		}
		grant_independence = yes
		FROM = {
			create_subject = {
				subject_type = ynnic_iosahar
				subject = ROOT
			}
		}
	}

	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}
	
	# Verkal Ozovar
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_amekh }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_amekh
				duration = -1
			}
		}
	}
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_jolkin }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_jolkin
				duration = -1
			}
		}
	}
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {
}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {
	FROM = {
		remove_province_modifier = religious_zeal_at_conv
		add_permanent_province_modifier = {
			name = expelled_minority_home
			duration = 7300
		}
	}
}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	if = {
		limit = {
			has_faction = pr_buccaneers
		}
		add_faction_influence = {
			faction = pr_buccaneers
			influence = 1
		}
	}
	if = {
		limit = {
			has_government_attribute = raiding_increases_pp
		}
		add_power_projection = {
			type = high_sea_power_projection
			amount = 1
		}
	}
	#Anbennar: we don't have this mission
	# if = {
		# limit = {
			# has_mission = dan_raid_the_north_sea
			# NOT = { mission_completed = dan_raid_the_north_sea }
		# }
		# change_variable = {
			# which = num_of_raided_coasts
			# value = 1
		# }
	# }

	#Anbennar
	if = {
		limit = {
			religion = xhazobkult
		}
		change_variable = {
			which = total_gathered_sacrifices
			value = 1
		}
	}
	if = {
		limit = {
			has_country_modifier = pirate_republic_shared_loot
			has_reform = pirate_republic_reform
		}
		add_republican_tradition = 0.25
	}
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
	FROM = {
		set_country_flag = captured_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.2 }
		set_country_flag = trophy_hunter_flag
	}
	FROM = {
		country_event = { id = flagship_events.1 }
	}
	FROM = {
		if = {
			limit = { has_country_modifier = hsa_pride_eagle_of_the_fleet_modifier }
			remove_country_modifier = hsa_pride_eagle_of_the_fleet_modifier
		}
	}

	#Anbennar
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 5 }
	}
	if = {
		limit = { FROM = { is_subject_of_type = acolyte_dominion } }
		FROM = { subtract_variable = { aInfluence = 5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
	FROM = {
		set_country_flag = sunk_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.4 }
	}
	FROM = {
		country_event = { id = flagship_events.3 }
	}
	FROM = {
		if = {
			limit = { has_country_modifier = hsa_pride_eagle_of_the_fleet_modifier }
			remove_country_modifier = hsa_pride_eagle_of_the_fleet_modifier
		}
	}

	#Anbennar
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 5 }
	}
	if = {
		limit = { FROM = { is_subject_of_type = acolyte_dominion } }
		FROM = { subtract_variable = { aInfluence = 5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# this = Released country, FROM = Releasing country
on_country_released = {
	if = { # Anbennar: changed to ravelian rectorate, our papacy
		limit = {
			tag = Z97
		}
		change_government = theocracy
		change_religion = ravelian	#changed this from catholic
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			FROM = { has_reform = religious_permanent_revolution_reform }
			NOT = { tag = PAP }
		}
		change_religion = FROM
		adopt_reform_progress = FROM
		add_country_modifier = {
			name = global_holy_war_released_modifier
			duration = 3650
			hidden = yes
		}
		capital_scope = {
			change_religion = FROM
		}
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_country_flag = released_in_1444
	}

	#Anbennar
	#country_event = {
	#	id = allclan.895
	#	days = 1
	#}
	if = {
		limit = {
			capital_scope = {
				region = xianjie_region
				NOT = {
					area = sarisung_area
				}
			}
			FROM = {
				has_reform = wulin
			}
		}
		add_government_reform = xiaken
	}
	if = {
		limit = {
			capital_scope = {
				region = xianjie_region
				NOT = {
					area = sarisung_area
				}
			}
			FROM = {
				NOT = {
					tag = R62
					has_reform = wulin
				}
			}
		}
		add_government_reform = indep_xiaken
	}
	if = {
		limit = {
			THIS = {
				culture = cave_goblin
			}
			has_global_flag = cave_goblin_modernity
		}
		country_event = {
			id = cavegoblinflavor.2 #cave goblin modernity for cave goblins not alive when the global event fired
		}
	}
	country_event = {
		id = anbennar_setup.19
	}
	country_event = { id = monstrous.100 days = 35 }

	if = {
		limit = { NOT = { has_dlc = "Emperor" } }
		if = {
			limit = { religion = ravelian }
			if = {
				limit = { has_global_flag = first_council_harsh }
				add_country_modifier = {
					name = first_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = first_council_conciliatory }
				add_country_modifier = {
					name = first_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = second_council_harsh }
				add_country_modifier = {
					name = second_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = second_council_conciliatory }
				add_country_modifier = {
					name = second_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = third_council_harsh }
				add_country_modifier = {
					name = third_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = third_council_conciliatory }
				add_country_modifier = {
					name = third_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = fourth_council_harsh }
				add_country_modifier = {
					name = fourth_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = fourth_council_conciliatory }
				add_country_modifier = {
					name = fourth_council_conciliatory
					duration = -1
				}
			}
		}
	}

	ynnic_setup_effect = yes

	country_event = { id = new_sun_cult.11 days = 1 }

	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}

}

# ROOT = province, FROM = country
on_trade_good_changed = {
	on_trade_good_changed_estate_privileges_effect = yes
	on_trade_good_changed_government_effect = yes
	if = {
		limit = {
			OR = {
				has_province_modifier = wine_bonus_prod
				has_province_modifier = grain_bonus_prod
				has_province_modifier = artifice_ageifier_bonus
				has_province_modifier = artifice_growthbeans_bonus
				has_province_modifier = artifice_pearl_cultivator_bonus
				has_province_modifier = wine_lord_wine
				has_province_modifier = eordan_expedition_site
				has_province_modifier = damestear_rich_deposit
				has_province_modifier = huge_damestear
				has_province_modifier = big_fungi
				has_province_modifier = dwindling_resources
				has_province_modifier = orlghelovar_glasslord_glass
				has_province_modifier = orlghelovar_reformed_glassworkers
				has_province_modifier = orlghelovar_glass_value
			}
		}
		remove_province_modifier = wine_bonus_prod
		remove_province_modifier = grain_bonus_prod
		remove_province_modifier = artifice_ageifier_bonus
		remove_province_modifier = artifice_growthbeans_bonus
		remove_province_modifier = artifice_pearl_cultivator_bonus
		remove_province_modifier = wine_lord_wine
		remove_province_modifier = eordan_expedition_site
		remove_province_modifier = damestear_rich_deposit
		remove_province_modifier = huge_damestear
		remove_province_modifier = big_fungi
		remove_province_modifier = dwindling_resources
		remove_province_modifier = orlghelovar_glasslord_glass
		remove_province_modifier = orlghelovar_reformed_glassworkers
		remove_province_modifier = orlghelovar_glass_value
	}
	if = {
		limit = { 
			has_advanced_hold_infrastructure = yes
			NOT = {
				province_id = 2914 #verkal gulan
				province_id = 4236 #mithradhum
			}
		}
		clr_hold_advanced_infrastructure = yes
	}
	hidden_effect = {
		if = {
			limit = {
				trade_goods = wine
				FROM = { has_reform = monastic_breweries_reform }
			}
			remove_province_modifier = grain_bonus_prod
			add_province_modifier = {
				name = wine_bonus_prod
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = wine
				OR = {
					FROM = { has_reform = wine_lord_reform }
					FROM = { has_reform = roilsard_elective }
					FROM = { has_reform = wineport_merchants }
				}
			}
			add_province_modifier = {
				name = wine_lord_wine
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = wine
				owner = {
					has_estate_privilege = artifice_invention_wine_ageifier
				}
			}
			add_province_modifier = {
				name = artifice_ageifier_bonus
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = artifice_invention_growth_beans
				}
				OR = {
					trade_goods = grain
					trade_goods = cocoa
					trade_goods = sugar
					trade_goods = wine
					trade_goods = tobacco
					trade_goods = spices
					trade_goods = incense
					trade_goods = tea
					trade_goods = coffee
					trade_goods = fungi
					trade_goods = serpentbloom
				}
			}
			add_province_modifier = {
				name = artifice_growthbeans_bonus
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = gems
				owner = {
					has_estate_privilege = artifice_invention_pearl_cultivators
				}
			}
			add_province_modifier = {
				name = artifice_pearl_cultivator_bonus
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = grain
				OR = {
					FROM = { has_reform = monastic_breweries_reform }
					FROM = { has_reform = wine_lord_reform }
				}
			}
			remove_province_modifier = wine_bonus_prod
			add_province_modifier = {
				name = grain_bonus_prod
				duration = -1
				hidden = yes
			}
		}
		
		#honderaak incident gnoll minorities for colonies
		if = {
			limit = {
				is_city = no
				owner = { is_part_of_hre = yes has_country_modifier = honderaak_incident_colonization NOT = { culture_group = gnollish } }
			}
			random = {
				chance = 50
				province_event = { id = flavor_honderaak.6 days = 30 random = 60 }
			}
		}
		#Orlghelovar
		if = {
			limit = {
				trade_goods = glass
				owner = { tag = I12 }
			}
			if = {
				limit = {
					owner = {
						OR = {
							has_reform = orlghelovar_glasslords
							has_reform = orlghelovar_science
						}
					}
					NOT = { has_province_modifier = orlghelovar_glasslord_glass }
				}
				add_province_modifier = { name = orlghelovar_glasslord_glass duration = -1 hidden = yes }
			}
			if = {
				limit = {
					owner = { has_reform = orlghelovar_glass_worker_reform }
					NOT = { has_province_modifier = orlghelovar_reformed_glassworkers }
				}
				add_province_modifier = { name = orlghelovar_reformed_glassworkers duration = -1 hidden = yes }
			}
			if = {
				limit = {
					owner = { has_country_modifier = orlghelovar_sapphire_glass }
					NOT = { has_province_modifier = orlghelovar_glass_value }
				}
				add_province_modifier = { name = orlghelovar_glass_value duration = -1 hidden = yes }
			}
		}
    }
}

# this = country
on_loan_repaid = {
	on_loan_repaid_estate_privileges_effect = yes
}

# this = country
on_rebels_break_country = {
	add_country_modifier = {
		name = just_lost_to_rebels
		duration = 10
		hidden = yes
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		divide_variable = { aInfluence = 2 }
	}
	if = { #Aftermath of the War
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
					value = 1
					region = shamakhad_region
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.14 days = 1 } } #Tiltaghar
	}
}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_adm_advisor
		}
		set_country_flag = just_fired_adm_advisor
		remove_advisor_by_category_no_action = ADM
	}
}

# this = country
on_pre_dip_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_dip_advisor
		}
		set_country_flag = just_fired_dip_advisor
		remove_advisor_by_category_no_action = DIP
	}
}

# this = country
on_pre_mil_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_mil_advisor
		}
		set_country_flag = just_fired_mil_advisor
		remove_advisor_by_category_no_action = MIL
	}
}

# this = country
on_post_adm_advisor_fired = {

}

# this = country
on_post_dip_advisor_fired = {

}

# this = country
on_post_mil_advisor_fired = {

}

# this = new client state, from = parent country
on_create_client_state = {
	country_event = { id = racial_modifiers.6 days = 1 }	#Racial mil change if unmatching
	country_event = {
		id = anbennar_setup.19
	}

}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
	if = {
		limit = { has_reform = junior_revolutionary_republic_reform }
		add_government_reform = revolutionary_republic_reform
	}
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}

# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
	remove_named_unrest = estate_land_seized
	clr_province_flag = has_estate_unrest_flag

	# Re-add their influence to Castonath if gets conquered from nation with the estate
	if = {
		limit = {
			OR = {
				province_id = 831
				province_id = 832
				province_id = 833
			}
			OR = {
				FROM = { has_estate = estate_castonath_patricians }
				FROM = { has_country_flag = castonath_patricians_curtailing_relationship }
				owner = { has_country_flag = castonath_patricians_curtailing_relationship }
				owner = { has_estate = estate_castonath_patricians }
			}
		}
		if = {
			limit = {
				owner = { has_estate = estate_castonath_patricians }
			}
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
		}
		else_if = {
			limit = {
				owner = { has_country_flag = castonath_patricians_curtailing_relationship }
			}
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			add_province_modifier = {
				name = castonath_patricians_curtailing
				duration = 3650
			}
		}
		if = {
			limit = { FROM = { has_country_flag = castonath_patricians_curtailing_relationship } }
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_some
				duration = -1
			}
		}
		if = {
			limit = {
				FROM = {
					estate_influence = {
						estate = estate_castonath_patricians
						influence = 80
					}
				}
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_full
				duration = -1
			}
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_considerable
			remove_province_modifier = castonath_patrician_influence_some
		}
		else_if = {
			limit = {
				FROM = {
					estate_influence = {
						estate = estate_castonath_patricians
						influence = 60
					}
				}
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_significant
				duration = -1
			}
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_considerable
			remove_province_modifier = castonath_patrician_influence_some
		}
		else_if = {
			limit = {
				FROM = {
					estate_influence = {
						estate = estate_castonath_patricians
						influence = 40
					}
				}
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_considerable
				duration = -1
			}
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_some
		}
		else = {
			if = {
				limit = { owner = { NOT = { tag = B61 } } }
				add_permanent_province_modifier = {
					name = castonath_patrician_influence_some
					duration = -1
				}
			}
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_considerable
		}
	}
	if = {
		limit = { has_province_flag = expedition_in_progress }
		expedition_dead_effect = yes
		clr_province_flag = generated_party_stats_@FROM
		clr_province_flag = sent_expedition_@FROM
	}

	if = {
		limit = {
			owner = { has_country_flag = siadan_harimari_autonomy }
			culture_is_harimari = yes
		}
		add_province_modifier = {
			name = siadan_harimari_autonomy
			duration = -1
		}
	}

	#Bianfang removing slaves
	if = {
		limit = {
			owner = { has_country_flag = bianfang_abolished_slavery }
			trade_goods = slaves
		}
		change_trade_goods = unknown
	}
}

on_country_creation = {
	if = {
		limit = {
			tag = Z97
			OR = {
				NOT = {
					religion = ravelian
				}
				NOT = {
					has_reform = papacy_reform
				}
				NOT = {
					government = theocracy
				}
			}
		}
		change_religion = ravelian
		change_government = theocracy
		add_government_reform = papacy_reform
	}

	if = {
		limit = {
			OR = {
				has_reform = adventurer_reform
				has_reform = dwarovar_warband
				has_reform = roaming_horde
			}
			ai = yes
		}
		if = {
			limit = { capital_scope = { continent = serpentspine } }
			add_country_modifier = {
				name = dont_colonize_but_migrate
				duration = 3650
			}
		}
		else = {
			add_country_modifier = {
				name = dont_colonize_but_migrate
				duration = 365
				hidden = yes
			}
		}
	}
	country_event = {
		id = anbennar_setup.19
	}

	country_event = { id = new_sun_cult.11 days = 1 }

	if = { #Makes Beikdugang created subjects (mainly colonies) tolerate ruinborn more.
		limit = {
			is_subject_of = Y15
			Y15 = { mission_completed = Y15_solstice }
		}
		largest_increase_of_ruinborn_tolerance_effect = yes
	}

	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}

}

# ROOT = country, FROM = country they fled from
on_cossacks_receive_serfs = {
}

on_federation_leader_change = {
	if = {
		limit = { tag = FROM }
		disband_federation = THIS
	}
	else = {
		# New strongest member becomes the new federation leader
		set_federation_leader = THIS
	}
}

#FROM = country pillaged, ROOT = country doing the pillaging
on_pillaged_capital = {
	slave_raid_pillage_capital_effect = yes
}

#FROM = country dev was transferred from, ROOT = country doing the transferring
on_transfer_development = {
}

on_colonial_type_change = {
	clr_country_flag = encourage_cash_crops_flag
}

on_estate_led_regency = {
	if = {
		limit = {
			has_government_attribute = improved_nobles_regency
			OR = {
				has_estate = estate_nobles
				AND = {
					NOT = { has_estate = estate_nobles }
					OR = {
						has_estate = estate_maratha
						has_estate = estate_rajput
						#Anbennar
						has_estate = estate_uppercastes
					}
				}
			}
		}
		add_ruler_modifier = {
			name = empowered_regency_modifier
			duration = -1
		}
		change_adm = 1
		change_dip = 1
		change_mil = 1
	}
}

on_estate_led_regency_surpassed = {
	if = {
		limit = {
			num_of_powerful_estates = 1
			has_estate_led_regency = {
				estate = any
			}
			NOT = {
				estate_led_regency_influence = 70
			}
			OR = {
				AND = {
					has_estate_led_regency = {
						estate = estate_burghers
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_church
							modifier = REFUSED_REGENCY
						}
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_nobles
							modifier = REFUSED_REGENCY
						}
					}
				}
				AND = {
					has_estate_led_regency = {
						estate = estate_church
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_burghers
							modifier = REFUSED_REGENCY
						}
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_nobles
							modifier = REFUSED_REGENCY
						}
					}
				}
				AND = {
					has_estate_led_regency = {
						estate = estate_nobles
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_burghers
							modifier = REFUSED_REGENCY
						}
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_church
							modifier = REFUSED_REGENCY
						}
					}
				}
			}
		}
		country_event = { id = estate_regency_events.1 }
	}
}

on_extended_regency = {
	random_events = {
		100 = extended_regency_events.4
		100 = extended_regency_events.5
		100 = extended_regency_events.6

		300 = 0
	}
}

on_estate_removed = {
	if = {
		limit = {
			has_country_modifier = dhimmi_building_restrictions
			NOT = {
				has_estate = estate_dhimmi
			}
		}
		remove_country_modifier = dhimmi_building_restrictions
	}
	if = {
		limit = {
			has_country_modifier = swe_debt_with_the_clergy
			NOT = { has_estate = estate_church }
		}
		remove_country_modifier = swe_debt_with_the_clergy
	}
	if = {
		limit = {
			has_country_modifier = swe_debt_with_the_burghers
			NOT = { has_estate = estate_burghers }
		}
		remove_country_modifier = swe_debt_with_the_burghers
	}
	if = {
		limit = {
			has_country_modifier = swe_debt_with_the_nobles
			NOT = { has_estate = estate_nobles }
		}
		remove_country_modifier = swe_debt_with_the_nobles
	}
}

on_colonist_boosting_colony = {
	hidden_effect = {
		if = {
			limit = {
				OR = {
					religion = noreligion
					#test if colonists outnumber natives
					variable_arithmetic_trigger = {
						custom_tooltip = colonysize_is_larger_than_nativesize_tt
						export_to_variable = {
							which = vab_colonysize
							value = trigger_value:colonysize
						}
						export_to_variable = {
							which = vab_nativesize
							value = trigger_value:native_size
						}
						multiply_variable = {
							which = vab_nativesize
							value = 100
						}
						check_variable = {
							which = vab_colonysize
							which = vab_nativesize
						}
					}
					is_in_capital_area = yes
					continent = north_america
					continent = south_america
					continent = new_world
					NOT = {
						OR = {
							has_dlc = "Dharma"
							has_dlc = "Wealth of Nations"
						}
					}
				}
			}
			change_religion = FROM
		}
		if = {
			limit = {
				OR = {
					culture = noculture
					#test if colonists outnumber natives
					variable_arithmetic_trigger = {
						custom_tooltip = colonysize_is_larger_than_nativesize_tt
						export_to_variable = {
							which = vab_colonysize
							value = trigger_value:colonysize
						}
						export_to_variable = {
							which = vab_nativesize
							value = trigger_value:native_size
						}
						multiply_variable = {
							which = vab_nativesize
							value = 100
						}
						check_variable = {
							which = vab_colonysize
							which = vab_nativesize
						}
					}
					is_in_capital_area = yes
					continent = north_america
					continent = south_america
					continent = new_world
					NOT = {
						OR = {
							has_dlc = "Dharma"
							has_dlc = "Wealth of Nations"
						}
					}
				}
			}
			change_culture = FROM
			change_original_culture = FROM
		}
		if = {
			limit = { NOT = { native_size = 1 } } # If there are few natives
			remove_racial_majority = yes
		}
	}

	# Redundant with 1.32 above on_action, left here in case the above does not work
	# if = {
		# limit = {
			# culture = plain_centaur
			# owner = { culture_group = triunic }
			# is_city = no
		# }
		# change_culture = owner
		# change_religion = owner
	# }

	hidden_effect = {
		if = {
			limit = {
				owner = { has_country_flag = rezankand_jungle_research }
				NOT = { has_province_modifier = rezankand_jungle_specialist }
				has_terrain = jungle
			}
			add_province_modifier = {
				name = rezankand_jungle_specialist
				duration = 3650
			}
		}
	}

	hidden_effect = {
		if = {
			limit = {
				owner = { has_country_flag = khug_manifest_destiny_flag }
				NOT = { has_province_modifier = khug_manifest_destiny }
				region = northern_pass_region
			}
			add_province_modifier = {
				name = khug_manifest_destiny
				duration = 3650
			}
		}
	}
}

#ROOT = converted country, FROM = country which force converts ROOT, on_action gets called on Force religion peace and Enforce Religion subject interaction
on_force_conversion = {
	#if = {	#Commented out for now because Catholicism has received a lot of buffs already.
	#	limit = {
	#		FROM = { religion = catholic }
	#	}
	#	if = {
	#		limit = { ROOT = { government_rank = 3 } }
	#		FROM = { add_papal_influence = 20 }
	#	}
	#	else_if = {
	#		limit = { ROOT = { government_rank = 2 } }
	#		FROM = { add_papal_influence = 10 }
	#	}
	#	else = {
	#		FROM = { add_papal_influence = 5 }
	#	}
	#}
	FROM = {
		if = {
			limit = { has_country_modifier = liv_protector_of_the_catholics }
			add_papal_influence = 25
		}
	}
}

on_institution_embracement = {
	if = {
		limit = {
			has_government_attribute = monarch_power_on_institutions
		}
		add_adm_power = 100
		add_dip_power = 100
		add_mil_power = 100
	}
	if = {
		limit = {
			has_estate = estate_dragon_command
			has_institution = manufactories
		}
		set_estate_privilege = estate_dragon_command_ninyu_kikun_sunyanin_artificers
	}
}

on_national_focus_change = {}

#ROOT = new capital province, FROM = old capital province
on_capital_moved = {
	if = { #removes/sets dev cost bonus on capital state for government reforms
		limit = {
			owner = {
				has_government_attribute = lower_dev_cost_in_capital_state
			}
			NOT = { has_province_modifier = lower_dev_cost_in_capital_state_modifier }
		}
		FROM = {
			area = {
				remove_province_modifier = lower_dev_cost_in_capital_state_modifier
			}
		}
		area = {
			add_province_modifier = {
				name = lower_dev_cost_in_capital_state_modifier
				duration = -1
				hidden = yes
			}
		}
	}

	# Anbennar BLORC plunder camps should never exist in capitals, replaces blorc.126 event
	remove_province_modifier = blorc_plunder_camp
}

#ROOT = province that was expanded in, FROM = country that did it
on_expanded_infrastructure = {
	change_variable = { infrastructure_level = 1 }
}

#ROOT = province that was centralized in
on_centralized_state = {
	if = {
		limit = {
			owner = { has_government_attribute = centralize_state_no_reform_cost }
		}
		owner = {
			add_adm_power = 50
			change_government_reform_progress = 50
		}
	}
	else_if = {
		limit = {
			owner = { has_government_attribute = centralize_state_half_refund }
		}
		owner = {
			add_adm_power = 25
			change_government_reform_progress = 25
		}
	}
	if = {
		limit = {
			owner = { has_government_attribute = centralize_state_development }
		}
		area = {
			limit = {
				owned_by = ROOT
			}
			random_list = {
				1 = { add_base_tax = 1 }
				1 = { add_base_production = 1 }
				1 = { add_base_manpower = 1 }
			}
		}
	}
}
#ROOT = country
monarch_on_shipwreck = {
}

heir_on_shipwreck = {
}

consort_on_shipwreck = {
}

#ROOT = country
on_defender_of_faith_loss = {
	clr_country_flag = claimed_defender_of_faith_flag
	remove_country_modifier = liv_the_livonian_defender
	remove_country_modifier = gov_improved_defender_of_faith_mod
	remove_country_modifier = pol_shield_against_catholicism_modifier
}

on_defender_of_faith_claim = {
	set_country_flag = claimed_defender_of_faith_flag
	if = {
		limit = {
			religion = catholic
			has_country_flag = liv_proclaim_defender_of_faith
			NOT = { has_country_modifier = liv_the_livonian_defender }
		}
		add_country_modifier = {
			name = liv_the_livonian_defender
			duration = -1
			desc = liv_the_livonian_defender_tt
		}
	}
	if = {
		limit = {
			has_government_attribute = improved_defender_of_faith
		}
		add_country_modifier = {
			name = gov_improved_defender_of_faith_mod
			duration = -1
		}
	}
}

on_hre_dismantled = {
}

on_new_age = {
}

#ROOT = province
on_adm_exploited = {
	if = {
		limit = { owner = { has_government_attribute = may_not_reduce_tax_on_exploitation } }
		random = {
			chance = 50
			add_base_tax = 1
		}
	}
	if = {
		limit = { owner = { has_government_attribute = may_not_reduce_tax_on_own_exploitation culture_group = ROOT } }
		random = {
			chance = 25
			add_base_tax = 1
		}
	}
	if = {
		limit = { owner = { has_government_attribute = may_not_reduce_tax_on_foreign_exploitation NOT = { culture_group = ROOT } } }
		random = {
			chance = 50
			add_base_tax = 1
		}
	}
}

on_dip_exploited = {
}

on_mil_exploited = {
}

on_raze = {
}

on_concentrate_development = {
}

		
