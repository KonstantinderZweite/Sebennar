
# These are the effects used to lower/increase different tolerances
# These are here to make it easier for the devs to mod events (also allows smaller adjustment of event effects)
# All of these either increase or decrease the current tolerance by 5, 10, 15 or 20.

reset_racial_military_via_administration = {
	if = {
		limit = {
			has_country_modifier = orcish_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = orcish_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = {
						continent = serpentspine
					}
					primary_culture = black_orc
					AND = {
						accepted_culture = black_orc
						NOT = { culture_group = orcish }
					}
				}
			}
			change_unit_type = tech_black_orcish
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = {
						continent = asia
						NOT = { superregion = forbidden_lands_superregion }
					}
					primary_culture = brown_orc
					AND = {
						accepted_culture = brown_orc
						NOT = { culture_group = orcish }
					}
				}
			}
			change_unit_type = tech_east_orcish
		}
		else = {
			change_unit_type = tech_orcish
		}
	}
	else_if = {
		limit = {
			has_country_modifier = human_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = human_military
			duration = -1  
		}
		if = {
			limit = {
				capital_scope = { superregion = bulwar_superregion }
			}
			change_unit_type = tech_bulwari
		}
		else_if = {
			limit = {
				capital_scope = { superregion = salahad_superregion }
			}
			change_unit_type = tech_salahadesi
		}
		else_if = {
			limit = {
				capital_scope = { superregion = rahen_superregion }
			}
			change_unit_type = tech_raheni
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
				}
			}
			change_unit_type = tech_halessi
		}
		else_if = {
			limit = {
				capital_scope = { superregion = north_haless_superregion }
			}
			change_unit_type = tech_shuvuush
		}
		else_if = {
			limit = {
				capital_scope = { superregion = forbidden_lands_superregion }
			}
			change_unit_type = tech_islanders
		}
		else_if = {
			limit = {
				capital_scope = { superregion = gerudia_superregion }
			}
			change_unit_type = tech_gerudian
		}
		else = {
			change_unit_type = tech_cannorian
		}
	}
	else_if = {
		limit = {
			has_country_modifier = elven_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = elven_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = deepwoods_superregion }
					primary_culture = wood_elf
					AND = {
						accepted_culture = wood_elf
						NOT = { culture_group = elven }
					}
				}
			}
			change_unit_type = tech_wood_elf
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = { continent = asia }
					capital_scope = { continent = africa }
					AND = {
						OR = {
							capital_scope = { continent = north_america }
							capital_scope = { continent = south_america }
						}
						religion_group = bulwari
					}
					primary_culture = sun_elf
					primary_culture = dawn_elf
					primary_culture = desert_elf
					primary_culture = sunrise_elf
					AND = {
						accepted_culture = sun_elf
						NOT = { culture_group = elven }
					}
					AND = {
						accepted_culture = dawn_elf
						NOT = { culture_group = elven }
					}
					AND = {
						accepted_culture = desert_elf
						NOT = { culture_group = elven }
					}
					AND = {
						accepted_culture = sunrise_elf
						NOT = { culture_group = elven }
					}
				}
			}
			change_unit_type = tech_east_elven
		}
		else = {
			change_unit_type = tech_elven
		}
	}
	else_if = {
		limit = {
			has_country_modifier = half_elven_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = half_elven_military
			duration = -1  
		}
		change_unit_type = tech_cannorian
	}
	
	else_if = {
		limit = {
			has_country_modifier = half_orcish_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = half_orcish_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = gerudia_superregion }
					primary_culture = grombar_half_orc
					primary_culture = grombar_orc
					primary_culture = gray_orc
					AND = {
						accepted_culture = grombar_half_orc
						NOT = { culture_is_half_orcish = yes }
					}
					AND = {
						accepted_culture = grombar_orc
						NOT = { culture_is_half_orcish = yes }
					}
					AND = {
						accepted_culture = gray_orc
						NOT = { culture_is_half_orcish = yes }
					}
				}
			}
			change_unit_type = tech_gerudian
		}
		else = {
			change_unit_type = tech_cannorian
		}
	}
	else_if = {
		limit = {
			has_country_modifier = troll_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = troll_military
			duration = -1  
		}
		change_unit_type = tech_troll	#may need to be changed to troll maybe
	}
	else_if = {
		limit = {
			has_country_modifier = gnollish_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = gnollish_military
			duration = -1  
		}
		change_unit_type = tech_gnollish
		if = {
			limit = { is_tribal = no }
			set_country_flag = gnoll_reformed_mil_flag
		}
	}
	else_if = {
		limit = {
			has_country_modifier = goblin_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = goblin_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = { continent = serpentspine }
					primary_culture = cave_goblin
					primary_culture = undergrowth_goblin
					AND = {
						accepted_culture = cave_goblin
						NOT = { culture_group = goblin }
					}
					AND = {
						accepted_culture = undergrowth_goblin
						NOT = { culture_group = goblin }
					}
				}
			}
			change_unit_type = tech_cave_goblin
		}
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = bulwar_superregion }
					primary_culture = exodus_goblin
					AND = {
						accepted_culture = exodus_goblin
						NOT = { culture_group = goblin }
					}
				}
			}
			change_unit_type = tech_exodus_goblin
		}
		else = {
			change_unit_type = tech_goblin
		}
	}
	else_if = {
		limit = {
			has_country_modifier = gnomish_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = gnomish_military
			duration = -1  
		}
		change_unit_type = tech_gnomish
	}
	else_if = {
		limit = {
			has_country_modifier = dwarven_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = dwarven_military
			duration = -1  
		}
		change_unit_type = tech_dwarven
	}
	else_if = {
		limit = {
			has_country_modifier = kobold_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = kobold_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					capital_scope = { superregion = rahen_superregion }
					primary_culture = goldscale_kobold
					AND = {
						accepted_culture = goldscale_kobold
						NOT = { culture_group = kobold }
					}
				}
			}
			change_unit_type = tech_east_kobold
		}
		else = {
			change_unit_type = tech_kobold
		}
	}
	else_if = {
		limit = {
			has_country_modifier = ruinborn_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = ruinborn_military
			duration = -1  
		}
		if = {
			limit = {
				capital_scope = { superregion = ynn_superregion }
			}
			change_unit_type = tech_ynnic
		}
		else_if = {
			limit = {
				capital_scope = { superregion = eordand_superregion }
			}
			change_unit_type = tech_eordand
		}
		else_if = {
			limit = {
				capital_scope = { superregion = kheionai_superregion }
			}
			change_unit_type = tech_kheionai
		}
		else_if = {
			limit = {
				capital_scope = { superregion = greater_taychend_superregion }
			}
			change_unit_type = tech_taychendi
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = { superregion = north_aelantir_superregion }
					capital_scope = { superregion = ruined_sea_superregion }
					capital_scope = { superregion = torn_sea_superregion }
				}
			}
			change_unit_type = tech_north_aelantiri
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = { superregion = south_aelantir_superregion }
					capital_scope = { superregion = effelai_superregion }
				}
			}
			change_unit_type = tech_south_aelantiri
		}
		else = {
			change_unit_type = tech_north_aelantiri
		}
	}
	else_if = {
		limit = {
			has_country_modifier = harpy_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = harpy_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					primary_culture = feng_harpy
					AND = {
						accepted_culture = feng_harpy
						NOT = { culture_group = harpy }
					}
				}
			}
			change_unit_type = tech_east_harpy
		}
		else = {
			change_unit_type = tech_harpy
		}
	}
	else_if = {
		limit = {
			has_country_modifier = halfling_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = halfling_military
			duration = -1  
		}
		change_unit_type = tech_halfling
	}
	else_if = {
		limit = {
			has_country_modifier = ogre_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = ogre_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					capital_scope = { superregion = rahen_superregion }
					primary_culture = horned_ogre
					AND = {
						accepted_culture = horned_ogre
						NOT = { culture_group = ogre }
					}
				}
			}
			change_unit_type = tech_eastern_ogre 
		}
		else = {
			change_unit_type = tech_ogre	#may need custom one
		}
	}
	else_if = {
		limit = {
			has_country_modifier = centaur_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = centaur_military
			duration = -1  
		}
		change_unit_type = tech_centaur
	}
	else_if = {
		limit = {
			has_country_modifier = harimari_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = harimari_military
			duration = -1  
		}
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					primary_culture = east_harimari
					AND = {
						accepted_culture = east_harimari
						NOT = { culture_group = harimari }
					}
				}
			}
			change_unit_type = tech_east_harimari
		}
		else = {
			change_unit_type = tech_harimari
		}
	}
	else_if = {
		limit = {
			has_country_modifier = hobgoblin_administration
		}
		add_country_modifier = { 
			name = restructuring_military
			duration = 3650
		}
		add_country_modifier = { 
			name = hobgoblin_military
			duration = -1  
		}
		change_unit_type = tech_hobgoblin
	}
}

clear_racial_administration = {
	remove_country_modifier = elven_administration
	remove_country_modifier = dwarven_administration
	remove_country_modifier = gnomish_administration
	remove_country_modifier = half_orcish_administration
	remove_country_modifier = half_elven_administration
	remove_country_modifier = kobold_administration
	remove_country_modifier = troll_administration
	remove_country_modifier = halfling_administration
	remove_country_modifier = harpy_administration
	remove_country_modifier = human_administration
	remove_country_modifier = orcish_administration
	remove_country_modifier = goblin_administration
	remove_country_modifier = gnollish_administration
	remove_country_modifier = ruinborn_administration
	remove_country_modifier = centaur_administration
	remove_country_modifier = harimari_administration
	remove_country_modifier = ogre_administration
	remove_country_modifier = hobgoblin_administration
}

clear_racial_military = {
	remove_country_modifier = elven_military
	remove_country_modifier = dwarven_military
	remove_country_modifier = gnomish_military
	remove_country_modifier = half_orcish_military
	remove_country_modifier = half_elven_military
	remove_country_modifier = kobold_military
	remove_country_modifier = troll_military
	remove_country_modifier = halfling_military
	remove_country_modifier = harpy_military
	remove_country_modifier = human_military
	remove_country_modifier = orcish_military
	remove_country_modifier = goblin_military
	remove_country_modifier = gnollish_military
	remove_country_modifier = ruinborn_military
	remove_country_modifier = centaur_military
	remove_country_modifier = harimari_military
	remove_country_modifier = ogre_military
	remove_country_modifier = hobgoblin_military
	
	# Disband your undead army
	if = {
		limit = { has_country_modifier = undead_military }
		custom_tooltip = tooltip_undead_army_destroy_all_armies
			
		hidden_effect = {
			every_owned_province = {
				kill_units = {
					who = owner
					type = infantry
				}
				kill_units = {
					who = owner
					type = cavalry
				}
			}
		}
		remove_country_modifier = undead_military
	}
}

clear_racial_pop_migration_flags = {
	clr_country_flag = racial_pop_migrate_adjacent
	clr_country_flag = racial_pop_migrate_within_country
	clr_country_flag = racial_pop_migrate_outside_country
	
	clr_country_flag = racial_pop_migrate_colony
	
}

clear_racial_pop_tolerance_chance_flags = {
	clr_country_flag = racial_pop_small_increase
	clr_country_flag = racial_pop_medium_increase
	clr_country_flag = racial_pop_large_increase
	clr_country_flag = racial_pop_largest_increase
	
	clr_country_flag = racial_pop_small_decrease
	clr_country_flag = racial_pop_medium_decrease
	clr_country_flag = racial_pop_large_decrease
	clr_country_flag = racial_pop_largest_decrease
}

save_primary_culture = {
	ROOT = {
		export_to_variable = {
			value = primary_culture
			which = my_primary_culture
			#who = ROOT
		}
	}
}

lock_racial_admin = {
	custom_tooltip = locked_racial_administration_tt
	hidden_effect = {
		save_primary_culture = yes
		set_country_flag = locked_racial_administration
	}
}

# Dwarfs
small_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = small_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = dwarven_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

medium_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = medium_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = dwarven_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

large_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = large_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = dwarven_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

largest_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = largest_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = dwarven_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

small_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = small_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

medium_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = medium_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

large_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = large_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

largest_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = largest_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

add_dwarven_minority_size_effect = {
	custom_tooltip = add_dwarven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_small
			}
			remove_province_modifier = dwarven_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = dwarven_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_small
			}
			remove_province_modifier = dwarven_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = dwarven_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_small
			}
			remove_province_modifier = dwarven_minority_integrated_small
			add_permanent_province_modifier = { 
				name = dwarven_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_dwarven_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_dwarven_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = dwarven_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_dwarven_minority_size_effect = {
	custom_tooltip = remove_dwarven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_small
			}
			remove_province_modifier = dwarven_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_large
			}
			remove_province_modifier = dwarven_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = dwarven_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_small
			}
			remove_province_modifier = dwarven_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_large
			}
			remove_province_modifier = dwarven_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = dwarven_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_small
			}
			remove_province_modifier = dwarven_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_large
			}
			remove_province_modifier = dwarven_minority_integrated_large
			add_permanent_province_modifier = { 
				name = dwarven_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Gnomes
small_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = small_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = gnomish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

medium_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = medium_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = gnomish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

large_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = large_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = gnomish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

largest_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = largest_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = gnomish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

small_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = small_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

medium_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

large_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = large_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

largest_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

add_gnomish_minority_size_effect = {
	custom_tooltip = add_gnomish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_small
			}
			remove_province_modifier = gnomish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = gnomish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_small
			}
			remove_province_modifier = gnomish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = gnomish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_small
			}
			remove_province_modifier = gnomish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = gnomish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_gnomish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_gnomish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = gnomish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_gnomish_minority_size_effect = {
	custom_tooltip = remove_gnomish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_small
			}
			remove_province_modifier = gnomish_minority_oppressed_small
			
			remove_province_modifier = gnomish_institute_gommo 
			remove_province_modifier = aqatbar_gnome_quarter
			remove_province_modifier = rayavhashapal_gnome_quarter
			remove_province_modifier = port_jaher_gnome_quarter
			remove_province_modifier = feiten_gnome_quarter
			remove_province_modifier = kherka_gnome_quarter
			remove_province_modifier = camsinh_gnome_quarter
			remove_province_modifier = arawkelin_gnome_quarter
			remove_province_modifier = tianlou_gnome_quarter
			remove_province_modifier = sarisung_gnome_quarter
			remove_province_modifier = maoji_gnome_quarter
			
			clr_province_flag = special_gnomish_quarter_gommo
		}
		if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_large
			}
			remove_province_modifier = gnomish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = gnomish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_small
			}
			remove_province_modifier = gnomish_minority_coexisting_small
			
			remove_province_modifier = gnomish_institute_gommo 
			remove_province_modifier = aqatbar_gnome_quarter
			remove_province_modifier = rayavhashapal_gnome_quarter
			remove_province_modifier = port_jaher_gnome_quarter
			remove_province_modifier = feiten_gnome_quarter
			remove_province_modifier = kherka_gnome_quarter
			remove_province_modifier = camsinh_gnome_quarter
			remove_province_modifier = arawkelin_gnome_quarter
			remove_province_modifier = tianlou_gnome_quarter
			remove_province_modifier = sarisung_gnome_quarter
			remove_province_modifier = maoji_gnome_quarter
			
			clr_province_flag = special_gnomish_quarter_gommo
		}
		if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_large
			}
			remove_province_modifier = gnomish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = gnomish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_small
			}
			remove_province_modifier = gnomish_minority_integrated_small
			
			remove_province_modifier = gnomish_institute_gommo 
			remove_province_modifier = aqatbar_gnome_quarter
			remove_province_modifier = rayavhashapal_gnome_quarter
			remove_province_modifier = port_jaher_gnome_quarter
			remove_province_modifier = feiten_gnome_quarter
			remove_province_modifier = kherka_gnome_quarter
			remove_province_modifier = camsinh_gnome_quarter
			remove_province_modifier = arawkelin_gnome_quarter
			remove_province_modifier = tianlou_gnome_quarter
			remove_province_modifier = sarisung_gnome_quarter
			remove_province_modifier = maoji_gnome_quarter
			
			clr_province_flag = special_gnomish_quarter_gommo
		}
		if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_large
			}
			remove_province_modifier = gnomish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = gnomish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# elven
small_increase_of_elven_tolerance_effect = {
	custom_tooltip = small_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

medium_increase_of_elven_tolerance_effect = {
	custom_tooltip = medium_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

large_increase_of_elven_tolerance_effect = {
	custom_tooltip = large_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

largest_increase_of_elven_tolerance_effect = {
	custom_tooltip = largest_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

small_decrease_of_elven_tolerance_effect = {
	custom_tooltip = small_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

medium_decrease_of_elven_tolerance_effect = {
	custom_tooltip = medium_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

large_decrease_of_elven_tolerance_effect = {
	custom_tooltip = large_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

largest_decrease_of_elven_tolerance_effect = {
	custom_tooltip = largest_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

add_elven_minority_size_effect = {
	custom_tooltip = add_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_small
			}
			remove_province_modifier = elven_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = elven_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_small
			}
			remove_province_modifier = elven_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = elven_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = elven_minority_integrated_small
			}
			remove_province_modifier = elven_minority_integrated_small
			add_permanent_province_modifier = { 
				name = elven_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_elven_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_elven_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = elven_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_elven_minority_size_effect = {
	custom_tooltip = remove_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_small
			}
			remove_province_modifier = elven_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_large
			}
			remove_province_modifier = elven_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = elven_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_small
			}
			remove_province_modifier = elven_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_large
			}
			remove_province_modifier = elven_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = elven_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = elven_minority_integrated_small
			}
			remove_province_modifier = elven_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = elven_minority_integrated_large
			}
			remove_province_modifier = elven_minority_integrated_large
			add_permanent_province_modifier = { 
				name = elven_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Half-orcish
small_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = small_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = half_orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

medium_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = medium_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = half_orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

large_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = large_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = half_orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

largest_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = largest_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = half_orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

small_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = small_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

medium_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

large_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = large_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

largest_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

add_half_orcish_minority_size_effect = {
	custom_tooltip = add_half_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_small
			}
			remove_province_modifier = half_orcish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = half_orcish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_small
			}
			remove_province_modifier = half_orcish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = half_orcish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_small
			}
			remove_province_modifier = half_orcish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = half_orcish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_half_orcish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_half_orcish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = half_orcish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_half_orcish_minority_size_effect = {
	custom_tooltip = remove_half_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_small
			}
			remove_province_modifier = half_orcish_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_large
			}
			remove_province_modifier = half_orcish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = half_orcish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_small
			}
			remove_province_modifier = half_orcish_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_large
			}
			remove_province_modifier = half_orcish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = half_orcish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_small
			}
			remove_province_modifier = half_orcish_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_large
			}
			remove_province_modifier = half_orcish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = half_orcish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Kobold
small_increase_of_kobold_tolerance_effect = {
	custom_tooltip = small_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = kobold_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

medium_increase_of_kobold_tolerance_effect = {
	custom_tooltip = medium_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = kobold_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

large_increase_of_kobold_tolerance_effect = {
	custom_tooltip = large_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = kobold_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

largest_increase_of_kobold_tolerance_effect = {
	custom_tooltip = largest_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = kobold_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

small_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = small_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = kobold_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

medium_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = medium_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = kobold_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

large_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = large_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = kobold_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

largest_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = largest_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = kobold_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

add_kobold_minority_size_effect = {
	custom_tooltip = add_kobold_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_small
			}
			remove_province_modifier = kobold_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = kobold_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_small
			}
			remove_province_modifier = kobold_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = kobold_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_small
			}
			remove_province_modifier = kobold_minority_integrated_small
			add_permanent_province_modifier = { 
				name = kobold_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_kobold_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_kobold_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = kobold_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_kobold_minority_size_effect = {
	custom_tooltip = remove_kobold_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_small
			}
			remove_province_modifier = kobold_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_large
			}
			remove_province_modifier = kobold_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = kobold_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_small
			}
			remove_province_modifier = kobold_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_large
			}
			remove_province_modifier = kobold_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = kobold_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_small
			}
			remove_province_modifier = kobold_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_large
			}
			remove_province_modifier = kobold_minority_integrated_large
			add_permanent_province_modifier = { 
				name = kobold_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Gnolls
small_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = small_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = gnollish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

medium_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = medium_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = gnollish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

large_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = large_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = gnollish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

largest_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = largest_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = gnollish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

small_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = small_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

medium_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

large_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = large_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

largest_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

add_gnollish_minority_size_effect = {
	custom_tooltip = add_gnollish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnollish_minority_oppressed_small
			}
			remove_province_modifier = gnollish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = gnollish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = gnollish_minority_coexisting_small
			}
			remove_province_modifier = gnollish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = gnollish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = gnollish_minority_integrated_small
			}
			remove_province_modifier = gnollish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = gnollish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_gnollish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_gnollish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = gnollish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_gnollish_minority_size_effect = {
	custom_tooltip = remove_gnollish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnollish_minority_oppressed_small
			}
			remove_province_modifier = gnollish_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = gnollish_minority_oppressed_large
			}
			remove_province_modifier = gnollish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = gnollish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = gnollish_minority_coexisting_small
			}
			remove_province_modifier = gnollish_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = gnollish_minority_coexisting_large
			}
			remove_province_modifier = gnollish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = gnollish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = gnollish_minority_integrated_small
			}
			remove_province_modifier = gnollish_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = gnollish_minority_integrated_large
			}
			remove_province_modifier = gnollish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = gnollish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Orc
small_increase_of_orcish_tolerance_effect = {
	custom_tooltip = small_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

medium_increase_of_orcish_tolerance_effect = {
	custom_tooltip = medium_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

large_increase_of_orcish_tolerance_effect = {
	custom_tooltip = large_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

largest_increase_of_orcish_tolerance_effect = {
	custom_tooltip = largest_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

small_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = small_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

medium_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

large_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = large_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

largest_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

add_orcish_minority_size_effect = {
	custom_tooltip = add_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_small
			}
			remove_province_modifier = orcish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = orcish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_small
			}
			remove_province_modifier = orcish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = orcish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_small
			}
			remove_province_modifier = orcish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = orcish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_orcish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_orcish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = orcish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_orcish_minority_size_effect = {
	custom_tooltip = remove_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_small
			}
			remove_province_modifier = orcish_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_large
			}
			remove_province_modifier = orcish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = orcish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_small
			}
			remove_province_modifier = orcish_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_large
			}
			remove_province_modifier = orcish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = orcish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_small
			}
			remove_province_modifier = orcish_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_large
			}
			remove_province_modifier = orcish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = orcish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Halfling
small_increase_of_halfling_tolerance_effect = {
	custom_tooltip = small_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = halfling_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

medium_increase_of_halfling_tolerance_effect = {
	custom_tooltip = medium_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = halfling_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

large_increase_of_halfling_tolerance_effect = {
	custom_tooltip = large_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = halfling_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

largest_increase_of_halfling_tolerance_effect = {
	custom_tooltip = largest_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = halfling_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

small_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = small_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = halfling_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

medium_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = medium_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = halfling_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

large_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = large_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = halfling_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

largest_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = largest_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = halfling_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

add_halfling_minority_size_effect = {
	custom_tooltip = add_halfling_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_small
			}
			remove_province_modifier = halfling_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = halfling_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_small
			}
			remove_province_modifier = halfling_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = halfling_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_small
			}
			remove_province_modifier = halfling_minority_integrated_small
			add_permanent_province_modifier = { 
				name = halfling_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_halfling_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_halfling_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = halfling_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_halfling_minority_size_effect = {
	custom_tooltip = remove_halfling_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_small
			}
			remove_province_modifier = halfling_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_large
			}
			remove_province_modifier = halfling_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = halfling_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_small
			}
			remove_province_modifier = halfling_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_large
			}
			remove_province_modifier = halfling_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = halfling_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_small
			}
			remove_province_modifier = halfling_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_large
			}
			remove_province_modifier = halfling_minority_integrated_large
			add_permanent_province_modifier = { 
				name = halfling_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Humans
small_increase_of_human_tolerance_effect = {
	custom_tooltip = small_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = human_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

medium_increase_of_human_tolerance_effect = {
	custom_tooltip = medium_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = human_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

large_increase_of_human_tolerance_effect = {
	custom_tooltip = large_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = human_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

largest_increase_of_human_tolerance_effect = {
	custom_tooltip = largest_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = human_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

small_decrease_of_human_tolerance_effect = {
	custom_tooltip = small_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = human_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

medium_decrease_of_human_tolerance_effect = {
	custom_tooltip = medium_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = human_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

large_decrease_of_human_tolerance_effect = {
	custom_tooltip = large_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = human_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

largest_decrease_of_human_tolerance_effect = {
	custom_tooltip = largest_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = human_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

add_human_minority_size_effect = {
	custom_tooltip = add_human_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = human_minority_oppressed_small
			}
			remove_province_modifier = human_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = human_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = human_minority_coexisting_small
			}
			remove_province_modifier = human_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = human_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = human_minority_integrated_small
			}
			remove_province_modifier = human_minority_integrated_small
			add_permanent_province_modifier = { 
				name = human_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_human_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_human_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = human_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_human_minority_size_effect = {
	custom_tooltip = remove_human_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = human_minority_oppressed_small
			}
			remove_province_modifier = human_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = human_minority_oppressed_large
			}
			remove_province_modifier = human_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = human_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = human_minority_coexisting_small
			}
			remove_province_modifier = human_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = human_minority_coexisting_large
			}
			remove_province_modifier = human_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = human_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = human_minority_integrated_small
			}
			remove_province_modifier = human_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = human_minority_integrated_large
			}
			remove_province_modifier = human_minority_integrated_large
			add_permanent_province_modifier = { 
				name = human_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Half Elf
small_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = small_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = half_elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

medium_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = medium_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = half_elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

large_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = large_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = half_elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

largest_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = largest_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = half_elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

small_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = small_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

medium_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = medium_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

large_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = large_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

largest_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = largest_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

add_half_elven_minority_size_effect = {
	custom_tooltip = add_half_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_small
			}
			remove_province_modifier = half_elven_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = half_elven_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_small
			}
			remove_province_modifier = half_elven_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = half_elven_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_small
			}
			remove_province_modifier = half_elven_minority_integrated_small
			add_permanent_province_modifier = { 
				name = half_elven_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_half_elven_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_half_elven_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = half_elven_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_half_elven_minority_size_effect = {
	custom_tooltip = remove_half_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_small
			}
			remove_province_modifier = half_elven_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_large
			}
			remove_province_modifier = half_elven_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = half_elven_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_small
			}
			remove_province_modifier = half_elven_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_large
			}
			remove_province_modifier = half_elven_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = half_elven_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_small
			}
			remove_province_modifier = half_elven_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_large
			}
			remove_province_modifier = half_elven_minority_integrated_large
			add_permanent_province_modifier = { 
				name = half_elven_minority_integrated_small
				duration = -1
			}
		}
	}
}


# ruinborn
small_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = small_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = ruinborn_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

medium_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = medium_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = ruinborn_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

large_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = large_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = ruinborn_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

largest_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = largest_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = ruinborn_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

small_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = small_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

medium_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = medium_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

large_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = large_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

largest_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = largest_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

add_ruinborn_minority_size_effect = {
	custom_tooltip = add_ruinborn_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_oppressed_small
			}
			remove_province_modifier = ruinborn_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = ruinborn_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = ruinborn_minority_coexisting_small
			}
			remove_province_modifier = ruinborn_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = ruinborn_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = ruinborn_minority_integrated_small
			}
			remove_province_modifier = ruinborn_minority_integrated_small
			add_permanent_province_modifier = { 
				name = ruinborn_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_ruinborn_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_ruinborn_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = ruinborn_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_ruinborn_minority_size_effect = {
	custom_tooltip = remove_ruinborn_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_oppressed_small
			}
			remove_province_modifier = ruinborn_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_oppressed_large
			}
			remove_province_modifier = ruinborn_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = ruinborn_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_coexisting_small
			}
			remove_province_modifier = ruinborn_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_coexisting_large
			}
			remove_province_modifier = ruinborn_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = ruinborn_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_integrated_small
			}
			remove_province_modifier = ruinborn_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_integrated_large
			}
			remove_province_modifier = ruinborn_minority_integrated_large
			add_permanent_province_modifier = { 
				name = ruinborn_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Goblins
small_increase_of_goblin_tolerance_effect = {
	custom_tooltip = small_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = goblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

medium_increase_of_goblin_tolerance_effect = {
	custom_tooltip = medium_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = goblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

large_increase_of_goblin_tolerance_effect = {
	custom_tooltip = large_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = goblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

largest_increase_of_goblin_tolerance_effect = {
	custom_tooltip = largest_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = goblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

small_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = small_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = goblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

medium_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = medium_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = goblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

large_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = large_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = goblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

largest_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = largest_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = goblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

add_goblin_minority_size_effect = {
	custom_tooltip = add_goblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = goblin_minority_oppressed_small
			}
			remove_province_modifier = goblin_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = goblin_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = goblin_minority_coexisting_small
			}
			remove_province_modifier = goblin_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = goblin_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = goblin_minority_integrated_small
			}
			remove_province_modifier = goblin_minority_integrated_small
			add_permanent_province_modifier = { 
				name = goblin_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_goblin_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_goblin_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = goblin_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_goblin_minority_size_effect = {
	custom_tooltip = remove_goblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = goblin_minority_oppressed_small
			}
			remove_province_modifier = goblin_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = goblin_minority_oppressed_large
			}
			remove_province_modifier = goblin_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = goblin_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = goblin_minority_coexisting_small
			}
			remove_province_modifier = goblin_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = goblin_minority_coexisting_large
			}
			remove_province_modifier = goblin_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = goblin_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = goblin_minority_integrated_small
			}
			remove_province_modifier = goblin_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = goblin_minority_integrated_large
			}
			remove_province_modifier = goblin_minority_integrated_large
			add_permanent_province_modifier = { 
				name = goblin_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Harpy
small_increase_of_harpy_tolerance_effect = {
	custom_tooltip = small_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = harpy_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

medium_increase_of_harpy_tolerance_effect = {
	custom_tooltip = medium_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = harpy_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

large_increase_of_harpy_tolerance_effect = {
	custom_tooltip = large_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = harpy_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

largest_increase_of_harpy_tolerance_effect = {
	custom_tooltip = largest_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = harpy_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

small_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = small_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = harpy_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

medium_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = medium_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = harpy_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

large_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = large_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = harpy_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

largest_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = largest_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = harpy_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

add_harpy_minority_size_effect = {
	custom_tooltip = add_harpy_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = harpy_minority_oppressed_small
			}
			remove_province_modifier = harpy_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = harpy_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = harpy_minority_coexisting_small
			}
			remove_province_modifier = harpy_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = harpy_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = harpy_minority_integrated_small
			}
			remove_province_modifier = harpy_minority_integrated_small
			add_permanent_province_modifier = { 
				name = harpy_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_harpy_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_harpy_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = harpy_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_harpy_minority_size_effect = {
	custom_tooltip = remove_harpy_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = harpy_minority_oppressed_small
			}
			remove_province_modifier = harpy_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = harpy_minority_oppressed_large
			}
			remove_province_modifier = harpy_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = harpy_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = harpy_minority_coexisting_small
			}
			remove_province_modifier = harpy_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = harpy_minority_coexisting_large
			}
			remove_province_modifier = harpy_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = harpy_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = harpy_minority_integrated_small
			}
			remove_province_modifier = harpy_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = harpy_minority_integrated_large
			}
			remove_province_modifier = harpy_minority_integrated_large
			add_permanent_province_modifier = { 
				name = harpy_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Troll
small_increase_of_troll_tolerance_effect = {
	custom_tooltip = small_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = troll_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

medium_increase_of_troll_tolerance_effect = {
	custom_tooltip = medium_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = troll_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

large_increase_of_troll_tolerance_effect = {
	custom_tooltip = large_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = troll_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

largest_increase_of_troll_tolerance_effect = {
	custom_tooltip = largest_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = troll_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

small_decrease_of_troll_tolerance_effect = {
	custom_tooltip = small_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = troll_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

medium_decrease_of_troll_tolerance_effect = {
	custom_tooltip = medium_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = troll_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

large_decrease_of_troll_tolerance_effect = {
	custom_tooltip = large_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = troll_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

largest_decrease_of_troll_tolerance_effect = {
	custom_tooltip = largest_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = troll_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

add_troll_minority_size_effect = {
	custom_tooltip = add_troll_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = troll_minority_oppressed_small
			}
			remove_province_modifier = troll_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = troll_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = troll_minority_coexisting_small
			}
			remove_province_modifier = troll_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = troll_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = troll_minority_integrated_small
			}
			remove_province_modifier = troll_minority_integrated_small
			add_permanent_province_modifier = { 
				name = troll_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_troll_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_troll_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = troll_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_troll_minority_size_effect = {
	custom_tooltip = remove_troll_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = troll_minority_oppressed_small
			}
			remove_province_modifier = troll_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = troll_minority_oppressed_large
			}
			remove_province_modifier = troll_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = troll_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = troll_minority_coexisting_small
			}
			remove_province_modifier = troll_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = troll_minority_coexisting_large
			}
			remove_province_modifier = troll_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = troll_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = troll_minority_integrated_small
			}
			remove_province_modifier = troll_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = troll_minority_integrated_large
			}
			remove_province_modifier = troll_minority_integrated_large
			add_permanent_province_modifier = { 
				name = troll_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Ogre
small_increase_of_ogre_tolerance_effect = {
	custom_tooltip = small_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = ogre_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

medium_increase_of_ogre_tolerance_effect = {
	custom_tooltip = medium_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = ogre_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

large_increase_of_ogre_tolerance_effect = {
	custom_tooltip = large_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = ogre_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

largest_increase_of_ogre_tolerance_effect = {
	custom_tooltip = largest_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = ogre_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

small_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = small_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = ogre_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

medium_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = medium_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = ogre_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

large_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = large_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = ogre_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

largest_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = largest_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = ogre_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

add_ogre_minority_size_effect = {
	custom_tooltip = add_ogre_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = ogre_minority_oppressed_small
			}
			remove_province_modifier = ogre_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = ogre_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = ogre_minority_coexisting_small
			}
			remove_province_modifier = ogre_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = ogre_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = ogre_minority_integrated_small
			}
			remove_province_modifier = ogre_minority_integrated_small
			add_permanent_province_modifier = { 
				name = ogre_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_ogre_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_ogre_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = ogre_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_ogre_minority_size_effect = {
	custom_tooltip = remove_ogre_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = ogre_minority_oppressed_small
			}
			remove_province_modifier = ogre_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = ogre_minority_oppressed_large
			}
			remove_province_modifier = ogre_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = ogre_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = ogre_minority_coexisting_small
			}
			remove_province_modifier = ogre_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = ogre_minority_coexisting_large
			}
			remove_province_modifier = ogre_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = ogre_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = ogre_minority_integrated_small
			}
			remove_province_modifier = ogre_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = ogre_minority_integrated_large
			}
			remove_province_modifier = ogre_minority_integrated_large
			add_permanent_province_modifier = { 
				name = ogre_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Harimari
small_increase_of_harimari_tolerance_effect = {
	custom_tooltip = small_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = harimari_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

medium_increase_of_harimari_tolerance_effect = {
	custom_tooltip = medium_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = harimari_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

large_increase_of_harimari_tolerance_effect = {
	custom_tooltip = large_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = harimari_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

largest_increase_of_harimari_tolerance_effect = {
	custom_tooltip = largest_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = harimari_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

small_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = small_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = harimari_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

medium_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = medium_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = harimari_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

large_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = large_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = harimari_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

largest_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = largest_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = harimari_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

add_harimari_minority_size_effect = {
	custom_tooltip = add_harimari_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = harimari_minority_oppressed_small
			}
			remove_province_modifier = harimari_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = harimari_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = harimari_minority_coexisting_small
			}
			remove_province_modifier = harimari_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = harimari_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = harimari_minority_integrated_small
			}
			remove_province_modifier = harimari_minority_integrated_small
			add_permanent_province_modifier = { 
				name = harimari_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_harimari_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_harimari_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = harimari_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_harimari_minority_size_effect = {
	custom_tooltip = remove_harimari_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = harimari_minority_oppressed_small
			}
			remove_province_modifier = harimari_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = harimari_minority_oppressed_large
			}
			remove_province_modifier = harimari_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = harimari_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = harimari_minority_coexisting_small
			}
			remove_province_modifier = harimari_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = harimari_minority_coexisting_large
			}
			remove_province_modifier = harimari_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = harimari_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = harimari_minority_integrated_small
			}
			remove_province_modifier = harimari_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = harimari_minority_integrated_large
			}
			remove_province_modifier = harimari_minority_integrated_large
			add_permanent_province_modifier = { 
				name = harimari_minority_integrated_small
				duration = -1
			}
		}
	}
}




# Centaur
small_increase_of_centaur_tolerance_effect = {
	custom_tooltip = small_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = centaur_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

medium_increase_of_centaur_tolerance_effect = {
	custom_tooltip = medium_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = centaur_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

large_increase_of_centaur_tolerance_effect = {
	custom_tooltip = large_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = centaur_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

largest_increase_of_centaur_tolerance_effect = {
	custom_tooltip = largest_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = centaur_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

small_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = small_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = centaur_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

medium_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = medium_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = centaur_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

large_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = large_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = centaur_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

largest_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = largest_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = centaur_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

add_centaur_minority_size_effect = {
	custom_tooltip = add_centaur_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = centaur_minority_oppressed_small
			}
			remove_province_modifier = centaur_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = centaur_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = centaur_minority_coexisting_small
			}
			remove_province_modifier = centaur_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = centaur_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = centaur_minority_integrated_small
			}
			remove_province_modifier = centaur_minority_integrated_small
			add_permanent_province_modifier = { 
				name = centaur_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_centaur_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_centaur_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = centaur_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_centaur_minority_size_effect = {
	custom_tooltip = remove_centaur_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = centaur_minority_oppressed_small
			}
			remove_province_modifier = centaur_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = centaur_minority_oppressed_large
			}
			remove_province_modifier = centaur_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = centaur_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = centaur_minority_coexisting_small
			}
			remove_province_modifier = centaur_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = centaur_minority_coexisting_large
			}
			remove_province_modifier = centaur_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = centaur_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = centaur_minority_integrated_small
			}
			remove_province_modifier = centaur_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = centaur_minority_integrated_large
			}
			remove_province_modifier = centaur_minority_integrated_large
			add_permanent_province_modifier = { 
				name = centaur_minority_integrated_small
				duration = -1
			}
		}
	}
}



# Hobgoblin
small_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = small_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

medium_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = medium_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

large_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = large_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

largest_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = largest_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
	}
}

small_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = small_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

medium_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = medium_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

large_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = large_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

largest_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = largest_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

add_hobgoblin_minority_size_effect = {
	custom_tooltip = add_hobgoblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_oppressed_small
			}
			remove_province_modifier = hobgoblin_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = hobgoblin_minority_coexisting_small
			}
			remove_province_modifier = hobgoblin_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = hobgoblin_minority_integrated_small
			}
			remove_province_modifier = hobgoblin_minority_integrated_small
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_hobgoblin_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_hobgoblin_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_hobgoblin_minority_size_effect = {
	custom_tooltip = remove_hobgoblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_oppressed_small
			}
			remove_province_modifier = hobgoblin_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_oppressed_large
			}
			remove_province_modifier = hobgoblin_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_coexisting_small
			}
			remove_province_modifier = hobgoblin_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_coexisting_large
			}
			remove_province_modifier = hobgoblin_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_integrated_small
			}
			remove_province_modifier = hobgoblin_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_integrated_large
			}
			remove_province_modifier = hobgoblin_minority_integrated_large
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_integrated_small
				duration = -1
			}
		}
	}
}

#This should be use in a province scope
update_racial_province_modifier_tolerance = {
	#AddNewRaceHere
		
	#elven
	if = {
		limit = { has_unmatching_elven_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_elven_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_small
				remove_province_modifier = elven_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_large
				remove_province_modifier = elven_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_majority_integrated
					duration = -1
				}
				remove_province_modifier = elven_majority_oppressed
				remove_province_modifier = elven_majority_coexisting
				remove_province_modifier = elven_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_elven_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_small
				remove_province_modifier = elven_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_large
				remove_province_modifier = elven_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_majority_coexisting
					duration = -1
				}
				remove_province_modifier = elven_majority_oppressed
				remove_province_modifier = elven_majority_integrated
				remove_province_modifier = elven_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_elven_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = elven_minority_integrated_small
				remove_province_modifier = elven_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = elven_minority_integrated_large
				remove_province_modifier = elven_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_majority_oppressed
					duration = -1
				}
				remove_province_modifier = elven_majority_integrated
				remove_province_modifier = elven_majority_primary
				remove_province_modifier = elven_majority_coexisting
			}
		}
	}

	
	#Dwarven
	if = {
		limit = { has_unmatching_dwarven_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_dwarven_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_small
				remove_province_modifier = dwarven_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_large
				remove_province_modifier = dwarven_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_dwarven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_majority_integrated
					duration = -1
				}
				remove_province_modifier = dwarven_majority_oppressed
				remove_province_modifier = dwarven_majority_coexisting
				remove_province_modifier = dwarven_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_dwarven_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_small
				remove_province_modifier = dwarven_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_large
				remove_province_modifier = dwarven_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_dwarven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_majority_coexisting
					duration = -1
				}
				remove_province_modifier = dwarven_majority_oppressed
				remove_province_modifier = dwarven_majority_integrated
				remove_province_modifier = dwarven_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_dwarven_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = dwarven_minority_integrated_small
				remove_province_modifier = dwarven_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = dwarven_minority_integrated_large
				remove_province_modifier = dwarven_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_dwarven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_majority_oppressed
					duration = -1
				}
				remove_province_modifier = dwarven_majority_integrated
				remove_province_modifier = dwarven_majority_primary
				remove_province_modifier = dwarven_majority_coexisting
			}
		}
	}

	
	#Halfling
	if = {
		limit = { has_unmatching_halfling_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_halfling_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_small
				remove_province_modifier = halfling_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_large
				remove_province_modifier = halfling_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_halfling_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_majority_integrated
					duration = -1
				}
				remove_province_modifier = halfling_majority_oppressed
				remove_province_modifier = halfling_majority_coexisting
				remove_province_modifier = halfling_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_halfling_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_small
				remove_province_modifier = halfling_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_large
				remove_province_modifier = halfling_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_halfling_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_majority_coexisting
					duration = -1
				}
				remove_province_modifier = halfling_majority_oppressed
				remove_province_modifier = halfling_majority_integrated
				remove_province_modifier = halfling_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_halfling_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = halfling_minority_integrated_small
				remove_province_modifier = halfling_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = halfling_minority_integrated_large
				remove_province_modifier = halfling_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_halfling_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_majority_oppressed
					duration = -1
				}
				remove_province_modifier = halfling_majority_integrated
				remove_province_modifier = halfling_majority_primary
				remove_province_modifier = halfling_majority_coexisting
			}
		}
	}

	
	#Gnomish
	if = {
		limit = { has_unmatching_gnomish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_gnomish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_small
				remove_province_modifier = gnomish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_large
				remove_province_modifier = gnomish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_gnomish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_majority_integrated
					duration = -1
				}
				remove_province_modifier = gnomish_majority_oppressed
				remove_province_modifier = gnomish_majority_coexisting
				remove_province_modifier = gnomish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_gnomish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_small
				remove_province_modifier = gnomish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_large
				remove_province_modifier = gnomish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_gnomish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = gnomish_majority_oppressed
				remove_province_modifier = gnomish_majority_integrated
				remove_province_modifier = gnomish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_gnomish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = gnomish_minority_integrated_small
				remove_province_modifier = gnomish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = gnomish_minority_integrated_large
				remove_province_modifier = gnomish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_gnomish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = gnomish_majority_integrated
				remove_province_modifier = gnomish_majority_primary
				remove_province_modifier = gnomish_majority_coexisting
			}
		}
	}

	
	#Half Orcish
	if = {
		limit = { has_unmatching_half_orcish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_half_orcish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_small
				remove_province_modifier = half_orcish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_large
				remove_province_modifier = half_orcish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_half_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_majority_integrated
					duration = -1
				}
				remove_province_modifier = half_orcish_majority_oppressed
				remove_province_modifier = half_orcish_majority_coexisting
				remove_province_modifier = half_orcish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_half_orcish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_small
				remove_province_modifier = half_orcish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_large
				remove_province_modifier = half_orcish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_half_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = half_orcish_majority_oppressed
				remove_province_modifier = half_orcish_majority_integrated
				remove_province_modifier = half_orcish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_half_orcish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_integrated_small
				remove_province_modifier = half_orcish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_integrated_large
				remove_province_modifier = half_orcish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_half_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = half_orcish_majority_integrated
				remove_province_modifier = half_orcish_majority_primary
				remove_province_modifier = half_orcish_majority_coexisting
			}
		}
	}

	
	#Kobold
	if = {
		limit = { has_unmatching_kobold_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_kobold_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_small
				remove_province_modifier = kobold_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_large
				remove_province_modifier = kobold_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_kobold_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_majority_integrated
					duration = -1
				}
				remove_province_modifier = kobold_majority_oppressed
				remove_province_modifier = kobold_majority_coexisting
				remove_province_modifier = kobold_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_kobold_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_small
				remove_province_modifier = kobold_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_large
				remove_province_modifier = kobold_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_kobold_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_majority_coexisting
					duration = -1
				}
				remove_province_modifier = kobold_majority_oppressed
				remove_province_modifier = kobold_majority_integrated
				remove_province_modifier = kobold_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_kobold_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = kobold_minority_integrated_small
				remove_province_modifier = kobold_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = kobold_minority_integrated_large
				remove_province_modifier = kobold_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_kobold_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_majority_oppressed
					duration = -1
				}
				remove_province_modifier = kobold_majority_integrated
				remove_province_modifier = kobold_majority_primary
				remove_province_modifier = kobold_majority_coexisting
			}
		}
	}

	
	#Orcish
	if = {
		limit = { has_unmatching_orcish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_orcish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_small
				remove_province_modifier = orcish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_large
				remove_province_modifier = orcish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_majority_integrated
					duration = -1
				}
				remove_province_modifier = orcish_majority_oppressed
				remove_province_modifier = orcish_majority_coexisting
				remove_province_modifier = orcish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_orcish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_small
				remove_province_modifier = orcish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_large
				remove_province_modifier = orcish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = orcish_majority_oppressed
				remove_province_modifier = orcish_majority_integrated
				remove_province_modifier = orcish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_orcish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = orcish_minority_integrated_small
				remove_province_modifier = orcish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = orcish_minority_integrated_large
				remove_province_modifier = orcish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = orcish_majority_integrated
				remove_province_modifier = orcish_majority_primary
				remove_province_modifier = orcish_majority_coexisting
			}
		}
	}

	
	#Human
	if = {
		limit = { has_unmatching_human_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_human_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_small
				remove_province_modifier = human_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_large
				remove_province_modifier = human_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_human_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_majority_integrated
					duration = -1
				}
				remove_province_modifier = human_majority_oppressed
				remove_province_modifier = human_majority_coexisting
				remove_province_modifier = human_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_human_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_small
				remove_province_modifier = human_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_large
				remove_province_modifier = human_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_human_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_majority_coexisting
					duration = -1
				}
				remove_province_modifier = human_majority_oppressed
				remove_province_modifier = human_majority_integrated
				remove_province_modifier = human_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_human_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = human_minority_integrated_small
				remove_province_modifier = human_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = human_minority_integrated_large
				remove_province_modifier = human_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_human_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_majority_oppressed
					duration = -1
				}
				remove_province_modifier = human_majority_integrated
				remove_province_modifier = human_majority_primary
				remove_province_modifier = human_majority_coexisting
			}
		}
	}

	
	#Gnollish
	if = {
		limit = { has_unmatching_gnollish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_gnollish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_small
				remove_province_modifier = gnollish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_large
				remove_province_modifier = gnollish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_gnollish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_majority_integrated
					duration = -1
				}
				remove_province_modifier = gnollish_majority_oppressed
				remove_province_modifier = gnollish_majority_coexisting
				remove_province_modifier = gnollish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_gnollish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_small
				remove_province_modifier = gnollish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_large
				remove_province_modifier = gnollish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_gnollish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = gnollish_majority_oppressed
				remove_province_modifier = gnollish_majority_integrated
				remove_province_modifier = gnollish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_gnollish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = gnollish_minority_integrated_small
				remove_province_modifier = gnollish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = gnollish_minority_integrated_large
				remove_province_modifier = gnollish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_gnollish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = gnollish_majority_integrated
				remove_province_modifier = gnollish_majority_primary
				remove_province_modifier = gnollish_majority_coexisting
			}
		}
	}

	
	#ruinborn
	if = {
		limit = { has_unmatching_ruinborn_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_ruinborn_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_small
				remove_province_modifier = ruinborn_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_large
				remove_province_modifier = ruinborn_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_ruinborn_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_majority_integrated
					duration = -1
				}
				remove_province_modifier = ruinborn_majority_oppressed
				remove_province_modifier = ruinborn_majority_coexisting
				remove_province_modifier = ruinborn_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_ruinborn_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_small
				remove_province_modifier = ruinborn_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_large
				remove_province_modifier = ruinborn_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_ruinborn_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_majority_coexisting
					duration = -1
				}
				remove_province_modifier = ruinborn_majority_oppressed
				remove_province_modifier = ruinborn_majority_integrated
				remove_province_modifier = ruinborn_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_ruinborn_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_integrated_small
				remove_province_modifier = ruinborn_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_integrated_large
				remove_province_modifier = ruinborn_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_ruinborn_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_majority_oppressed
					duration = -1
				}
				remove_province_modifier = ruinborn_majority_integrated
				remove_province_modifier = ruinborn_majority_primary
				remove_province_modifier = ruinborn_majority_coexisting
			}
		}
	}

	
	#Goblin
	if = {
		limit = { has_unmatching_goblin_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_goblin_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_small
				remove_province_modifier = goblin_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_large
				remove_province_modifier = goblin_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_goblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_majority_integrated
					duration = -1
				}
				remove_province_modifier = goblin_majority_oppressed
				remove_province_modifier = goblin_majority_coexisting
				remove_province_modifier = goblin_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_goblin_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_small
				remove_province_modifier = goblin_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_large
				remove_province_modifier = goblin_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_goblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_majority_coexisting
					duration = -1
				}
				remove_province_modifier = goblin_majority_oppressed
				remove_province_modifier = goblin_majority_integrated
				remove_province_modifier = goblin_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_goblin_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = goblin_minority_integrated_small
				remove_province_modifier = goblin_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = goblin_minority_integrated_large
				remove_province_modifier = goblin_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_goblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_majority_oppressed
					duration = -1
				}
				remove_province_modifier = goblin_majority_integrated
				remove_province_modifier = goblin_majority_primary
				remove_province_modifier = goblin_majority_coexisting
			}
		}
	}

	
	#Harpy
	if = {
		limit = { has_unmatching_harpy_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_harpy_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_small
				remove_province_modifier = harpy_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_large
				remove_province_modifier = harpy_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_harpy_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_majority_integrated
					duration = -1
				}
				remove_province_modifier = harpy_majority_oppressed
				remove_province_modifier = harpy_majority_coexisting
				remove_province_modifier = harpy_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_harpy_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_small
				remove_province_modifier = harpy_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_large
				remove_province_modifier = harpy_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_harpy_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_majority_coexisting
					duration = -1
				}
				remove_province_modifier = harpy_majority_oppressed
				remove_province_modifier = harpy_majority_integrated
				remove_province_modifier = harpy_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_harpy_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = harpy_minority_integrated_small
				remove_province_modifier = harpy_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = harpy_minority_integrated_large
				remove_province_modifier = harpy_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_harpy_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_majority_oppressed
					duration = -1
				}
				remove_province_modifier = harpy_majority_integrated
				remove_province_modifier = harpy_majority_primary
				remove_province_modifier = harpy_majority_coexisting
			}
		}
	}

	
	#Troll
	if = {
		limit = { has_unmatching_troll_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_troll_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_small
				remove_province_modifier = troll_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_large
				remove_province_modifier = troll_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_troll_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_majority_integrated
					duration = -1
				}
				remove_province_modifier = troll_majority_oppressed
				remove_province_modifier = troll_majority_coexisting
				remove_province_modifier = troll_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_troll_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_small
				remove_province_modifier = troll_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_large
				remove_province_modifier = troll_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_troll_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_majority_coexisting
					duration = -1
				}
				remove_province_modifier = troll_majority_oppressed
				remove_province_modifier = troll_majority_integrated
				remove_province_modifier = troll_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_troll_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = troll_minority_integrated_small
				remove_province_modifier = troll_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = troll_minority_integrated_large
				remove_province_modifier = troll_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_troll_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_majority_oppressed
					duration = -1
				}
				remove_province_modifier = troll_majority_integrated
				remove_province_modifier = troll_majority_primary
				remove_province_modifier = troll_majority_coexisting
			}
		}
	}

	
	#Half-elven
	if = {
		limit = { has_unmatching_half_elven_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_half_elven_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_small
				remove_province_modifier = half_elven_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_large
				remove_province_modifier = half_elven_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_half_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_majority_integrated
					duration = -1
				}
				remove_province_modifier = half_elven_majority_oppressed
				remove_province_modifier = half_elven_majority_coexisting
				remove_province_modifier = half_elven_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_half_elven_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_small
				remove_province_modifier = half_elven_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_large
				remove_province_modifier = half_elven_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_half_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_majority_coexisting
					duration = -1
				}
				remove_province_modifier = half_elven_majority_oppressed
				remove_province_modifier = half_elven_majority_integrated
				remove_province_modifier = half_elven_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_half_elven_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = half_elven_minority_integrated_small
				remove_province_modifier = half_elven_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = half_elven_minority_integrated_large
				remove_province_modifier = half_elven_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_half_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_majority_oppressed
					duration = -1
				}
				remove_province_modifier = half_elven_majority_integrated
				remove_province_modifier = half_elven_majority_primary
				remove_province_modifier = half_elven_majority_coexisting
			}
		}
	}

	
	#Harimari
	if = {
		limit = { has_unmatching_harimari_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_harimari_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_small
				remove_province_modifier = harimari_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_large
				remove_province_modifier = harimari_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_harimari_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_majority_integrated
					duration = -1
				}
				remove_province_modifier = harimari_majority_oppressed
				remove_province_modifier = harimari_majority_coexisting
				remove_province_modifier = harimari_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_harimari_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_small
				remove_province_modifier = harimari_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_large
				remove_province_modifier = harimari_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_harimari_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_majority_coexisting
					duration = -1
				}
				remove_province_modifier = harimari_majority_oppressed
				remove_province_modifier = harimari_majority_integrated
				remove_province_modifier = harimari_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_harimari_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = harimari_minority_integrated_small
				remove_province_modifier = harimari_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = harimari_minority_integrated_large
				remove_province_modifier = harimari_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_harimari_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_majority_oppressed
					duration = -1
				}
				remove_province_modifier = harimari_majority_integrated
				remove_province_modifier = harimari_majority_primary
				remove_province_modifier = harimari_majority_coexisting
			}
		}
	}

	
	#Hobgoblin
	if = {
		limit = { has_unmatching_hobgoblin_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_hobgoblin_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_small
				remove_province_modifier = hobgoblin_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_large
				remove_province_modifier = hobgoblin_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_hobgoblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_majority_integrated
					duration = -1
				}
				remove_province_modifier = hobgoblin_majority_oppressed
				remove_province_modifier = hobgoblin_majority_coexisting
				remove_province_modifier = hobgoblin_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_hobgoblin_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_small
				remove_province_modifier = hobgoblin_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_large
				remove_province_modifier = hobgoblin_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_hobgoblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_majority_coexisting
					duration = -1
				}
				remove_province_modifier = hobgoblin_majority_oppressed
				remove_province_modifier = hobgoblin_majority_integrated
				remove_province_modifier = hobgoblin_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_hobgoblin_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_integrated_small
				remove_province_modifier = hobgoblin_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_integrated_large
				remove_province_modifier = hobgoblin_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_hobgoblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_majority_oppressed
					duration = -1
				}
				remove_province_modifier = hobgoblin_majority_integrated
				remove_province_modifier = hobgoblin_majority_primary
				remove_province_modifier = hobgoblin_majority_coexisting
			}
		}
	}

	
	#Centaur
	if = {
		limit = { has_unmatching_centaur_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_centaur_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_small
				remove_province_modifier = centaur_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_large
				remove_province_modifier = centaur_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_centaur_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_majority_integrated
					duration = -1
				}
				remove_province_modifier = centaur_majority_oppressed
				remove_province_modifier = centaur_majority_coexisting
				remove_province_modifier = centaur_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_centaur_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_small
				remove_province_modifier = centaur_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_large
				remove_province_modifier = centaur_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_centaur_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_majority_coexisting
					duration = -1
				}
				remove_province_modifier = centaur_majority_oppressed
				remove_province_modifier = centaur_majority_integrated
				remove_province_modifier = centaur_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_centaur_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = centaur_minority_integrated_small
				remove_province_modifier = centaur_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = centaur_minority_integrated_large
				remove_province_modifier = centaur_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_centaur_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_majority_oppressed
					duration = -1
				}
				remove_province_modifier = centaur_majority_integrated
				remove_province_modifier = centaur_majority_primary
				remove_province_modifier = centaur_majority_coexisting
			}
		}
	}

	
	#Ogre
	if = {
		limit = { has_unmatching_ogre_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_ogre_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_small
				remove_province_modifier = ogre_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_large
				remove_province_modifier = ogre_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_ogre_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_majority_integrated
					duration = -1
				}
				remove_province_modifier = ogre_majority_oppressed
				remove_province_modifier = ogre_majority_coexisting
				remove_province_modifier = ogre_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_ogre_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_small
				remove_province_modifier = ogre_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_large
				remove_province_modifier = ogre_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_ogre_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_majority_coexisting
					duration = -1
				}
				remove_province_modifier = ogre_majority_oppressed
				remove_province_modifier = ogre_majority_integrated
				remove_province_modifier = ogre_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_ogre_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = ogre_minority_integrated_small
				remove_province_modifier = ogre_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = ogre_minority_integrated_large
				remove_province_modifier = ogre_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_ogre_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_majority_oppressed
					duration = -1
				}
				remove_province_modifier = ogre_majority_integrated
				remove_province_modifier = ogre_majority_primary
				remove_province_modifier = ogre_majority_coexisting
			}
		}
	}

	make_majority_primary = yes
}

#This should be use in a province scope
update_specific_racial_province_modifier_tolerance = { #$race$ = the race you're checking for
	
	# REB = { change_variable = { specificRacialTolerance = 1 } }
	if = {
		limit = { has_unmatching_$race$_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_$race$_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_small
				remove_province_modifier = $race$_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_large
				remove_province_modifier = $race$_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_$race$_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_majority_integrated
					duration = -1
				}
				remove_province_modifier = $race$_majority_primary
				remove_province_modifier = $race$_majority_oppressed
				remove_province_modifier = $race$_majority_coexisting
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_$race$_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_small
				remove_province_modifier = $race$_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_large
				remove_province_modifier = $race$_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_$race$_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_majority_coexisting
					duration = -1
				}
				remove_province_modifier = $race$_majority_oppressed
				remove_province_modifier = $race$_majority_integrated
				remove_province_modifier = $race$_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_$race$_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = $race$_minority_integrated_small
				remove_province_modifier = $race$_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = $race$_minority_integrated_large
				remove_province_modifier = $race$_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_$race$_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_majority_oppressed
					duration = -1
				}
				remove_province_modifier = $race$_majority_primary
				remove_province_modifier = $race$_majority_integrated
				remove_province_modifier = $race$_majority_coexisting
			}
		}
		make_majority_primary = yes
	}
}

update_racial_province_majority = {
	if = {
		
		#Culture Conversion Removal Squad - turns the old majority into a minority
		
		limit = { is_colony = no }	#prevents updating for incomplete colonies
		
		#AddNewRaceHere
		
		#elven
		if = {
			limit = {
				has_elven_majority_trigger = yes
				NOT = { culture_group = elven }
			}
			add_permanent_province_modifier = {
				name = elven_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = elven_majority_primary
			remove_province_modifier = elven_majority_integrated
			remove_province_modifier = elven_majority_coexisting
			remove_province_modifier = elven_majority_oppressed
		}
		
		#dwarven
		else_if = {
			limit = {
				has_dwarven_majority_trigger = yes
				NOT = { culture_group = dwarven }
			}
			add_permanent_province_modifier = {
				name = dwarven_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = dwarven_majority_primary
			remove_province_modifier = dwarven_majority_integrated
			remove_province_modifier = dwarven_majority_coexisting
			remove_province_modifier = dwarven_majority_oppressed
		}
		
		#halfling
		else_if = {
			limit = {
				has_halfling_majority_trigger = yes
				NOT = { culture_group = halfling }
			}
			add_permanent_province_modifier = {
				name = halfling_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = halfling_majority_primary
			remove_province_modifier = halfling_majority_integrated
			remove_province_modifier = halfling_majority_coexisting
			remove_province_modifier = halfling_majority_oppressed
		}
		
		#gnomish
		else_if = {
			limit = {
				has_gnomish_majority_trigger = yes
				NOT = { culture_group = gnomish }
			}
			add_permanent_province_modifier = {
				name = gnomish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = gnomish_majority_primary
			remove_province_modifier = gnomish_majority_integrated
			remove_province_modifier = gnomish_majority_coexisting
			remove_province_modifier = gnomish_majority_oppressed
		}
		
		#half_orcish
		else_if = {
			limit = {
				has_half_orcish_majority_trigger = yes
				NOT = { culture_is_half_orcish = yes }
			}
			add_permanent_province_modifier = {
				name = half_orcish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = half_orcish_majority_primary
			remove_province_modifier = half_orcish_majority_integrated
			remove_province_modifier = half_orcish_majority_coexisting
			remove_province_modifier = half_orcish_majority_oppressed
		}
		
		#orcish
		else_if = {
			limit = {
				has_orcish_majority_trigger = yes
				NOT = { culture_group = orcish }
			}
			add_permanent_province_modifier = {
				name = orcish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = orcish_majority_primary
			remove_province_modifier = orcish_majority_integrated
			remove_province_modifier = orcish_majority_coexisting
			remove_province_modifier = orcish_majority_oppressed
		}
		
		#human
		else_if = {
			limit = {
				has_human_majority_trigger = yes
				NOT = { culture_is_human = yes }
			}
			add_permanent_province_modifier = {
				name = human_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = human_majority_primary
			remove_province_modifier = human_majority_integrated
			remove_province_modifier = human_majority_coexisting
			remove_province_modifier = human_majority_oppressed
		}
		
		#gnollish
		else_if = {
			limit = {
				has_gnollish_majority_trigger = yes
				NOT = { culture_group = gnollish }
			}
			add_permanent_province_modifier = {
				name = gnollish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = gnollish_majority_primary
			remove_province_modifier = gnollish_majority_integrated
			remove_province_modifier = gnollish_majority_coexisting
			remove_province_modifier = gnollish_majority_oppressed
		}
		
		#ruinborn
		else_if = {
			limit = {
				has_ruinborn_majority_trigger = yes
				NOT = { culture_is_ruinborn = yes }
			}
			add_permanent_province_modifier = {
				name = ruinborn_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = ruinborn_majority_primary
			remove_province_modifier = ruinborn_majority_integrated
			remove_province_modifier = ruinborn_majority_coexisting
			remove_province_modifier = ruinborn_majority_oppressed
		}
		
		#goblin
		else_if = {
			limit = {
				has_goblin_majority_trigger = yes
				NOT = { culture_group = goblin }
			}
			add_permanent_province_modifier = {
				name = goblin_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = goblin_majority_primary
			remove_province_modifier = goblin_majority_integrated
			remove_province_modifier = goblin_majority_coexisting
			remove_province_modifier = goblin_majority_oppressed
		}
		
		#harpy
		else_if = {
			limit = {
				has_harpy_majority_trigger = yes
				NOT = { culture_group = harpy }
			}
			add_permanent_province_modifier = {
				name = harpy_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = harpy_majority_primary
			remove_province_modifier = harpy_majority_integrated
			remove_province_modifier = harpy_majority_coexisting
			remove_province_modifier = harpy_majority_oppressed
		}
		
		#troll
		else_if = {
			limit = {
				has_troll_majority_trigger = yes
				NOT = { culture_is_troll = yes }
			}
			add_permanent_province_modifier = {
				name = troll_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = troll_majority_primary
			remove_province_modifier = troll_majority_integrated
			remove_province_modifier = troll_majority_coexisting
			remove_province_modifier = troll_majority_oppressed
		}
		
		#half_elven
		else_if = {
			limit = {
				has_half_elven_majority_trigger = yes
				NOT = { culture_is_half_elven = yes }
			}
			add_permanent_province_modifier = {
				name = half_elven_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = half_elven_majority_primary
			remove_province_modifier = half_elven_majority_integrated
			remove_province_modifier = half_elven_majority_coexisting
			remove_province_modifier = half_elven_majority_oppressed
		}
		
		#kobold
		else_if = {
			limit = {
				has_kobold_majority_trigger = yes
				NOT = { culture_group = kobold }
			}
			add_permanent_province_modifier = {
				name = kobold_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = kobold_majority_primary
			remove_province_modifier = kobold_majority_integrated
			remove_province_modifier = kobold_majority_coexisting
			remove_province_modifier = kobold_majority_oppressed
		}
		
		#harimari
		else_if = {
			limit = {
				has_harimari_majority_trigger = yes
				NOT = { culture_group = harimari }
			}
			add_permanent_province_modifier = {
				name = harimari_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = harimari_majority_primary
			remove_province_modifier = harimari_majority_integrated
			remove_province_modifier = harimari_majority_coexisting
			remove_province_modifier = harimari_majority_oppressed
		}
		
		#hobgoblin
		else_if = {
			limit = {
				has_hobgoblin_majority_trigger = yes
				NOT = { culture_group = hobgoblin }
			}
			add_permanent_province_modifier = {
				name = hobgoblin_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = hobgoblin_majority_primary
			remove_province_modifier = hobgoblin_majority_integrated
			remove_province_modifier = hobgoblin_majority_coexisting
			remove_province_modifier = hobgoblin_majority_oppressed
		}
		
		#centaur
		else_if = {
			limit = {
				has_centaur_majority_trigger = yes
				NOT = { culture_group = centaur }
			}
			add_permanent_province_modifier = {
				name = centaur_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = centaur_majority_primary
			remove_province_modifier = centaur_majority_integrated
			remove_province_modifier = centaur_majority_coexisting
			remove_province_modifier = centaur_majority_oppressed
		}
		
		#ogre
		else_if = {
			limit = {
				has_ogre_majority_trigger = yes
				NOT = { culture_group = ogre }
			}
			add_permanent_province_modifier = {
				name = ogre_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = ogre_majority_primary
			remove_province_modifier = ogre_majority_integrated
			remove_province_modifier = ogre_majority_coexisting
			remove_province_modifier = ogre_majority_oppressed
		}
		
		
		#Remove Purging and Expelling majority modifiers
		if = {
			limit = { has_province_modifier = purging_majority }
			remove_province_modifier = purging_majority
		}
		if = {
			limit = { has_province_modifier = expelling_majority }
			remove_province_modifier = expelling_majority
		}
		
		
		#Add Majorities to province
		#elven
		if = {
			limit = {
				NOT = { has_elven_majority_trigger = yes }
				culture_group = elven
			}
			add_permanent_province_modifier = {
				name = elven_majority_coexisting
				duration = -1
			}
			
		}
	
		#Dwarven
		else_if = {
			limit = {
				NOT = { has_dwarven_majority_trigger = yes }
				culture_group = dwarven
			}
			add_permanent_province_modifier = {
				name = dwarven_majority_coexisting
				duration = -1
			}
		}
		
		#halfling
		else_if = {
			limit = {
				NOT = { has_halfling_majority_trigger = yes }
				culture_group = halfling
			}
			add_permanent_province_modifier = {
				name = halfling_majority_coexisting
				duration = -1
			}
		}
		
		#gnomish
		else_if = {
			limit = {
				NOT = { has_gnomish_majority_trigger = yes }
				culture_group = gnomish
			}
			add_permanent_province_modifier = {
				name = gnomish_majority_coexisting
				duration = -1
			}
		}
		#half_orcish
		else_if = {
			limit = {
				NOT = { has_half_orcish_majority_trigger = yes }
				culture_is_half_orcish = yes
			}
			add_permanent_province_modifier = {
				name = half_orcish_majority_coexisting
				duration = -1
			}
		}
		
		#kobold
		else_if = {
			limit = {
				NOT = { has_kobold_majority_trigger = yes }
				culture_group = kobold
			}
			add_permanent_province_modifier = {
				name = kobold_majority_coexisting
				duration = -1
			}
		}
	
		#orcish
		else_if = {
			limit = {
				NOT = { has_orcish_majority_trigger = yes }
				culture_group = orcish
			}
			add_permanent_province_modifier = {
				name = orcish_majority_coexisting
				duration = -1
			}
		}
		
		#human
		else_if = {
			limit = {
				NOT = { has_human_majority_trigger = yes }
				culture_is_human = yes
			}
			add_permanent_province_modifier = {
				name = human_majority_coexisting
				duration = -1
			}
		}
		
		#gnollish
		else_if = {
			limit = {
				NOT = { has_gnollish_majority_trigger = yes }
				culture_group = gnollish
			}
			add_permanent_province_modifier = {
				name = gnollish_majority_coexisting
				duration = -1
			}
		}
		#ruinborn
		else_if = {
			limit = {
				NOT = { has_ruinborn_majority_trigger = yes }
				culture_is_ruinborn = yes
			}
			add_permanent_province_modifier = {
				name = ruinborn_majority_coexisting
				duration = -1
			}
		}
		
		#goblin
		else_if = {
			limit = {
				NOT = { has_goblin_majority_trigger = yes }
				culture_group = goblin
			}
			add_permanent_province_modifier = {
				name = goblin_majority_coexisting
				duration = -1
			}
		}
	
		#harpy
		else_if = {
			limit = {
				NOT = { has_harpy_majority_trigger = yes }
				culture_group = harpy
			}
			add_permanent_province_modifier = {
				name = harpy_majority_coexisting
				duration = -1
			}
		}
		
		#troll
		else_if = {
			limit = {
				NOT = { has_troll_majority_trigger = yes }
				culture_is_troll = yes
			}
			add_permanent_province_modifier = {
				name = troll_majority_coexisting
				duration = -1
			}
		}
		
		#half_elven
		else_if = {
			limit = {
				NOT = { has_half_elven_majority_trigger = yes }
				culture_is_half_elven = yes
			}
			add_permanent_province_modifier = {
				name = half_elven_majority_coexisting
				duration = -1
			}
		}
		
		#kobold
		else_if = {
			limit = {
				NOT = { has_kobold_majority_trigger = yes }
				culture_group = kobold
			}
			add_permanent_province_modifier = {
				name = kobold_majority_coexisting
				duration = -1
			}
		}
		
		#harimari
		else_if = {
			limit = {
				NOT = { has_harimari_majority_trigger = yes }
				culture_group = harimari
			}
			add_permanent_province_modifier = {
				name = harimari_majority_coexisting
				duration = -1
			}
		}
		
		#hobgoblin
		else_if = {
			limit = {
				NOT = { has_hobgoblin_majority_trigger = yes }
				culture_group = hobgoblin
			}
			add_permanent_province_modifier = {
				name = hobgoblin_majority_coexisting
				duration = -1
			}
		}
		
		#centaur
		else_if = {
			limit = {
				NOT = { has_centaur_majority_trigger = yes }
				culture_group = centaur
			}
			add_permanent_province_modifier = {
				name = centaur_majority_coexisting
				duration = -1
			}
		}
		
		#ogre
		else_if = {
			limit = {
				NOT = { has_ogre_majority_trigger = yes }
				culture_group = ogre
			}
			add_permanent_province_modifier = {
				name = ogre_majority_coexisting
				duration = -1
			}
		}
	}
	update_racial_province_modifier_tolerance = yes
}

cleanup_racial_province_minority_into_majority = {
	
		
	#AddNewRaceHere

	#dwarven
	if = {
		limit = {
			has_dwarven_minority_trigger = yes
			culture_group = dwarven
		}
		remove_province_modifier = dwarven_minority_oppressed_small
		remove_province_modifier = dwarven_minority_coexisting_small
		remove_province_modifier = dwarven_minority_integrated_small
		remove_province_modifier = dwarven_minority_oppressed_large
		remove_province_modifier = dwarven_minority_coexisting_large
		remove_province_modifier = dwarven_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#elven
	else_if = {
		limit = {
			has_elven_minority_trigger = yes
			culture_group = elven
		}
		remove_province_modifier = elven_minority_oppressed_small
		remove_province_modifier = elven_minority_coexisting_small
		remove_province_modifier = elven_minority_integrated_small
		remove_province_modifier = elven_minority_oppressed_large
		remove_province_modifier = elven_minority_coexisting_large
		remove_province_modifier = elven_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#halfling
	else_if = {
		limit = {
			has_halfling_minority_trigger = yes
			culture_group = halfling
		}
		remove_province_modifier = halfling_minority_oppressed_small
		remove_province_modifier = halfling_minority_coexisting_small
		remove_province_modifier = halfling_minority_integrated_small
		remove_province_modifier = halfling_minority_oppressed_large
		remove_province_modifier = halfling_minority_coexisting_large
		remove_province_modifier = halfling_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#gnomish
	else_if = {
		limit = {
			has_gnomish_minority_trigger = yes
			culture_group = gnomish
		}
		remove_province_modifier = gnomish_minority_oppressed_small
		remove_province_modifier = gnomish_minority_coexisting_small
		remove_province_modifier = gnomish_minority_integrated_small
		remove_province_modifier = gnomish_minority_oppressed_large
		remove_province_modifier = gnomish_minority_coexisting_large
		remove_province_modifier = gnomish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#half_orcish
	else_if = {
		limit = {
			has_half_orcish_minority_trigger = yes
			culture_is_half_orcish = yes
		}
		remove_province_modifier = half_orcish_minority_oppressed_small
		remove_province_modifier = half_orcish_minority_coexisting_small
		remove_province_modifier = half_orcish_minority_integrated_small
		remove_province_modifier = half_orcish_minority_oppressed_large
		remove_province_modifier = half_orcish_minority_coexisting_large
		remove_province_modifier = half_orcish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#kobold
	else_if = {
		limit = {
			has_kobold_minority_trigger = yes
			culture_group = kobold
		}
		remove_province_modifier = kobold_minority_oppressed_small
		remove_province_modifier = kobold_minority_coexisting_small
		remove_province_modifier = kobold_minority_integrated_small
		remove_province_modifier = kobold_minority_oppressed_large
		remove_province_modifier = kobold_minority_coexisting_large
		remove_province_modifier = kobold_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#orcish
	else_if = {
		limit = {
			has_orcish_minority_trigger = yes
			culture_group = orcish
		}
		remove_province_modifier = orcish_minority_oppressed_small
		remove_province_modifier = orcish_minority_coexisting_small
		remove_province_modifier = orcish_minority_integrated_small
		remove_province_modifier = orcish_minority_oppressed_large
		remove_province_modifier = orcish_minority_coexisting_large
		remove_province_modifier = orcish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#human
	else_if = {
		limit = {
			has_human_minority_trigger = yes
			culture_is_human = yes
		}
		remove_province_modifier = human_minority_oppressed_small
		remove_province_modifier = human_minority_coexisting_small
		remove_province_modifier = human_minority_integrated_small
		remove_province_modifier = human_minority_oppressed_large
		remove_province_modifier = human_minority_coexisting_large
		remove_province_modifier = human_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#gnollish
	else_if = {
		limit = {
			has_gnollish_minority_trigger = yes
			culture_group = gnollish
		}
		remove_province_modifier = gnollish_minority_oppressed_small
		remove_province_modifier = gnollish_minority_coexisting_small
		remove_province_modifier = gnollish_minority_integrated_small
		remove_province_modifier = gnollish_minority_oppressed_large
		remove_province_modifier = gnollish_minority_coexisting_large
		remove_province_modifier = gnollish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#ruinborn
	else_if = {
		limit = {
			has_ruinborn_minority_trigger = yes
			culture_is_ruinborn = yes
		}
		remove_province_modifier = ruinborn_minority_oppressed_small
		remove_province_modifier = ruinborn_minority_coexisting_small
		remove_province_modifier = ruinborn_minority_integrated_small
		remove_province_modifier = ruinborn_minority_oppressed_large
		remove_province_modifier = ruinborn_minority_coexisting_large
		remove_province_modifier = ruinborn_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#goblin
	else_if = {
		limit = {
			has_goblin_minority_trigger = yes
			culture_group = goblin
		}
		remove_province_modifier = goblin_minority_oppressed_small
		remove_province_modifier = goblin_minority_coexisting_small
		remove_province_modifier = goblin_minority_integrated_small
		remove_province_modifier = goblin_minority_oppressed_large
		remove_province_modifier = goblin_minority_coexisting_large
		remove_province_modifier = goblin_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#harpy
	else_if = {
		limit = {
			has_harpy_minority_trigger = yes
			culture_group = harpy
		}
		remove_province_modifier = harpy_minority_oppressed_small
		remove_province_modifier = harpy_minority_coexisting_small
		remove_province_modifier = harpy_minority_integrated_small
		remove_province_modifier = harpy_minority_oppressed_large
		remove_province_modifier = harpy_minority_coexisting_large
		remove_province_modifier = harpy_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}

	#troll
	else_if = {
		limit = {
			has_troll_minority_trigger = yes
			culture_is_troll = yes
		}
		remove_province_modifier = troll_minority_oppressed_small
		remove_province_modifier = troll_minority_coexisting_small
		remove_province_modifier = troll_minority_integrated_small
		remove_province_modifier = troll_minority_oppressed_large
		remove_province_modifier = troll_minority_coexisting_large
		remove_province_modifier = troll_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#half_elven
	else_if = {
		limit = {
			has_half_elven_minority_trigger = yes
			culture_is_half_elven = yes
		}
		remove_province_modifier = half_elven_minority_oppressed_small
		remove_province_modifier = half_elven_minority_coexisting_small
		remove_province_modifier = half_elven_minority_integrated_small
		remove_province_modifier = half_elven_minority_oppressed_large
		remove_province_modifier = half_elven_minority_coexisting_large
		remove_province_modifier = half_elven_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#harimari
	else_if = {
		limit = {
			has_harimari_minority_trigger = yes
			culture_group = harimari
		}
		remove_province_modifier = harimari_minority_oppressed_small
		remove_province_modifier = harimari_minority_coexisting_small
		remove_province_modifier = harimari_minority_integrated_small
		remove_province_modifier = harimari_minority_oppressed_large
		remove_province_modifier = harimari_minority_coexisting_large
		remove_province_modifier = harimari_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#hobgoblin
	else_if = {
		limit = {
			has_hobgoblin_minority_trigger = yes
			culture_group = harimari
		}
		remove_province_modifier = hobgoblin_minority_oppressed_small
		remove_province_modifier = hobgoblin_minority_coexisting_small
		remove_province_modifier = hobgoblin_minority_integrated_small
		remove_province_modifier = hobgoblin_minority_oppressed_large
		remove_province_modifier = hobgoblin_minority_coexisting_large
		remove_province_modifier = hobgoblin_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#centaur
	else_if = {
		limit = {
			has_centaur_minority_trigger = yes
			culture_group = centaur
		}
		remove_province_modifier = centaur_minority_oppressed_small
		remove_province_modifier = centaur_minority_coexisting_small
		remove_province_modifier = centaur_minority_integrated_small
		remove_province_modifier = centaur_minority_oppressed_large
		remove_province_modifier = centaur_minority_coexisting_large
		remove_province_modifier = centaur_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#ogre
	else_if = {
		limit = {
			has_ogre_minority_trigger = yes
			culture_group = ogre
		}
		remove_province_modifier = ogre_minority_oppressed_small
		remove_province_modifier = ogre_minority_coexisting_small
		remove_province_modifier = ogre_minority_integrated_small
		remove_province_modifier = ogre_minority_oppressed_large
		remove_province_modifier = ogre_minority_coexisting_large
		remove_province_modifier = ogre_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
}

make_majority_primary = {
	#AddNewRaceHere
	
	#dwarven
	if = {
		limit = {
			has_province_modifier = dwarven_majority_integrated
			owner = { has_country_modifier = dwarven_administration }
		}
		remove_province_modifier = dwarven_majority_integrated

		add_permanent_province_modifier = {
			name = dwarven_majority_primary
			duration = -1
		}
	}
	
	#elven
	else_if = {
		limit = {
			has_province_modifier = elven_majority_integrated
			owner = { has_country_modifier = elven_administration }
		}
		remove_province_modifier = elven_majority_integrated

		add_permanent_province_modifier = {
			name = elven_majority_primary
			duration = -1
		}
	}
	
	#halfling
	else_if = {
		limit = {
			has_province_modifier = halfling_majority_integrated
			owner = { has_country_modifier = halfling_administration }
		}
		remove_province_modifier = halfling_majority_integrated

		add_permanent_province_modifier = {
			name = halfling_majority_primary
			duration = -1
		}
	}
	
	#gnomish
	else_if = {
		limit = {
			has_province_modifier = gnomish_majority_integrated
			owner = { has_country_modifier = gnomish_administration }
		}
		remove_province_modifier = gnomish_majority_integrated

		add_permanent_province_modifier = {
			name = gnomish_majority_primary
			duration = -1
		}
	}
	
	#half_orcish
	else_if = {
		limit = {
			has_province_modifier = half_orcish_majority_integrated
			owner = { has_country_modifier = half_orcish_administration }
		}
		remove_province_modifier = half_orcish_majority_integrated

		add_permanent_province_modifier = {
			name = half_orcish_majority_primary
			duration = -1
		}
	}
	
	#kobold
	else_if = {
		limit = {
			has_province_modifier = kobold_majority_integrated
			owner = { has_country_modifier = kobold_administration }
		}
		remove_province_modifier = kobold_majority_integrated

		add_permanent_province_modifier = {
			name = kobold_majority_primary
			duration = -1
		}
	}
	
	#orcish
	else_if = {
		limit = {
			has_province_modifier = orcish_majority_integrated
			owner = { has_country_modifier = orcish_administration }
		}
		remove_province_modifier = orcish_majority_integrated

		add_permanent_province_modifier = {
			name = orcish_majority_primary
			duration = -1
		}
	}
	
	#human
	else_if = {
		limit = {
			has_province_modifier = human_majority_integrated
			owner = { has_country_modifier = human_administration }
		}
		remove_province_modifier = human_majority_integrated

		add_permanent_province_modifier = {
			name = human_majority_primary
			duration = -1
		}
	}
	
	#gnollish
	else_if = {
		limit = {
			has_province_modifier = gnollish_majority_integrated
			owner = { has_country_modifier = gnollish_administration }
		}
		remove_province_modifier = gnollish_majority_integrated

		add_permanent_province_modifier = {
			name = gnollish_majority_primary
			duration = -1
		}
	}
	
	#ruinborn
	else_if = {
		limit = {
			has_province_modifier = ruinborn_majority_integrated
			owner = { has_country_modifier = ruinborn_administration }
		}
		remove_province_modifier = ruinborn_majority_integrated

		add_permanent_province_modifier = {
			name = ruinborn_majority_primary
			duration = -1
		}
	}
	
	#goblin
	else_if = {
		limit = {
			has_province_modifier = goblin_majority_integrated
			owner = { has_country_modifier = goblin_administration }
		}
		remove_province_modifier = goblin_majority_integrated

		add_permanent_province_modifier = {
			name = goblin_majority_primary
			duration = -1
		}
	}
	
	#harpy
	else_if = {
		limit = {
			has_province_modifier = harpy_majority_integrated
			owner = { has_country_modifier = harpy_administration }
		}
		remove_province_modifier = harpy_majority_integrated

		add_permanent_province_modifier = {
			name = harpy_majority_primary
			duration = -1
		}
	}

	#troll
	else_if = {
		limit = {
			has_province_modifier = troll_majority_integrated
			owner = { has_country_modifier = troll_administration }
		}
		remove_province_modifier = troll_majority_integrated

		add_permanent_province_modifier = {
			name = troll_majority_primary
			duration = -1
		}
	}
	
	#half_elven
	else_if = {
		limit = {
			has_province_modifier = half_elven_majority_integrated
			owner = { has_country_modifier = half_elven_administration }
		}
		remove_province_modifier = half_elven_majority_integrated

		add_permanent_province_modifier = {
			name = half_elven_majority_primary
			duration = -1
		}
	}
	
	#harimari
	else_if = {
		limit = {
			has_province_modifier = harimari_majority_integrated
			owner = { has_country_modifier = harimari_administration }
		}
		remove_province_modifier = harimari_majority_integrated

		add_permanent_province_modifier = {
			name = harimari_majority_primary
			duration = -1
		}
	}
	
	#hobgoblin
	else_if = {
		limit = {
			has_province_modifier = hobgoblin_majority_integrated
			owner = { has_country_modifier = hobgoblin_administration }
		}
		remove_province_modifier = hobgoblin_majority_integrated

		add_permanent_province_modifier = {
			name = hobgoblin_majority_primary
			duration = -1
		}
	}
	
	#centaur
	else_if = {
		limit = {
			has_province_modifier = centaur_majority_integrated
			owner = { has_country_modifier = centaur_administration }
		}
		remove_province_modifier = centaur_majority_integrated

		add_permanent_province_modifier = {
			name = centaur_majority_primary
			duration = -1
		}
	}
	
	#ogre
	else_if = {
		limit = {
			has_province_modifier = ogre_majority_integrated
			owner = { has_country_modifier = ogre_administration }
		}
		remove_province_modifier = ogre_majority_integrated

		add_permanent_province_modifier = {
			name = ogre_majority_primary
			duration = -1
		}
	}
}

#----# Scripted effects for pop menu #----#
pop_menu_main_setup = {
	pop_menu_calculations = yes
	set_variable = { which = centaurRanking value = 1 }
	set_variable = { which = dwarvenRanking value = 2 }
	set_variable = { which = elvenRanking value = 3 }
	set_variable = { which = gnollishRanking value = 4 }
	set_variable = { which = gnomishRanking value = 5 }
	set_variable = { which = goblinRanking value = 6 } 
	set_variable = { which = halflingRanking value = 7 }
	set_variable = { which = half_elvenRanking value = 8 }
	set_variable = { which = half_orcishRanking value = 9 }
	set_variable = { which = harimariRanking value = 10 }
	set_variable = { which = harpyRanking value = 11 }
	set_variable = { which = hobgoblinRanking value = 12 }
	set_variable = { which = humanRanking value = 13 }
	set_variable = { which = koboldRanking value = 14 }
	set_variable = { which = ogreRanking value = 15 }
	set_variable = { which = orcishRanking value = 16 }
	set_variable = { which = ruinbornRanking value = 17 }
	set_variable = { which = trollRanking value = 18 }
	pop_menu_main_sorting_effect = yes
}

pop_menu_calculations = {
	set_variable = { which = nbcentaurMajority value = 0 }
	set_variable = { which = nbcentaurMinority value = 0 }
	set_variable = { which = nbcentaurDev value = 0 }
	set_variable = { which = nbdwarvenMajority value = 0 }
	set_variable = { which = nbdwarvenMinority value = 0 }
	set_variable = { which = nbdwarvenDev value = 0 }
	set_variable = { which = nbelvenMajority value = 0 }
	set_variable = { which = nbelvenMinority value = 0 }
	set_variable = { which = nbelvenDev value = 0 }
	set_variable = { which = nbgnollishMajority value = 0 }
	set_variable = { which = nbgnollishMinority value = 0 }
	set_variable = { which = nbgnollishDev value = 0 }
	set_variable = { which = nbgnomishMajority value = 0 }
	set_variable = { which = nbgnomishMinority value = 0 }
	set_variable = { which = nbgnomishDev value = 0 }
	set_variable = { which = nbgoblinMajority value = 0 }
	set_variable = { which = nbgoblinMinority value = 0 }
	set_variable = { which = nbgoblinDev value = 0 }
	set_variable = { which = nbhalflingMajority value = 0 }
	set_variable = { which = nbhalflingMinority value = 0 }
	set_variable = { which = nbhalflingDev value = 0 }
	set_variable = { which = nbhalf_elvenMajority value = 0 }
	set_variable = { which = nbhalf_elvenMinority value = 0 }
	set_variable = { which = nbhalf_elvenDev value = 0 }
	set_variable = { which = nbhalf_orcishMajority value = 0 }
	set_variable = { which = nbhalf_orcishMinority value = 0 }
	set_variable = { which = nbhalf_orcishDev value = 0 }
	set_variable = { which = nbharimariMajority value = 0 }
	set_variable = { which = nbharimariMinority value = 0 }
	set_variable = { which = nbharimariDev value = 0 }
	set_variable = { which = nbharpyMajority value = 0 }
	set_variable = { which = nbharpyMinority value = 0 }
	set_variable = { which = nbharpyDev value = 0 }
	set_variable = { which = nbhobgoblinMajority value = 0 }
	set_variable = { which = nbhobgoblinMinority value = 0 }
	set_variable = { which = nbhobgoblinDev value = 0 }
	set_variable = { which = nbhumanMajority value = 0 }
	set_variable = { which = nbhumanMinority value = 0 }
	set_variable = { which = nbhumanDev value = 0 }
	set_variable = { which = nbkoboldMajority value = 0 }
	set_variable = { which = nbkoboldMinority value = 0 }
	set_variable = { which = nbkoboldDev value = 0 }
	# set_variable = { which = nblizardmanMajority value = 0 }
	# set_variable = { which = nblizardmanMinority value = 0 }
	# set_variable = { which = nblizardmanDev value = 0 }
	# set_variable = { which = nbmechanismMajority value = 0 }
	# set_variable = { which = nbmechanismMinority value = 0 }
	# set_variable = { which = nbmechanismDev value = 0 }
	set_variable = { which = nbogreMajority value = 0 }
	set_variable = { which = nbogreMinority value = 0 }
	set_variable = { which = nbogreDev value = 0 }
	set_variable = { which = nborcishMajority value = 0 }
	set_variable = { which = nborcishMinority value = 0 }
	set_variable = { which = nborcishDev value = 0 }
	set_variable = { which = nbruinbornMajority value = 0 }
	set_variable = { which = nbruinbornMinority value = 0 }
	set_variable = { which = nbruinbornDev value = 0 }
	set_variable = { which = nbtrollMajority value = 0 }
	set_variable = { which = nbtrollMinority value = 0 }
	set_variable = { which = nbttrollDev value = 0 }
	
	every_owned_province = {
		[[cored]
			limit = {
				is_state = yes
				is_state_core = ROOT
			}
		]
		calculate_province_race_values = { RACE = centaur }
		calculate_province_race_values = { RACE = dwarven }
		calculate_province_race_values = { RACE = elven }
		calculate_province_race_values = { RACE = gnollish }
		calculate_province_race_values = { RACE = gnomish }
		calculate_province_race_values = { RACE = goblin }
		calculate_province_race_values = { RACE = halfling }
		calculate_province_race_values = { RACE = half_elven }
		calculate_province_race_values = { RACE = half_orcish }
		calculate_province_race_values = { RACE = harimari }
		calculate_province_race_values = { RACE = harpy }
		calculate_province_race_values = { RACE = hobgoblin }
		calculate_province_race_values = { RACE = human }
		calculate_province_race_values = { RACE = kobold }
		# calculate_province_race_values = { RACE = lizardman }
		# calculate_province_race_values = { RACE = mechanim }
		calculate_province_race_values = { RACE = ogre }
		calculate_province_race_values = { RACE = orcish }
		calculate_province_race_values = { RACE = ruinborn }
		calculate_province_race_values = { RACE = troll }
	}
	
	set_variable = { which = nbTotalDev which = nbcentaurDev }
	change_variable = { which = nbTotalDev which = nbdwarvenDev }
	change_variable = { which = nbTotalDev which = nbelvenDev }
	change_variable = { which = nbTotalDev which = nbgoblinDev }
	change_variable = { which = nbTotalDev which = nbgnollishDev }
	change_variable = { which = nbTotalDev which = nbgnomishDev }
	change_variable = { which = nbTotalDev which = nbhalflingDev }
	change_variable = { which = nbTotalDev which = nbhalf_elvenDev }
	change_variable = { which = nbTotalDev which = nbhalf_orcishDev }
	change_variable = { which = nbTotalDev which = nbharimariDev }
	change_variable = { which = nbTotalDev which = nbharpyDev }
	change_variable = { which = nbTotalDev which = nbhobgoblinDev }
	change_variable = { which = nbTotalDev which = nbhumanDev }
	change_variable = { which = nbTotalDev which = nbkoboldDev }
	# change_variable = { which = nbTotalDev which = nblizardmanDev }
	# change_variable = { which = nbTotalDev which = nbmechanimDev }
	change_variable = { which = nbTotalDev which = nbogreDev }
	change_variable = { which = nbTotalDev which = nborcishDev }
	change_variable = { which = nbTotalDev which = nbruinbornDev }
	change_variable = { which = nbTotalDev which = nbtrollDev }

	pop_menu_round_and_percent = { which = nbcentaurDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbdwarvenDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbelvenDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbgnollishDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbgnomishDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbgoblinDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbhalflingDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbhalf_elvenDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbhalf_orcishDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbharimariDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbharpyDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbhobgoblinDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbhumanDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbkoboldDev total = nbTotalDev }
	# pop_menu_round_and_percent = { which = nblizardmanDev total = nbTotalDev }
	# pop_menu_round_and_percent = { which = nbmechanimDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nborcishDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbogreDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbruinbornDev total = nbTotalDev }
	pop_menu_round_and_percent = { which = nbtrollDev total = nbTotalDev }
}

calculate_province_race_values = {
	if = { limit = { has_$RACE$_majority_trigger = yes }
		export_to_variable = { which = nb$RACE$Dev value = development }
		ROOT = {
			change_variable = { which = nb$RACE$Dev which = PREV }
			change_variable = { which = nb$RACE$Majority value = 1 }
		}
	}
	else_if = { limit = { has_small_$RACE$_minority_trigger = yes }
		export_to_variable = { which = nb$RACE$Dev value = development }
		multiply_variable = { which = nb$RACE$Dev value = 0.05 }
		ROOT = {
			change_variable = { which = nb$RACE$Dev which = PREV }
   			change_variable = { which = nb$RACE$Minority value = 1 }
		}
	}
	else_if = { limit = { has_large_$RACE$_minority_trigger = yes }
		export_to_variable = { which = nb$RACE$Dev value = development }
		multiply_variable = { which = nb$RACE$Dev value = 0.1 }
		ROOT = {
			change_variable = { which = nb$RACE$Dev which = PREV }
   			change_variable = { which = nb$RACE$Minority value = 1 }
		}
	}
}

pop_menu_round_and_percent = {
	divide_variable = { which = $which$ which = $total$ }
	if = { limit = { check_variable = { which = $which$ value = 0.01 } }
		set_variable = { which = temp which = $which$ }
		multiply_variable = { which = temp value = 100 }
		divide_variable = { which = $which$ value = 10 }
		multiply_variable = { which = $which$ value = 1000 }
		subtract_variable = { which = temp which = $which$ }
		if = { limit = { check_variable = { which = temp value = 0.5 } }
			change_variable = { which = $which$ value = 1 }
		}
	}
	else = {
		multiply_variable = { which = $which$ value = 100 }
	}
}

pop_menu_main_sorting_effect = {
	18 = { set_variable = { which = nbcentaurDev which = PREV } set_variable = { which = nbRaceDev which = nbcentaurDev } set_province_flag = not_sorted }
	17 = { set_variable = { which = nbdwarvenDev which = PREV } set_variable = { which = nbRaceDev which = nbdwarvenDev } set_province_flag = not_sorted }
	16 = { set_variable = { which = nbelvenDev which = PREV } set_variable = { which = nbRaceDev which = nbelvenDev } set_province_flag = not_sorted }
	15 = { set_variable = { which = nbgnollishDev which = PREV } set_variable = { which = nbRaceDev which = nbgnollishDev } set_province_flag = not_sorted }
	14 = { set_variable = { which = nbgnomishDev which = PREV } set_variable = { which = nbRaceDev which = nbgnomishDev } set_province_flag = not_sorted }
	13 = { set_variable = { which = nbgoblinDev which = PREV } set_variable = { which = nbRaceDev which = nbgoblinDev } set_province_flag = not_sorted }
	12 = { set_variable = { which = nbhalf_elvenDev which = PREV } set_variable = { which = nbRaceDev which = nbhalf_elvenDev } set_province_flag = not_sorted }
	11 = { set_variable = { which = nbhalf_orcishDev which = PREV } set_variable = { which = nbRaceDev which = nbhalf_orcishDev } set_province_flag = not_sorted }
	10 = { set_variable = { which = nbhalflingDev which = PREV } set_variable = { which = nbRaceDev which = nbhalflingDev } set_province_flag = not_sorted }
	9 = { set_variable = { which = nbharimariDev which = PREV } set_variable = { which = nbRaceDev which = nbharimariDev } set_province_flag = not_sorted }
	8 = { set_variable = { which = nbharpyDev which = PREV } set_variable = { which = nbRaceDev which = nbharpyDev } set_province_flag = not_sorted }
	7 = { set_variable = { which = nbhobgoblinDev which = PREV } set_variable = { which = nbRaceDev which = nbhobgoblinDev } set_province_flag = not_sorted }
	6 = { set_variable = { which = nbhumanDev which = PREV } set_variable = { which = nbRaceDev which = nbhumanDev } set_province_flag = not_sorted }
	5 = { set_variable = { which = nbkoboldDev which = PREV } set_variable = { which = nbRaceDev which = nbkoboldDev } set_province_flag = not_sorted }
	4 = { set_variable = { which = nbogreDev which = PREV } set_variable = { which = nbRaceDev which = nbogreDev } set_province_flag = not_sorted }
	3 = { set_variable = { which = nborcishDev which = PREV } set_variable = { which = nbRaceDev which = nborcishDev } set_province_flag = not_sorted }
	2 = { set_variable = { which = nbruinbornDev which = PREV } set_variable = { which = nbRaceDev which = nbruinbornDev } set_province_flag = not_sorted }
	1 = { set_variable = { which = nbtrollDev which = PREV } set_variable = { which = nbRaceDev which = nbtrollDev } set_province_flag = not_sorted }
	
	set_variable = { which = raceRanking value = 0 }
	2 = { save_event_target_as = most_represented_race }
	
	while = { limit = { NOT = { check_variable = { which = raceRanking value = 18 } } }	#18 = nb of races
		change_variable = { which = raceRanking value = 1 }
		pop_menu_variables = {	#province group that has all the provinces with stored variables
			limit = {
				has_province_flag = not_sorted
				check_variable = { which = nbRaceDev which = event_target:most_represented_race }
			}
			save_event_target_as = most_represented_race
		}
		event_target:most_represented_race = {
			clr_province_flag = not_sorted
			pop_ranking_conversion = yes
			set_variable = { which = nbRaceDev value = 0 }
		}
	}
}

pop_ranking_conversion = {
	if = { limit = { province_id = 18 } ROOT = { set_variable = { which = centaurRanking which = raceRanking } } }
	else_if = { limit = { province_id = 17 } ROOT = { set_variable = { which = dwarvenRanking which = raceRanking } } }
	else_if = { limit = { province_id = 16 } ROOT = { set_variable = { which = elvenRanking which = raceRanking } } }
	else_if = { limit = { province_id = 15 } ROOT = { set_variable = { which = gnollishRanking which = raceRanking } } }
	else_if = { limit = { province_id = 14 } ROOT = { set_variable = { which = gnomishRanking which = raceRanking } } }
	else_if = { limit = { province_id = 13 } ROOT = { set_variable = { which = goblinRanking which = raceRanking } } }
	else_if = { limit = { province_id = 12 } ROOT = { set_variable = { which = half_elvenRanking which = raceRanking } } }
	else_if = { limit = { province_id = 11 } ROOT = { set_variable = { which = half_orcishRanking which = raceRanking } } }
	else_if = { limit = { province_id = 10 } ROOT = { set_variable = { which = halflingRanking which = raceRanking } } }
	else_if = { limit = { province_id = 9 } ROOT = { set_variable = { which = harimariRanking which = raceRanking } } }
	else_if = { limit = { province_id = 8 } ROOT = { set_variable = { which = harpyRanking which = raceRanking } } }
	else_if = { limit = { province_id = 7 } ROOT = { set_variable = { which = hobgoblinRanking which = raceRanking } } }
	else_if = { limit = { province_id = 6 } ROOT = { set_variable = { which = humanRanking which = raceRanking } } }
	else_if = { limit = { province_id = 5 } ROOT = { set_variable = { which = koboldRanking which = raceRanking } } }
	else_if = { limit = { province_id = 4 } ROOT = { set_variable = { which = ogreRanking which = raceRanking } } }
	else_if = { limit = { province_id = 3 } ROOT = { set_variable = { which = orcishRanking which = raceRanking } } }
	else_if = { limit = { province_id = 2 } ROOT = { set_variable = { which = ruinbornRanking which = raceRanking } } }
	else_if = { limit = { province_id = 1 } ROOT = { set_variable = { which = trollRanking which = raceRanking } } }
}

pop_menu_rank_effect = {
	pop_menu_race_selected_effect = { RACE = centaur ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = dwarven ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = elven ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = gnollish ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = gnomish ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = goblin ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = halfling ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = half_elven ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = half_orcish ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = harimari ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = harpy ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = hobgoblin ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = human ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = kobold ORDER = $ORDER$ }
	# pop_menu_race_selected_effect = { RACE = mechanim ORDER = $ORDER$ }
	# pop_menu_race_selected_effect = { RACE = lizardmen ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = ogre ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = orcish ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = ruinborn ORDER = $ORDER$ }
	pop_menu_race_selected_effect = { RACE = troll ORDER = $ORDER$ }
}

pop_menu_race_selected_effect = {
	if = { limit = { is_variable_equal = { which = $RACE$Ranking value = $ORDER$ } }
		custom_tooltip = pop_menu_$RACE$_tt
		hidden_effect = {
			pop_menu_cored_dev_calculations = { RACE = $RACE$ }
			country_event = { id = racial_pop_events_$RACE$.12 }
		}
	}
}

pop_menu_cored_dev_calculations = {
	set_variable = { which = nbRaceCoredDev value = 0 }
	set_variable = { which = nbTotalCoredDev value = 0 }
	
	every_owned_province = {
		limit = {
			is_state = yes
			is_state_core = ROOT
		}
		
		export_to_variable = { which = nbTotalCoredDev value = development }
		export_to_variable = { which = nbRaceCoredDev value = development }
		
		if = { limit = { has_$RACE$_majority_trigger = yes }
			ROOT = { change_variable = { which = nbRaceCoredDev which = PREV } }
		}
		else_if = { limit = { has_small_$RACE$_minority_trigger = yes }
			multiply_variable = { which = nbRaceCoredDev value = 0.05 }
			ROOT = { change_variable = { which = nbRaceCoredDev which = PREV } }
		}
		else_if = { limit = { has_large_$RACE$_minority_trigger = yes }
			multiply_variable = { which = nbRaceCoredDev value = 0.1 }
			ROOT = { change_variable = { which = nbRaceCoredDev which = PREV } }
		}
		
		pop_menu_cored_minorities_calculations = yes
		
		ROOT = {
			change_variable = { which = nbTotalCoredDev which = PREV }
			change_variable = { which = nbTotalCoredDev which = nbMinorityCoredDev }
		}
	}
	
	pop_menu_round_and_percent = { which = nbRaceCoredDev total = nbTotalCoredDev }
}

pop_menu_cored_minorities_calculations = {
	export_to_variable = { which = nbMinorityCoredDev value = development }
	ROOT = { set_variable = { which = nbMinorityCoredDev value = 0 } }
	if = { limit = { has_small_centaur_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_centaur_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_elven_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_elven_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_dwarven_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_dwarven_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_gnollish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_gnollish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_gnomish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_gnomish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_goblin_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_goblin_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_half_elven_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_half_elven_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_half_orcish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_half_orcish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_halfling_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_halfling_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_harimari_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_harimari_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_harpy_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_harpy_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_hobgoblin_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_hobgoblin_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_human_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_human_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_kobold_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_kobold_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	# if = { limit = { has_small_lizardmen_minority_trigger = yes }
		# ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	# }
	# else_if = { limit = { has_large_lizardmen_minority_trigger = yes }
		# ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	# }
	# if = { limit = { has_small_mechanism_minority_trigger = yes }
		# ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	# }
	# else_if = { limit = { has_large_mechanism_minority_trigger = yes }
		# ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	# }
	if = { limit = { has_small_ogre_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_ogre_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_orcish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_orcish_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_ruinborn_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_ruinborn_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	if = { limit = { has_small_troll_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.05 } }
	}
	else_if = { limit = { has_large_troll_minority_trigger = yes }
		ROOT = { change_variable = { which = nbMinorityCoredDev value = 0.10 } }
	}
	ROOT = { multiply_variable = { which = nbMinorityCoredDev which = PREV } }
}

#----# Change military Menu #-----#
pop_menu_military_setup = {
	pop_menu_calculations = { cored = yes }
	set_variable = { which = centaurRanking value = 1 }
	set_variable = { which = dwarvenRanking value = 2 }
	set_variable = { which = elvenRanking value = 3 }
	set_variable = { which = gnollishRanking value = 4 }
	set_variable = { which = gnomishRanking value = 5 }
	set_variable = { which = goblinRanking value = 6 } 
	set_variable = { which = halflingRanking value = 7 }
	set_variable = { which = half_elvenRanking value = 8 }
	set_variable = { which = half_orcishRanking value = 9 }
	set_variable = { which = harimariRanking value = 10 }
	set_variable = { which = harpyRanking value = 11 }
	set_variable = { which = hobgoblinRanking value = 12 }
	set_variable = { which = humanRanking value = 13 }
	set_variable = { which = koboldRanking value = 14 }
	set_variable = { which = ogreRanking value = 15 }
	set_variable = { which = orcishRanking value = 16 }
	set_variable = { which = ruinbornRanking value = 17 }
	set_variable = { which = trollRanking value = 18 }
	pop_menu_military_sorting_effect = yes
}

pop_menu_military_sorting_setup = {
	set_variable = { which = nb$RACE$Dev which = PREV }
	set_variable = { which = nbRaceDev which = nb$RACE$Dev }
	if = { limit = { ROOT = { has_country_modifier = $RACE$_military } }
		ROOT = { set_variable = { which = $RACE$Ranking value = 1 } }
	}
	else_if = { limit = { ROOT = { check_variable = { which = nb$RACE$Dev value = 30 } } }
		set_province_flag = available_not_sorted
		save_event_target_as = most_represented_race
	}
	else = {
		set_province_flag = unavailable_not_sorted
		save_event_target_as = most_represented_race
	}
}

pop_menu_military_sorting_effect = {
	18 = { pop_menu_military_sorting_setup = { RACE = centaur } }
	17 = { pop_menu_military_sorting_setup = { RACE = dwarven } }
	16 = { pop_menu_military_sorting_setup = { RACE = elven } }
	15 = { pop_menu_military_sorting_setup = { RACE = gnollish } }
	14 = { pop_menu_military_sorting_setup = { RACE = gnomish } }
	13 = { pop_menu_military_sorting_setup = { RACE = goblin } }
	12 = {
		set_variable = { which = nbRaceDev value = 0 }
		set_variable = { which = raceRanking value = 18 }
		ROOT = { set_variable = { which = half_elvenRanking value = 18 } }
		# pop_menu_military_sorting_setup = { RACE = half_elven }
	}	#half elven military doesn't exist
	11 = { pop_menu_military_sorting_setup = { RACE = half_orcish } }
	10 = { pop_menu_military_sorting_setup = { RACE = halfling } }
	9 = { pop_menu_military_sorting_setup = { RACE = harimari } }
	8 = { pop_menu_military_sorting_setup = { RACE = harpy } }
	7 = { pop_menu_military_sorting_setup = { RACE = hobgoblin } }
	6 = { pop_menu_military_sorting_setup = { RACE = human } }
	5 = { pop_menu_military_sorting_setup = { RACE = kobold } }
	4 = { pop_menu_military_sorting_setup = { RACE = ogre } }
	3 = { pop_menu_military_sorting_setup = { RACE = orcish } }
	2 = { pop_menu_military_sorting_setup = { RACE = ruinborn } }
	1 = { pop_menu_military_sorting_setup = { RACE = troll } }
	
	set_variable = { which = raceRanking value = 1 }
	
	while = { limit = { pop_menu_variables = { has_province_flag = available_not_sorted } }
		change_variable = { which = raceRanking value = 1 }
		pop_menu_variables = {	#province group that has all the provinces with stored variables
			limit = {
				has_province_flag = available_not_sorted
				check_variable = { which = nbRaceDev which = event_target:most_represented_race }
			}
			save_event_target_as = most_represented_race
		}
		event_target:most_represented_race = {
			clr_province_flag = available_not_sorted
			pop_ranking_conversion = yes
			set_variable = { which = nbRaceDev value = 0 }
		}
	}
	while = { limit = { pop_menu_variables = { has_province_flag = unavailable_not_sorted } }
		change_variable = { which = raceRanking value = 1 }
		pop_menu_variables = {	#province group that has all the provinces with stored variables
			limit = {
				has_province_flag = unavailable_not_sorted
				check_variable = { which = nbRaceDev which = event_target:most_represented_race }
			}
			save_event_target_as = most_represented_race
		}
		event_target:most_represented_race = {
			clr_province_flag = unavailable_not_sorted
			pop_ranking_conversion = yes
			set_variable = { which = nbRaceDev value = 0 }
		}
	}
}

pop_menu_military_change_mil_effects = {
	pop_menu_military_change_mil_race = { RACE = centaur ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = dwarven ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = elven ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = gnollish ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = gnomish ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = goblin ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = halfling ORDER = $ORDER$ }
	# pop_menu_military_change_mil_race = { RACE = half_elven ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = half_orcish ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = harimari ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = harpy ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = hobgoblin ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = human ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = kobold ORDER = $ORDER$ }
	# pop_menu_military_change_mil_race = { RACE = lizarmen ORDER = $ORDER$ }
	# pop_menu_military_change_mil_race = { RACE = mechanism ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = ogre ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = orcish ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = ruinborn ORDER = $ORDER$ }
	pop_menu_military_change_mil_race = { RACE = troll ORDER = $ORDER$ }
}

pop_menu_military_change_mil_race = {
    if = { limit = { is_variable_equal = { which = $RACE$Ranking value = $ORDER$ } }
        if = { limit = { is_variable_equal = { which = $RACE$Ranking value = 1 } }
            custom_tooltip = pop_military_current_tt
            tooltip = { add_country_modifier = { name = $RACE$_military duration = -1 desc = pop_military_modifier_duration_hidden } }
        }
        else_if = {
            limit = {
                mil_power = 200
                high_tolerance_$RACE$_race_trigger = yes
                OR = {
                    check_variable = { which = nb$RACE$Dev value = 30 }
                    AND = {
                        has_country_modifier = $RACE$_administration
                        NOT = { primary_culture = sunrise_elf }
                    }
                }
            }
            add_mil_power = -200
            clear_racial_military = yes
            
            add_country_modifier = { name = restructuring_military duration = 3650 }
            add_country_modifier = { name = $RACE$_military duration = -1 }
            pop_menu_military_change_tech = { RACE = $RACE$ ORDER = $ORDER$ }
        }
        else = {
            custom_tooltip = pop_military_change_not_possible_tt
            if = { limit = { NOT = { mil_power = 200 } }
                custom_tooltip = pop_military_not_enough_milpower_tt
            }
            if = { limit = { NOT = { high_tolerance_$RACE$_race_trigger = yes } }
                custom_tooltip = pop_military_tolerance_too_low_tt
            }
            if = { limit = { NOT = { check_variable = { which = nb$RACE$Dev value = 30 } } }
                custom_tooltip = pop_military_dev_too_low_tt
            }
            if = {
                limit = {
					has_country_modifier = $RACE$_administration
					primary_culture = sunrise_elf
                }
                custom_tooltip = pop_military_primary_is_sunrise_elf_tt
            }
            custom_tooltip = pop_military_separator_tt
            tooltip = { add_country_modifier = { name = $RACE$_military duration = -1 desc = pop_military_modifier_duration_hidden } }
        }
    }
}

pop_menu_military_change_tech = {
	if = { 
		limit = { is_variable_equal = { which = elvenRanking value = $ORDER$ } }
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = deepwoods_superregion }
					primary_culture = wood_elf
					AND = {
						accepted_culture = wood_elf
						NOT = { culture_group = elven }
					}
				}
			}
			change_unit_type = tech_wood_elf
		}
		else_if = {
			limit = {
				OR = {
					primary_culture = sun_elf
					primary_culture = dawn_elf
					primary_culture = desert_elf
					primary_culture = sunrise_elf
					capital_scope = { continent = asia }
					capital_scope = { continent = africa }
					AND = {
						religion_group = bulwari
						OR = {
							capital_scope = { continent = north_america }
							capital_scope = { continent = south_america }
						}
					}
					AND = {
						accepted_culture = sun_elf
						NOT = { culture_group = elven }
					}
					AND = {
						accepted_culture = dawn_elf
						NOT = { culture_group = elven }
					}
					AND = {
						accepted_culture = desert_elf
						NOT = { culture_group = elven }
					}
					AND = {
						accepted_culture = sunrise_elf
						NOT = { culture_group = elven }
					}
				}
			}
			change_unit_type = tech_east_elven
		}
		else = {
			change_unit_type = tech_elven
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = half_orcishRanking value = $ORDER$ } }
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = gerudia_superregion }
					primary_culture = grombar_half_orc
					primary_culture = grombar_orc
					primary_culture = gray_orc
					AND = {
						accepted_culture = grombar_half_orc
						NOT = { culture_is_half_orcish = yes }
					}
					AND = {
						accepted_culture = grombar_orc
						NOT = { culture_is_half_orcish = yes }
					}
					AND = {
						accepted_culture = gray_orc
						NOT = { culture_is_half_orcish = yes }
					}
				}
			}
			change_unit_type = tech_gerudian
		}
		else = {
			change_unit_type = tech_cannorian
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = harimariRanking value = $ORDER$ } }
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					primary_culture = east_harimari
					AND = {
						accepted_culture = east_harimari
						NOT = { culture_group = harimari }
					}
				}
			}
			change_unit_type = tech_east_harimari
		}
		else = {
			change_unit_type = tech_harimari
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = harpyRanking value = $ORDER$ } }
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					primary_culture = feng_harpy
					AND = {
						accepted_culture = feng_harpy
						NOT = { culture_group = harpy }
					}
				}
			}
			change_unit_type = tech_east_harpy
		}
		else = {
			change_unit_type = tech_harpy
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = humanRanking value = $ORDER$ } }
		if = { limit = { capital_scope = { superregion = bulwar_superregion } }
			change_unit_type = tech_bulwari
		}
		else_if = { limit = { capital_scope = { superregion = salahad_superregion } }
			change_unit_type = tech_salahadesi
		}
		else_if = { limit = { capital_scope = { superregion = rahen_superregion } }
			change_unit_type = tech_raheni
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
				}
			}
			change_unit_type = tech_halessi
		}
		else_if = { limit = { capital_scope = { superregion = north_haless_superregion } }
			change_unit_type = tech_shuvuush
		}
		else_if = { limit = { capital_scope = { superregion = forbidden_lands_superregion } }
			change_unit_type = tech_islanders
		}
		else_if = { limit = { capital_scope = { superregion = gerudia_superregion } }
			change_unit_type = tech_gerudian
		}
		else = {
			change_unit_type = tech_cannorian
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = koboldRanking value = $ORDER$ } }
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					capital_scope = { superregion = rahen_superregion }
					primary_culture = goldscale_kobold
					AND = {
						accepted_culture = goldscale_kobold
						NOT = { culture_group = kobold }
					}
				}
			}
			change_unit_type = tech_east_kobold
		}
		else = {
			change_unit_type = tech_kobold
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = ogreRanking value = $ORDER$ } }
		if = {
			limit = {
				OR = {
					capital_scope = { superregion = yanshen_superregion }
					capital_scope = { superregion = south_haless_superregion }
					capital_scope = { superregion = north_haless_superregion }
					capital_scope = { superregion = rahen_superregion }
					primary_culture = horned_ogre
					AND = {
						accepted_culture = horned_ogre
						NOT = { culture_group = ogre }
					}
				}
			}
			change_unit_type = tech_eastern_ogre
		}
		else = {
			change_unit_type = tech_ogre	#may need custom one
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = orcishRanking value = $ORDER$ } }
		if = {
			limit = {
				OR = {
					capital_scope = {
						continent = serpentspine
					}
					primary_culture = black_orc
					AND = {
						accepted_culture = black_orc
						NOT = { culture_group = orcish }
					}
				}
			}
			change_unit_type = tech_black_orcish
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = {
						continent = asia
						NOT = { superregion = forbidden_lands_superregion }
					}
					primary_culture = brown_orc
					AND = {
						accepted_culture = brown_orc
						NOT = { culture_group = orcish }
					}
				}
			}
			change_unit_type = tech_east_orcish
		}
		else = {
			change_unit_type = tech_orcish
		}
	}
	else_if = { 
		limit = { is_variable_equal = { which = ruinbornRanking value = $ORDER$ } }
		if = { limit = { capital_scope = { superregion = ynn_superregion } }
			change_unit_type = tech_ynnic
		}
		else_if = { limit = { capital_scope = { superregion = eordand_superregion } }
			change_unit_type = tech_eordand
		}
		else_if = { limit = { capital_scope = { superregion = kheionai_superregion } }
			change_unit_type = tech_kheionai
		}
		else_if = { limit = { capital_scope = { superregion = greater_taychend_superregion } }
			change_unit_type = tech_taychendi
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = { superregion = north_aelantir_superregion }
					capital_scope = { superregion = ruined_sea_superregion }
					capital_scope = { superregion = torn_sea_superregion }
				}
			}
			change_unit_type = tech_north_aelantiri
		}
		else_if = {
			limit = {
				OR = {
					capital_scope = { superregion = south_aelantir_superregion }
					capital_scope = { superregion = effelai_superregion }
				}
			}
			change_unit_type = tech_south_aelantiri
		}
		else = {
			change_unit_type = tech_north_aelantiri
		}
	}
	else = {
		change_unit_type = tech_$RACE$
	}
}

racial_purge_disabled_tt =  {
    custom_tooltip = pop_menu_unavailable_tt
    if = { limit = { has_country_modifier = forced_to_end_$RACE$_purge }
		custom_tooltip = pop_menu_cannot_purge_forced_tt
    }
    if = { limit = { has_country_modifier = racial_pop_$RACE$_expulsion }
		custom_tooltip = pop_menu_cannot_purge_while_expelling_tt
    }
    if = { limit = { has_country_modifier = $RACE$_administration }
		custom_tooltip = pop_menu_cannot_purge_own_race_tt
    }
    if = { limit = { has_country_modifier = $RACE$_military }
		custom_tooltip = pop_menu_cannot_purge_military_race_tt
    }
    if = { limit = { ruler_is_$RACE$ = yes }
		custom_tooltip = pop_menu_cannot_purge_ruler_race_tt
    }
	if = { 
		limit = { 
			has_country_flag = has_caste_estates
			is_race_in_any_caste = {
				$RACE$ = yes
			}
		}
		custom_tooltip = pop_menu_cannot_purge_castes_tt
	}
    if = { limit = { NOT = { adm_power = 100 } }
		custom_tooltip = pop_menu_cannot_purge_not_enough_adm_tt
    }
	if = { limit = { OR = { has_government_attribute = disabled_purging has_government_attribute = disabled_purging_$RACE$ } }
		custom_tooltip = pop_menu_cannot_purge_government_attribute_tt 
	}
    hidden_effect = {
		country_event = { id = racial_pop_events_$RACE$.24 }
    }
}

racial_expel_disabled_tt = {
	custom_tooltip = pop_menu_unavailable_tt
	if = { limit = { has_country_modifier = racial_pop_$RACE$_purge }
		custom_tooltip = pop_menu_cannot_expel_while_purging_tt
	}
	if = { limit = { has_country_modifier = $RACE$_administration }
		custom_tooltip = pop_menu_cannot_expel_own_race_tt
	}
	if = { limit = { has_country_modifier = $RACE$_military }
		custom_tooltip = pop_menu_cannot_expel_military_race_tt
	}
	if = { limit = { ruler_is_$RACE$ = yes }
		custom_tooltip = pop_menu_cannot_expel_ruler_race_tt
	}
	if = { 
		limit = { 
			has_country_flag = has_caste_estates
			is_race_in_any_caste = {
				$RACE$ = yes
			}
		}
		custom_tooltip = pop_menu_cannot_purge_castes_tt
	}
	if = { limit = { NOT = { adm_power = 50 } }
		custom_tooltip = pop_menu_cannot_expel_not_enough_adm_tt
	}
	if = { limit = { OR = { has_government_attribute = disabled_expelling has_government_attribute = disabled_expelling_$RACE$ } }
		custom_tooltip = pop_menu_cannot_expel_government_attribute_tt 
	}
	hidden_effect = {
		country_event = { id = racial_pop_events_$RACE$.24 }
    }
}

remove_racial_majority = {
	remove_province_modifier = centaur_majority_primary
	remove_province_modifier = centaur_majority_integrated
	remove_province_modifier = centaur_majority_coexisting
	remove_province_modifier = centaur_majority_oppressed
	remove_province_modifier = dwarven_majority_primary
	remove_province_modifier = dwarven_majority_integrated
	remove_province_modifier = dwarven_majority_coexisting
	remove_province_modifier = dwarven_majority_oppressed
	remove_province_modifier = elven_majority_primary
	remove_province_modifier = elven_majority_integrated
	remove_province_modifier = elven_majority_coexisting
	remove_province_modifier = elven_majority_oppressed
	remove_province_modifier = gnollish_majority_primary
	remove_province_modifier = gnollish_majority_integrated
	remove_province_modifier = gnollish_majority_coexisting
	remove_province_modifier = gnollish_majority_oppressed
	remove_province_modifier = gnomish_majority_primary
	remove_province_modifier = gnomish_majority_integrated
	remove_province_modifier = gnomish_majority_coexisting
	remove_province_modifier = gnomish_majority_oppressed
	remove_province_modifier = goblin_majority_primary
	remove_province_modifier = goblin_majority_integrated
	remove_province_modifier = goblin_majority_coexisting
	remove_province_modifier = goblin_majority_oppressed
	remove_province_modifier = halfling_majority_primary
	remove_province_modifier = halfling_majority_integrated
	remove_province_modifier = halfling_majority_coexisting
	remove_province_modifier = halfling_majority_oppressed
	remove_province_modifier = half_elven_majority_primary
	remove_province_modifier = half_elven_majority_integrated
	remove_province_modifier = half_elven_majority_coexisting
	remove_province_modifier = half_elven_majority_oppressed
	remove_province_modifier = half_orcish_majority_primary
	remove_province_modifier = half_orcish_majority_integrated
	remove_province_modifier = half_orcish_majority_coexisting
	remove_province_modifier = half_orcish_majority_oppressed
	remove_province_modifier = harimari_majority_primary
	remove_province_modifier = harimari_majority_integrated
	remove_province_modifier = harimari_majority_coexisting
	remove_province_modifier = harimari_majority_oppressed
	remove_province_modifier = harpy_majority_primary
	remove_province_modifier = harpy_majority_integrated
	remove_province_modifier = harpy_majority_coexisting
	remove_province_modifier = harpy_majority_oppressed
	remove_province_modifier = hobgoblin_majority_primary
	remove_province_modifier = hobgoblin_majority_integrated
	remove_province_modifier = hobgoblin_majority_coexisting
	remove_province_modifier = hobgoblin_majority_oppressed
	remove_province_modifier = human_majority_primary
	remove_province_modifier = human_majority_integrated
	remove_province_modifier = human_majority_coexisting
	remove_province_modifier = human_majority_oppressed
	remove_province_modifier = kobold_majority_primary
	remove_province_modifier = kobold_majority_integrated
	remove_province_modifier = kobold_majority_coexisting
	remove_province_modifier = kobold_majority_oppressed
	remove_province_modifier = ogre_majority_primary
	remove_province_modifier = ogre_majority_integrated
	remove_province_modifier = ogre_majority_coexisting
	remove_province_modifier = ogre_majority_oppressed
	remove_province_modifier = orcish_majority_primary
	remove_province_modifier = orcish_majority_integrated
	remove_province_modifier = orcish_majority_coexisting
	remove_province_modifier = orcish_majority_oppressed
	remove_province_modifier = ruinborn_majority_primary
	remove_province_modifier = ruinborn_majority_integrated
	remove_province_modifier = ruinborn_majority_coexisting
	remove_province_modifier = ruinborn_majority_oppressed
	remove_province_modifier = troll_majority_primary
	remove_province_modifier = troll_majority_integrated
	remove_province_modifier = troll_majority_coexisting
	remove_province_modifier = troll_majority_oppressed
}
