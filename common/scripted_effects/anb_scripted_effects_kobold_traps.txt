create_kobold_traps = {
	# STEP 1. Apply the right modifier
	if = {
		limit = { has_province_modifier = modified_kobold_traps_lvl_3 }
		remove_province_modifier = modified_kobold_traps_lvl_3
		add_permanent_province_modifier = {
			name = modified_kobold_traps_lvl_4
			duration = -1
		}
		change_culture = ROOT
		change_religion = ROOT
	}
	else_if = {
		limit = { has_province_modifier = modified_kobold_traps_lvl_2 }
		remove_province_modifier = modified_kobold_traps_lvl_2
		add_permanent_province_modifier = {
			name = modified_kobold_traps_lvl_3
			duration = -1
		}       
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
		if = {
			limit = { NOT = { culture_group = kobold } }
			add_kobold_minority_size_effect = yes
		}
	}
	else_if = {
		limit = { has_province_modifier = modified_kobold_traps_lvl_1 }
		remove_province_modifier = modified_kobold_traps_lvl_1
		add_permanent_province_modifier = {
			name = modified_kobold_traps_lvl_2
			duration = -1
		}       
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
		hidden_effect = { set_province_flag = kobold_traps_lvl_2_or_more } #this is relevant for events
		if = {
			limit = { NOT = { culture_group = kobold } }
			add_kobold_minority_size_effect = yes
		}
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_3 }
		remove_province_modifier = kobold_traps_lvl_3
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_4
			duration = -1
		}
		change_culture = ROOT
		change_religion = ROOT
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_2 }
		remove_province_modifier = kobold_traps_lvl_2
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_3
			duration = -1
		}		
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
		if = {
			limit = { NOT = { culture_group = kobold } }
			add_kobold_minority_size_effect = yes
		}
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_1 }
		remove_province_modifier = kobold_traps_lvl_1
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_2
			duration = -1
		}		
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
		hidden_effect = { set_province_flag = kobold_traps_lvl_2_or_more } #this is relevant for events
		if = {
			limit = { NOT = { culture_group = kobold } }
			add_kobold_minority_size_effect = yes
		}
	}	
	else_if = {
		limit = { owner = { has_country_flag = modified_kobold_traps } }
		add_permanent_province_modifier = {
			name = modified_kobold_traps_lvl_1
			duration = -1
		}
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
	}
	else = {
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_1
			duration = -1
		}
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}		
	}
	# STEP 2. Activates the local kobold traps flag, for siege and event purposes
	hidden_effect = { set_province_flag = has_kobold_traps } 
	# STEP 3. Handle building construction
	if = {
		limit = { has_fort_building_trigger = no }
		add_building_construction = {
			building = fort_15th
			cost = 0.5
			speed = 0.5
		}
	}
	# STEP 4. Add extra modifier if relevant
	if = {
		limit = { owner = { has_country_flag = code_cracked_mega_trap } }
		add_permanent_province_modifier = {
			name = crypts_and_cryptographies
			duration = -1
		}
		owner = { clr_country_flag = code_cracked_mega_trap }
	}
}	

kobold_trap_mastery_effect = {
	# STEP 1. Change the variable counter
	hidden_effect = {
		change_variable = {
			which = trap_mastery_counter
			value = 1
		}
	}
	# STEP 2. Make sure the right country modifier is set
	if = {
		limit = {
			AND = {
				check_variable = {
					which = trap_mastery_counter
					value = 40
				}
				NOT = { has_country_modifier = trap_mastery_lvl_3 }
			}
		}
		remove_country_modifier = trap_mastery_lvl_2
		add_country_modifier = {
			name = trap_mastery_lvl_3
			duration = -1
		}
	}
	else_if = {
		limit = {
			AND = {
				check_variable = {
					which = trap_mastery_counter
					value = 20
				}
				NOT = { 
					OR = {
						has_country_modifier = trap_mastery_lvl_2 
						has_country_modifier = trap_mastery_lvl_3
					}
				}
			}
		}
		remove_country_modifier = trap_mastery_lvl_1
		add_country_modifier = {
			name = trap_mastery_lvl_2
			duration = -1
		}
	}
	else_if = {
		limit = {
			AND = {
				check_variable = {
					which = trap_mastery_counter
					value = 5
				}
				NOT = { 
					OR = {
						has_country_modifier = trap_mastery_lvl_1 
						has_country_modifier = trap_mastery_lvl_2
						has_country_modifier = trap_mastery_lvl_3
					}
				}
			}
		}
		add_country_modifier = {
			name = trap_mastery_lvl_1
			duration = -1
		}
	}
	# STEP 3. Activates the country kobold traps flag, for event purposes
	hidden_effect = {
		set_country_flag = has_kobold_traps # Activate the kobold traps pulse events, just in case you haven't already
	}
	# STEP 4. Clear flags indicating that the decision is being used
	hidden_effect = {
		if = {
			limit = { has_country_flag = free_traps_happening }
			clr_country_flag = free_traps_happening
		}
		else = {
			clr_country_flag = normal_traps_happening
		}
	}
	custom_tooltip = KoboldTrapsDynamicTooltip
}

change_kobold_culture_based_on_fleeing_province = {
	if = {
		limit = { has_global_flag = formed_kobildzan_flag }
		change_culture = kobildzani_kobold
	}
	else_if = { # Changing province culture based on source province
		limit = { 
			event_target:kobolds_fleeing_province = {
				OR = {
					region = alenic_frontier_region
					province_id = 695
				}
			}
		}
		change_culture = greenscale_kobold
	}
	else_if = {
		limit = { 
			event_target:kobolds_fleeing_province = {
				OR = {
					area = dragonmaw_area
					area = dragonspine_area
					area = dragonheights_area
				}
			}
		}
		change_culture = bluescale_kobold				
	}
	else = {
		change_culture = redscale_kobold
	}	
}

kobold_traps_removal_effect = {
	clr_province_flag = has_kobold_traps
	if = {
		limit = { has_province_modifier = kobold_traps_lvl_4 }
		remove_province_modifier = kobold_traps_lvl_4
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_3 }
		remove_province_modifier = kobold_traps_lvl_3
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_2 }
		remove_province_modifier = kobold_traps_lvl_2
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_1 }
		remove_province_modifier = kobold_traps_lvl_1
	}	
	else_if = {
		limit = { has_province_modifier = modified_kobold_traps_lvl_4 }
		remove_province_modifier = modified_kobold_traps_lvl_4
	}
	else_if = {
		limit = { has_province_modifier = modified_kobold_traps_lvl_3 }
		remove_province_modifier = modified_kobold_traps_lvl_3
	}
	else_if = {
		limit = { has_province_modifier = modified_kobold_traps_lvl_2 }
		remove_province_modifier = modified_kobold_traps_lvl_2
	}
	else_if = {
		limit = { has_province_modifier = modified_kobold_traps_lvl_1 }
		remove_province_modifier = modified_kobold_traps_lvl_1
	}		
	if = {
		limit = { has_building = fort_15th }
		remove_building = fort_15th
	}		
	else_if = {
		limit = { has_building = fort_16th }
		remove_building = fort_16th
	}	
	else_if = {
		limit = { has_building = fort_17th }
		remove_building = fort_17th
	}		
	else_if = {
		limit = { has_building = fort_18th }
		remove_building = fort_18th
	}
}